/* Generated by Cython 0.13.beta0 on Tue Aug 10 14:12:47 2010 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#else

#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif

#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif

#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif

#if PY_VERSION_HEX < 0x02040000
  #define METH_COEXIST 0
  #define PyDict_CheckExact(op) (Py_TYPE(op) == &PyDict_Type)
  #define PyDict_Contains(d,o)   PySequence_Contains(d,o)
#endif

#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   PyInt_AsLong(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
#endif

#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)

  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;

  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)

#endif

#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
#endif

#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif

#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif

#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif

#ifndef PySet_CheckExact
#  define PySet_CheckExact(obj)          (Py_TYPE(obj) == &PySet_Type)
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif

#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif

#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif

#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif

#ifdef __cplusplus
#define __PYX_EXTERN_C extern "C"
#else
#define __PYX_EXTERN_C extern
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE_API__yt__ramses_reader
#include "stdlib.h"
#include "stdio.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include <vector>
#include <map>
#include "string"
#include "RAMSES_typedefs.h"
#include "RAMSES_info.hh"
#include "RAMSES_amr_data.hh"

/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE 
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__)) 
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || defined(__INTEL_COMPILER)
#   define CYTHON_UNUSED __attribute__ ((__unused__)) 
# else
#   define CYTHON_UNUSED 
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))


#ifdef __GNUC__
/* Test for GCC > 2.95 */
#if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)) 
#define likely(x)   __builtin_expect(!!(x), 1)
#define unlikely(x) __builtin_expect(!!(x), 0)
#else /* __GNUC__ > 2 ... */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;


#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif

#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif

static const char *__pyx_f[] = {
  "ramses_reader.pyx",
  "numpy.pxd",
};

typedef npy_int8 __pyx_t_5numpy_int8_t;

typedef npy_int16 __pyx_t_5numpy_int16_t;

typedef npy_int32 __pyx_t_5numpy_int32_t;

typedef npy_int64 __pyx_t_5numpy_int64_t;

typedef npy_uint8 __pyx_t_5numpy_uint8_t;

typedef npy_uint16 __pyx_t_5numpy_uint16_t;

typedef npy_uint32 __pyx_t_5numpy_uint32_t;

typedef npy_uint64 __pyx_t_5numpy_uint64_t;

typedef npy_float32 __pyx_t_5numpy_float32_t;

typedef npy_float64 __pyx_t_5numpy_float64_t;

typedef npy_long __pyx_t_5numpy_int_t;

typedef npy_longlong __pyx_t_5numpy_long_t;

typedef npy_intp __pyx_t_5numpy_intp_t;

typedef npy_uintp __pyx_t_5numpy_uintp_t;

typedef npy_ulong __pyx_t_5numpy_uint_t;

typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

typedef npy_double __pyx_t_5numpy_float_t;

typedef npy_double __pyx_t_5numpy_double_t;

typedef npy_longdouble __pyx_t_5numpy_longdouble_t;

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif

/* Type declarations */

typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":370
 *         vector[vector[double]] m_var_array
 * 
 * cdef class RAMSES_tree_proxy:             # <<<<<<<<<<<<<<
 *     cdef string *snapshot_name
 *     cdef snapshot *rsnap
 */

struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy {
  PyObject_HEAD
  std::string *snapshot_name;
  RAMSES::snapshot *rsnap;
  RAMSES::AMR::RAMSES_tree **trees;
  RAMSES::HYDRO::RAMSES_hydro_data ***hydro_datas;
  int *loaded;
  PyObject *field_ind;
  PyObject *field_names;
  int ndomains;
  int nfields;
};

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":599
 *         return tr
 * 
 * cdef class ProtoSubgrid:             # <<<<<<<<<<<<<<
 *     cdef np.int64_t *signature[3]
 *     cdef np.int64_t left_edge[3]
 */

struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid {
  PyObject_HEAD
  __pyx_t_5numpy_int64_t *signature[3];
  __pyx_t_5numpy_int64_t left_edge[3];
  __pyx_t_5numpy_int64_t right_edge[3];
  __pyx_t_5numpy_int64_t dimensions[3];
  __pyx_t_5numpy_float64_t efficiency;
  PyObject *sigs;
  PyObject *grid_file_locations;
  PyObject *dd;
};

#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif

#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct * __Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
  end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
  }
  #define __Pyx_RefNannySetupContext(name)           void *__pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
  #define __Pyx_RefNannyFinishContext()           __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r) __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r) __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r) __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XDECREF(r) do { if((r) != NULL) {__Pyx_DECREF(r);} } while(0)
#else
  #define __Pyx_RefNannySetupContext(name)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);} } while(0)
#define __Pyx_XGOTREF(r) do { if((r) != NULL) {__Pyx_GOTREF(r);} } while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name, PyObject* kw_name); /*proto*/

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[],     PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,     const char* function_name); /*proto*/

static CYTHON_INLINE PyObject* __Pyx_PyObject_Append(PyObject* L, PyObject* x) {
    if (likely(PyList_CheckExact(L))) {
        if (PyList_Append(L, x) < 0) return NULL;
        Py_INCREF(Py_None);
        return Py_None; /* this is just to have an accurate signature */
    }
    else {
        PyObject *r, *m;
        m = __Pyx_GetAttrString(L, "append");
        if (!m) return NULL;
        r = PyObject_CallFunctionObjArgs(m, x, NULL);
        Py_DECREF(m);
        return r;
    }
}


static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}


#define __Pyx_GetItemInt_List(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {
    if (likely(o != Py_None)) {
        if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, i);
            Py_INCREF(r);
            return r;
        }
        else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
            PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
            Py_INCREF(r);
            return r;
        }
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}


#define __Pyx_GetItemInt(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i) {
    PyObject *r;
    if (PyList_CheckExact(o) && ((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (PyTuple_CheckExact(o) && ((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
    }
    else if (Py_TYPE(o)->tp_as_sequence && Py_TYPE(o)->tp_as_sequence->sq_item && (likely(i >= 0))) {
        r = PySequence_GetItem(o, i);
    }
    else {
        r = __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
    }
    return r;
}

#define __Pyx_SetItemInt(o, i, v, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_SetItemInt_Fast(o, i, v) : \
                                                    __Pyx_SetItemInt_Generic(o, to_py_func(i), v))

static CYTHON_INLINE int __Pyx_SetItemInt_Generic(PyObject *o, PyObject *j, PyObject *v) {
    int r;
    if (!j) return -1;
    r = PyObject_SetItem(o, j, v);
    Py_DECREF(j);
    return r;
}

static CYTHON_INLINE int __Pyx_SetItemInt_Fast(PyObject *o, Py_ssize_t i, PyObject *v) {
    if (PyList_CheckExact(o) && ((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        Py_INCREF(v);
        Py_DECREF(PyList_GET_ITEM(o, i));
        PyList_SET_ITEM(o, i, v);
        return 1;
    }
    else if (Py_TYPE(o)->tp_as_sequence && Py_TYPE(o)->tp_as_sequence->sq_ass_item && (likely(i >= 0)))
        return PySequence_SetItem(o, i, v);
    else {
        PyObject *j = PyInt_FromSsize_t(i);
        return __Pyx_SetItemInt_Generic(o, j, v);
    }
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact); /*proto*/

/* Run-time type information about structs used with buffers */
struct __Pyx_StructField_;

typedef struct {
  const char* name; /* for error messages only */
  struct __Pyx_StructField_* fields;
  size_t size;     /* sizeof(type) */
  char typegroup; /* _R_eal, _C_omplex, Signed _I_nt, _U_nsigned int, _S_truct, _P_ointer, _O_bject */
} __Pyx_TypeInfo;

typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;

typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;


static CYTHON_INLINE int  __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj, __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static void __Pyx_RaiseBufferIndexError(int axis); /*proto*/
#define __Pyx_BufPtrStrided2d(type, buf, i0, s0, i1, s1) (type)((char*)buf + i0 * s0 + i1 * s1)

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/
#define __Pyx_BufPtrStrided1d(type, buf, i0, s0) (type)((char*)buf + i0 * s0)

static void __Pyx_RaiseBufferFallbackError(void); /*proto*/

static CYTHON_INLINE __pyx_t_5numpy_int64_t __Pyx_div___pyx_t_5numpy_int64_t(__pyx_t_5numpy_int64_t, __pyx_t_5numpy_int64_t); /* proto */

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index); /*proto*/
#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
#define __Pyx_GetBuffer PyObject_GetBuffer
#define __Pyx_ReleaseBuffer PyBuffer_Release
#endif

Py_ssize_t __Pyx_zeros[] = {0, 0, 0};
Py_ssize_t __Pyx_minusones[] = {-1, -1, -1};

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list); /*proto*/

static int __Pyx_Print(PyObject*, PyObject *, int); /*proto*/
#if PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

static CYTHON_INLINE long __Pyx_pow_long(long, long); /* proto */

static CYTHON_INLINE npy_int64 __Pyx_PyInt_from_py_npy_int64(PyObject *);

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_npy_int64(npy_int64);

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif

#if defined(_WIN32) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    /*#define __Pyx_c_absf(z)     (::std::abs(z))*/
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    /*#define __Pyx_c_absf(z)     (cabsf(z))*/
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    /*static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);*/
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    /*#define __Pyx_c_abs(z)     (::std::abs(z))*/
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    /*#define __Pyx_c_abs(z)     (cabs(z))*/
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    /*static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);*/
#endif

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, long size, int strict);  /*proto*/

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static void __Pyx_AddTraceback(const char *funcname); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/
/* Module declarations from libc.stdlib */

/* Module declarations from cpython.buffer */

/* Module declarations from cpython.ref */

/* Module declarations from libc.stdio */

/* Module declarations from cpython.object */

/* Module declarations from numpy */

/* Module declarations from numpy */

static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *, PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *, PyObject *, PyObject *, PyObject *, PyObject *); /*proto*/
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/
static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *, PyObject *); /*proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *); /*proto*/
/* Module declarations from cython */

/* Module declarations from yt.ramses_reader */

static PyTypeObject *__pyx_ptype_2yt_13ramses_reader_RAMSES_tree_proxy = 0;
static PyTypeObject *__pyx_ptype_2yt_13ramses_reader_ProtoSubgrid = 0;
static CYTHON_INLINE __pyx_t_5numpy_int64_t __pyx_f_2yt_13ramses_reader_i64max(__pyx_t_5numpy_int64_t, __pyx_t_5numpy_int64_t); /*proto*/
static CYTHON_INLINE __pyx_t_5numpy_int64_t __pyx_f_2yt_13ramses_reader_i64min(__pyx_t_5numpy_int64_t, __pyx_t_5numpy_int64_t); /*proto*/
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t = { "float64_t", NULL, sizeof(__pyx_t_5numpy_float64_t), 'R' };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t = { "int32_t", NULL, sizeof(__pyx_t_5numpy_int32_t), 'I' };
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t = { "int64_t", NULL, sizeof(__pyx_t_5numpy_int64_t), 'I' };
#define __Pyx_MODULE_NAME "yt.ramses_reader"
int __pyx_module_is_main_yt__ramses_reader = 0;

/* Implementation of yt.ramses_reader */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static char __pyx_k_1[] = "READING FROM DISK";
static char __pyx_k_2[] = "get_absolute_position";
static char __pyx_k_3[] = "ndarray is not C contiguous";
static char __pyx_k_4[] = "ndarray is not Fortran contiguous";
static char __pyx_k_5[] = "Non-native byte order not supported";
static char __pyx_k_6[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_7[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_8[] = "Format string allocated too short.";
static char __pyx_k_9[] = "\nWrapping code for Oliver Hahn's RamsesRead++\n\nAuthor: Matthew Turk <matthewturk@gmail.com>\nAffiliation: UCSD\nAuthor: Oliver Hahn <ohahn@stanford.edu>\nAffiliation: KIPAC / Stanford\nHomepage: http://yt.enzotools.org/\nLicense:\n  Copyright (C) 2010 Matthew Turk.  All Rights Reserved.\n\n  This file is part of yt.\n\n  yt is free software; you can redistribute it and/or modify\n  it under the terms of the GNU General Public License as published by\n  the Free Software Foundation; either version 3 of the License, or\n  (at your option) any later version.\n\n  This program is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  GNU General Public License for more details.\n\n  You should have received a copy of the GNU General Public License\n  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n";
static char __pyx_k__B[] = "B";
static char __pyx_k__F[] = "F";
static char __pyx_k__H[] = "H";
static char __pyx_k__I[] = "I";
static char __pyx_k__L[] = "L";
static char __pyx_k__O[] = "O";
static char __pyx_k__Q[] = "Q";
static char __pyx_k__b[] = "b";
static char __pyx_k__d[] = "d";
static char __pyx_k__f[] = "f";
static char __pyx_k__g[] = "g";
static char __pyx_k__h[] = "h";
static char __pyx_k__i[] = "i";
static char __pyx_k__l[] = "l";
static char __pyx_k__q[] = "q";
static char __pyx_k__x[] = "x";
static char __pyx_k__y[] = "y";
static char __pyx_k__z[] = "z";
static char __pyx_k__H0[] = "H0";
static char __pyx_k__Zd[] = "Zd";
static char __pyx_k__Zf[] = "Zf";
static char __pyx_k__Zg[] = "Zg";
static char __pyx_k__dd[] = "dd";
static char __pyx_k__fn[] = "fn";
static char __pyx_k__np[] = "np";
static char __pyx_k__zc[] = "zc";
static char __pyx_k__zs[] = "zs";
static char __pyx_k__buf[] = "buf";
static char __pyx_k__end[] = "end";
static char __pyx_k__obj[] = "obj";
static char __pyx_k__aexp[] = "aexp";
static char __pyx_k__base[] = "base";
static char __pyx_k__data[] = "data";
static char __pyx_k__ncpu[] = "ncpu";
static char __pyx_k__ndim[] = "ndim";
static char __pyx_k__next[] = "next";
static char __pyx_k__ones[] = "ones";
static char __pyx_k__read[] = "read";
static char __pyx_k__sigs[] = "sigs";
static char __pyx_k__size[] = "size";
static char __pyx_k__time[] = "time";
static char __pyx_k__begin[] = "begin";
static char __pyx_k__c_str[] = "c_str";
static char __pyx_k__descr[] = "descr";
static char __pyx_k__dtype[] = "dtype";
static char __pyx_k__empty[] = "empty";
static char __pyx_k__field[] = "field";
static char __pyx_k__int64[] = "int64";
static char __pyx_k__level[] = "level";
static char __pyx_k__names[] = "names";
static char __pyx_k__numpy[] = "numpy";
static char __pyx_k__order[] = "order";
static char __pyx_k__range[] = "range";
static char __pyx_k__rsnap[] = "rsnap";
static char __pyx_k__shape[] = "shape";
static char __pyx_k__trees[] = "trees";
static char __pyx_k__zeros[] = "zeros";
static char __pyx_k__boxlen[] = "boxlen";
static char __pyx_k__domain[] = "domain";
static char __pyx_k__fields[] = "fields";
static char __pyx_k__format[] = "format";
static char __pyx_k__loaded[] = "loaded";
static char __pyx_k__unit_d[] = "unit_d";
static char __pyx_k__unit_l[] = "unit_l";
static char __pyx_k__unit_t[] = "unit_t";
static char __pyx_k__argsort[] = "argsort";
static char __pyx_k__float64[] = "float64";
static char __pyx_k__grid_id[] = "grid_id";
static char __pyx_k__m_nvars[] = "m_nvars";
static char __pyx_k__nfields[] = "nfields";
static char __pyx_k__omega_b[] = "omega_b";
static char __pyx_k__omega_k[] = "omega_k";
static char __pyx_k__omega_l[] = "omega_l";
static char __pyx_k__omega_m[] = "omega_m";
static char __pyx_k__strides[] = "strides";
static char __pyx_k__varname[] = "varname";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__itemsize[] = "itemsize";
static char __pyx_k__levelmax[] = "levelmax";
static char __pyx_k__levelmin[] = "levelmin";
static char __pyx_k__m_header[] = "m_header";
static char __pyx_k__ndomains[] = "ndomains";
static char __pyx_k__ngridmax[] = "ngridmax";
static char __pyx_k__readonly[] = "readonly";
static char __pyx_k__type_num[] = "type_num";
static char __pyx_k__byteorder[] = "byteorder";
static char __pyx_k__field_ind[] = "field_ind";
static char __pyx_k__is_finest[] = "is_finest";
static char __pyx_k__left_edge[] = "left_edge";
static char __pyx_k__signature[] = "signature";
static char __pyx_k__ValueError[] = "ValueError";
static char __pyx_k__child_mask[] = "child_mask";
static char __pyx_k__dimensions[] = "dimensions";
static char __pyx_k__efficiency[] = "efficiency";
static char __pyx_k__get_parent[] = "get_parent";
static char __pyx_k__left_edges[] = "left_edges";
static char __pyx_k__left_index[] = "left_index";
static char __pyx_k__m_maxlevel[] = "m_maxlevel";
static char __pyx_k__m_varnames[] = "m_varnames";
static char __pyx_k__right_edge[] = "right_edge";
static char __pyx_k__suboffsets[] = "suboffsets";
static char __pyx_k__field_names[] = "field_names";
static char __pyx_k__grid_levels[] = "grid_levels";
static char __pyx_k__hydro_datas[] = "hydro_datas";
static char __pyx_k__m_var_array[] = "m_var_array";
static char __pyx_k__right_edges[] = "right_edges";
static char __pyx_k__RuntimeError[] = "RuntimeError";
static char __pyx_k__domain_index[] = "domain_index";
static char __pyx_k__m_AMR_levels[] = "m_AMR_levels";
static char __pyx_k__nstep_coarse[] = "nstep_coarse";
static char __pyx_k__ensure_loaded[] = "ensure_loaded";
static char __pyx_k__snapshot_name[] = "snapshot_name";
static char __pyx_k__grid_dimensions[] = "grid_dimensions";
static char __pyx_k__grid_pos_double[] = "grid_pos_double";
static char __pyx_k__grid_file_locations[] = "grid_file_locations";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_n_s_2;
static PyObject *__pyx_kp_u_3;
static PyObject *__pyx_kp_u_4;
static PyObject *__pyx_kp_u_5;
static PyObject *__pyx_kp_u_6;
static PyObject *__pyx_kp_u_7;
static PyObject *__pyx_kp_u_8;
static PyObject *__pyx_n_s__F;
static PyObject *__pyx_n_s__H0;
static PyObject *__pyx_n_s__RuntimeError;
static PyObject *__pyx_n_s__ValueError;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s__aexp;
static PyObject *__pyx_n_s__argsort;
static PyObject *__pyx_n_s__base;
static PyObject *__pyx_n_s__begin;
static PyObject *__pyx_n_s__boxlen;
static PyObject *__pyx_n_s__buf;
static PyObject *__pyx_n_s__byteorder;
static PyObject *__pyx_n_s__c_str;
static PyObject *__pyx_n_s__child_mask;
static PyObject *__pyx_n_s__data;
static PyObject *__pyx_n_s__dd;
static PyObject *__pyx_n_s__descr;
static PyObject *__pyx_n_s__dimensions;
static PyObject *__pyx_n_s__domain;
static PyObject *__pyx_n_s__domain_index;
static PyObject *__pyx_n_s__dtype;
static PyObject *__pyx_n_s__efficiency;
static PyObject *__pyx_n_s__empty;
static PyObject *__pyx_n_s__end;
static PyObject *__pyx_n_s__ensure_loaded;
static PyObject *__pyx_n_s__field;
static PyObject *__pyx_n_s__field_ind;
static PyObject *__pyx_n_s__field_names;
static PyObject *__pyx_n_s__fields;
static PyObject *__pyx_n_s__float64;
static PyObject *__pyx_n_s__fn;
static PyObject *__pyx_n_s__format;
static PyObject *__pyx_n_s__get_parent;
static PyObject *__pyx_n_s__grid_dimensions;
static PyObject *__pyx_n_s__grid_file_locations;
static PyObject *__pyx_n_s__grid_id;
static PyObject *__pyx_n_s__grid_levels;
static PyObject *__pyx_n_s__grid_pos_double;
static PyObject *__pyx_n_s__hydro_datas;
static PyObject *__pyx_n_s__int64;
static PyObject *__pyx_n_s__is_finest;
static PyObject *__pyx_n_s__itemsize;
static PyObject *__pyx_n_s__left_edge;
static PyObject *__pyx_n_s__left_edges;
static PyObject *__pyx_n_s__left_index;
static PyObject *__pyx_n_s__level;
static PyObject *__pyx_n_s__levelmax;
static PyObject *__pyx_n_s__levelmin;
static PyObject *__pyx_n_s__loaded;
static PyObject *__pyx_n_s__m_AMR_levels;
static PyObject *__pyx_n_s__m_header;
static PyObject *__pyx_n_s__m_maxlevel;
static PyObject *__pyx_n_s__m_nvars;
static PyObject *__pyx_n_s__m_var_array;
static PyObject *__pyx_n_s__m_varnames;
static PyObject *__pyx_n_s__names;
static PyObject *__pyx_n_s__ncpu;
static PyObject *__pyx_n_s__ndim;
static PyObject *__pyx_n_s__ndomains;
static PyObject *__pyx_n_s__next;
static PyObject *__pyx_n_s__nfields;
static PyObject *__pyx_n_s__ngridmax;
static PyObject *__pyx_n_s__np;
static PyObject *__pyx_n_s__nstep_coarse;
static PyObject *__pyx_n_s__numpy;
static PyObject *__pyx_n_s__obj;
static PyObject *__pyx_n_s__omega_b;
static PyObject *__pyx_n_s__omega_k;
static PyObject *__pyx_n_s__omega_l;
static PyObject *__pyx_n_s__omega_m;
static PyObject *__pyx_n_s__ones;
static PyObject *__pyx_n_s__order;
static PyObject *__pyx_n_s__range;
static PyObject *__pyx_n_s__read;
static PyObject *__pyx_n_s__readonly;
static PyObject *__pyx_n_s__right_edge;
static PyObject *__pyx_n_s__right_edges;
static PyObject *__pyx_n_s__rsnap;
static PyObject *__pyx_n_s__shape;
static PyObject *__pyx_n_s__signature;
static PyObject *__pyx_n_s__sigs;
static PyObject *__pyx_n_s__size;
static PyObject *__pyx_n_s__snapshot_name;
static PyObject *__pyx_n_s__strides;
static PyObject *__pyx_n_s__suboffsets;
static PyObject *__pyx_n_s__time;
static PyObject *__pyx_n_s__trees;
static PyObject *__pyx_n_s__type_num;
static PyObject *__pyx_n_s__unit_d;
static PyObject *__pyx_n_s__unit_l;
static PyObject *__pyx_n_s__unit_t;
static PyObject *__pyx_n_s__varname;
static PyObject *__pyx_n_s__x;
static PyObject *__pyx_n_s__y;
static PyObject *__pyx_n_s__z;
static PyObject *__pyx_n_s__zc;
static PyObject *__pyx_n_s__zeros;
static PyObject *__pyx_n_s__zs;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_int_15;

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":36
 * cimport cython
 * 
 * cdef inline np.int64_t i64max(np.int64_t i0, np.int64_t i1):             # <<<<<<<<<<<<<<
 *     if i0 > i1: return i0
 *     return i1
 */

static CYTHON_INLINE __pyx_t_5numpy_int64_t __pyx_f_2yt_13ramses_reader_i64max(__pyx_t_5numpy_int64_t __pyx_v_i0, __pyx_t_5numpy_int64_t __pyx_v_i1) {
  __pyx_t_5numpy_int64_t __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("i64max");

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":37
 * 
 * cdef inline np.int64_t i64max(np.int64_t i0, np.int64_t i1):
 *     if i0 > i1: return i0             # <<<<<<<<<<<<<<
 *     return i1
 * 
 */
  __pyx_t_1 = (__pyx_v_i0 > __pyx_v_i1);
  if (__pyx_t_1) {
    __pyx_r = __pyx_v_i0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":38
 * cdef inline np.int64_t i64max(np.int64_t i0, np.int64_t i1):
 *     if i0 > i1: return i0
 *     return i1             # <<<<<<<<<<<<<<
 * 
 * cdef inline np.int64_t i64min(np.int64_t i0, np.int64_t i1):
 */
  __pyx_r = __pyx_v_i1;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":40
 *     return i1
 * 
 * cdef inline np.int64_t i64min(np.int64_t i0, np.int64_t i1):             # <<<<<<<<<<<<<<
 *     if i0 < i1: return i0
 *     return i1
 */

static CYTHON_INLINE __pyx_t_5numpy_int64_t __pyx_f_2yt_13ramses_reader_i64min(__pyx_t_5numpy_int64_t __pyx_v_i0, __pyx_t_5numpy_int64_t __pyx_v_i1) {
  __pyx_t_5numpy_int64_t __pyx_r;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("i64min");

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":41
 * 
 * cdef inline np.int64_t i64min(np.int64_t i0, np.int64_t i1):
 *     if i0 < i1: return i0             # <<<<<<<<<<<<<<
 *     return i1
 * 
 */
  __pyx_t_1 = (__pyx_v_i0 < __pyx_v_i1);
  if (__pyx_t_1) {
    __pyx_r = __pyx_v_i0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":42
 * cdef inline np.int64_t i64min(np.int64_t i0, np.int64_t i1):
 *     if i0 < i1: return i0
 *     return i1             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "<vector>" namespace "std":
 */
  __pyx_r = __pyx_v_i1;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":379
 *     cdef int *loaded
 * 
 *     cdef public object field_ind             # <<<<<<<<<<<<<<
 *     cdef public object field_names
 * 
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind);
  __pyx_r = ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind);
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind);
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":380
 * 
 *     cdef public object field_ind
 *     cdef public object field_names             # <<<<<<<<<<<<<<
 * 
 *     # We will store this here so that we have a record, independent of the
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names);
  __pyx_r = ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names);
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names);
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":386
 *     cdef int ndomains, nfields
 * 
 *     def __cinit__(self, char *fn):             # <<<<<<<<<<<<<<
 *         cdef int idomain, ifield, ii
 *         cdef RAMSES_tree *local_tree
 */

static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_fn;
  int __pyx_v_idomain;
  int __pyx_v_ifield;
  int __pyx_v_ii;
  RAMSES::AMR::RAMSES_tree *__pyx_v_local_tree;
  RAMSES::HYDRO::RAMSES_hydro_data *__pyx_v_local_hydro_data;
  std::string *__pyx_v_field_name;
  int __pyx_r;
  long __pyx_t_1;
  int __pyx_t_2;
  unsigned int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__fn,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[1] = {0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__fn);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_fn = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_fn) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 1) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_fn = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_fn) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 1, 1, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 386; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":390
 *         cdef RAMSES_tree *local_tree
 *         cdef RAMSES_hydro_data *local_hydro_data
 *         self.snapshot_name = new string(fn)             # <<<<<<<<<<<<<<
 *         self.rsnap = new snapshot(deref(self.snapshot_name), version3)
 *         # We now have to get our field names to fill our array
 */
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->snapshot_name = new std::string(__pyx_v_fn);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":391
 *         cdef RAMSES_hydro_data *local_hydro_data
 *         self.snapshot_name = new string(fn)
 *         self.rsnap = new snapshot(deref(self.snapshot_name), version3)             # <<<<<<<<<<<<<<
 *         # We now have to get our field names to fill our array
 *         self.trees = <RAMSES_tree**>\
 */
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap = new RAMSES::snapshot((*((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->snapshot_name), RAMSES::version3);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":393
 *         self.rsnap = new snapshot(deref(self.snapshot_name), version3)
 *         # We now have to get our field names to fill our array
 *         self.trees = <RAMSES_tree**>\             # <<<<<<<<<<<<<<
 *             malloc(sizeof(RAMSES_tree*) * self.rsnap.m_header.ncpu)
 *         self.hydro_datas = <RAMSES_hydro_data ***>\
 */
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->trees = ((RAMSES::AMR::RAMSES_tree **)malloc(((sizeof(RAMSES::AMR::RAMSES_tree *)) * ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ncpu)));

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":395
 *         self.trees = <RAMSES_tree**>\
 *             malloc(sizeof(RAMSES_tree*) * self.rsnap.m_header.ncpu)
 *         self.hydro_datas = <RAMSES_hydro_data ***>\             # <<<<<<<<<<<<<<
 *                        malloc(sizeof(RAMSES_hydro_data**) * self.rsnap.m_header.ncpu)
 *         self.ndomains = self.rsnap.m_header.ncpu
 */
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas = ((RAMSES::HYDRO::RAMSES_hydro_data ***)malloc(((sizeof(RAMSES::HYDRO::RAMSES_hydro_data **)) * ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ncpu)));

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":397
 *         self.hydro_datas = <RAMSES_hydro_data ***>\
 *                        malloc(sizeof(RAMSES_hydro_data**) * self.rsnap.m_header.ncpu)
 *         self.ndomains = self.rsnap.m_header.ncpu             # <<<<<<<<<<<<<<
 *         #for ii in range(self.ndomains): self.trees[ii] = NULL
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):
 */
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->ndomains = ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ncpu;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":399
 *         self.ndomains = self.rsnap.m_header.ncpu
 *         #for ii in range(self.ndomains): self.trees[ii] = NULL
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):             # <<<<<<<<<<<<<<
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)
 */
  __pyx_t_1 = (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ncpu + 1);
  for (__pyx_t_2 = 1; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_idomain = __pyx_t_2;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":401
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)             # <<<<<<<<<<<<<<
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 */
    __pyx_v_local_tree = new RAMSES::AMR::RAMSES_tree((*((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap), __pyx_v_idomain, ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.levelmax, 0);

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":402
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)
 *             local_tree.read()             # <<<<<<<<<<<<<<
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 *             self.hydro_datas[idomain - 1] = <RAMSES_hydro_data **>\
 */
    __pyx_v_local_tree->read();

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":403
 *                                          self.rsnap.m_header.levelmax, 0)
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))             # <<<<<<<<<<<<<<
 *             self.hydro_datas[idomain - 1] = <RAMSES_hydro_data **>\
 *                 malloc(sizeof(RAMSES_hydro_data*) * local_hydro_data.m_nvars)
 */
    __pyx_v_local_hydro_data = new RAMSES::HYDRO::RAMSES_hydro_data((*__pyx_v_local_tree));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":404
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 *             self.hydro_datas[idomain - 1] = <RAMSES_hydro_data **>\             # <<<<<<<<<<<<<<
 *                 malloc(sizeof(RAMSES_hydro_data*) * local_hydro_data.m_nvars)
 *             del local_hydro_data
 */
    (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[(__pyx_v_idomain - 1)]) = ((RAMSES::HYDRO::RAMSES_hydro_data **)malloc(((sizeof(RAMSES::HYDRO::RAMSES_hydro_data *)) * __pyx_v_local_hydro_data->m_nvars)));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":406
 *             self.hydro_datas[idomain - 1] = <RAMSES_hydro_data **>\
 *                 malloc(sizeof(RAMSES_hydro_data*) * local_hydro_data.m_nvars)
 *             del local_hydro_data             # <<<<<<<<<<<<<<
 *             for ii in range(local_hydro_data.m_nvars):
 *                 self.hydro_datas[idomain - 1][ii] = \
 */
    delete __pyx_v_local_hydro_data;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":407
 *                 malloc(sizeof(RAMSES_hydro_data*) * local_hydro_data.m_nvars)
 *             del local_hydro_data
 *             for ii in range(local_hydro_data.m_nvars):             # <<<<<<<<<<<<<<
 *                 self.hydro_datas[idomain - 1][ii] = \
 *                     new RAMSES_hydro_data(deref(local_tree))
 */
    __pyx_t_3 = __pyx_v_local_hydro_data->m_nvars;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_ii = __pyx_t_4;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":408
 *             del local_hydro_data
 *             for ii in range(local_hydro_data.m_nvars):
 *                 self.hydro_datas[idomain - 1][ii] = \             # <<<<<<<<<<<<<<
 *                     new RAMSES_hydro_data(deref(local_tree))
 *             self.trees[idomain - 1] = local_tree
 */
      ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[(__pyx_v_idomain - 1)])[__pyx_v_ii]) = new RAMSES::HYDRO::RAMSES_hydro_data((*__pyx_v_local_tree));
    }

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":410
 *                 self.hydro_datas[idomain - 1][ii] = \
 *                     new RAMSES_hydro_data(deref(local_tree))
 *             self.trees[idomain - 1] = local_tree             # <<<<<<<<<<<<<<
 *             # We do not delete anything
 *         # Only once, we read all the field names
 */
    (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->trees[(__pyx_v_idomain - 1)]) = __pyx_v_local_tree;
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":413
 *             # We do not delete anything
 *         # Only once, we read all the field names
 *         self.nfields = local_hydro_data.m_nvars             # <<<<<<<<<<<<<<
 *         cdef string *field_name
 *         self.field_names = []
 */
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->nfields = __pyx_v_local_hydro_data->m_nvars;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":415
 *         self.nfields = local_hydro_data.m_nvars
 *         cdef string *field_name
 *         self.field_names = []             # <<<<<<<<<<<<<<
 *         self.field_ind = {}
 *         self.loaded = <int *> malloc(sizeof(int) * local_hydro_data.m_nvars)
 */
  __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_5));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names);
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names = ((PyObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":416
 *         cdef string *field_name
 *         self.field_names = []
 *         self.field_ind = {}             # <<<<<<<<<<<<<<
 *         self.loaded = <int *> malloc(sizeof(int) * local_hydro_data.m_nvars)
 *         for ifield in range(local_hydro_data.m_nvars):
 */
  __pyx_t_5 = PyDict_New(); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_5));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind);
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind = ((PyObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":417
 *         self.field_names = []
 *         self.field_ind = {}
 *         self.loaded = <int *> malloc(sizeof(int) * local_hydro_data.m_nvars)             # <<<<<<<<<<<<<<
 *         for ifield in range(local_hydro_data.m_nvars):
 *             field_name = &(local_hydro_data.m_varnames[ifield])
 */
  ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->loaded = ((int *)malloc(((sizeof(int)) * __pyx_v_local_hydro_data->m_nvars)));

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":418
 *         self.field_ind = {}
 *         self.loaded = <int *> malloc(sizeof(int) * local_hydro_data.m_nvars)
 *         for ifield in range(local_hydro_data.m_nvars):             # <<<<<<<<<<<<<<
 *             field_name = &(local_hydro_data.m_varnames[ifield])
 *             # Does this leak?
 */
  __pyx_t_3 = __pyx_v_local_hydro_data->m_nvars;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_3; __pyx_t_2+=1) {
    __pyx_v_ifield = __pyx_t_2;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":419
 *         self.loaded = <int *> malloc(sizeof(int) * local_hydro_data.m_nvars)
 *         for ifield in range(local_hydro_data.m_nvars):
 *             field_name = &(local_hydro_data.m_varnames[ifield])             # <<<<<<<<<<<<<<
 *             # Does this leak?
 *             self.field_names.append(field_name.c_str())
 */
    __pyx_v_field_name = (&(__pyx_v_local_hydro_data->m_varnames[__pyx_v_ifield]));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":421
 *             field_name = &(local_hydro_data.m_varnames[ifield])
 *             # Does this leak?
 *             self.field_names.append(field_name.c_str())             # <<<<<<<<<<<<<<
 *             self.field_ind[self.field_names[-1]] = ifield
 *             self.loaded[ifield] = 0
 */
    __pyx_t_5 = PyBytes_FromString(__pyx_v_field_name->c_str()); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __pyx_t_6 = __Pyx_PyObject_Append(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names, ((PyObject *)__pyx_t_5)); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":422
 *             # Does this leak?
 *             self.field_names.append(field_name.c_str())
 *             self.field_ind[self.field_names[-1]] = ifield             # <<<<<<<<<<<<<<
 *             self.loaded[ifield] = 0
 *         # This all needs to be cleaned up in the deallocator
 */
    __pyx_t_6 = PyInt_FromLong(__pyx_v_ifield); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_5 = __Pyx_GetItemInt(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_names, -1, sizeof(long), PyInt_FromLong); if (!__pyx_t_5) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    if (PyObject_SetItem(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind, __pyx_t_5, __pyx_t_6) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 422; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":423
 *             self.field_names.append(field_name.c_str())
 *             self.field_ind[self.field_names[-1]] = ifield
 *             self.loaded[ifield] = 0             # <<<<<<<<<<<<<<
 *         # This all needs to be cleaned up in the deallocator
 * 
 */
    (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->loaded[__pyx_v_ifield]) = 0;
  }

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":426
 *         # This all needs to be cleaned up in the deallocator
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         cdef int idomain, ifield
 *         for idomain in range(self.ndomains):
 */

static void __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy___dealloc__(PyObject *__pyx_v_self) {
  int __pyx_v_idomain;
  int __pyx_v_ifield;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  __Pyx_RefNannySetupContext("__dealloc__");

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":428
 *     def __dealloc__(self):
 *         cdef int idomain, ifield
 *         for idomain in range(self.ndomains):             # <<<<<<<<<<<<<<
 *             for ifield in range(self.nfields):
 *                 if self.hydro_datas[idomain][ifield] != NULL:
 */
  __pyx_t_1 = ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->ndomains;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_idomain = __pyx_t_2;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":429
 *         cdef int idomain, ifield
 *         for idomain in range(self.ndomains):
 *             for ifield in range(self.nfields):             # <<<<<<<<<<<<<<
 *                 if self.hydro_datas[idomain][ifield] != NULL:
 *                     del self.hydro_datas[idomain][ifield]
 */
    __pyx_t_3 = ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->nfields;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_ifield = __pyx_t_4;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":430
 *         for idomain in range(self.ndomains):
 *             for ifield in range(self.nfields):
 *                 if self.hydro_datas[idomain][ifield] != NULL:             # <<<<<<<<<<<<<<
 *                     del self.hydro_datas[idomain][ifield]
 *             if self.trees[idomain] != NULL:
 */
      __pyx_t_5 = (((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[__pyx_v_idomain])[__pyx_v_ifield]) != NULL);
      if (__pyx_t_5) {

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":431
 *             for ifield in range(self.nfields):
 *                 if self.hydro_datas[idomain][ifield] != NULL:
 *                     del self.hydro_datas[idomain][ifield]             # <<<<<<<<<<<<<<
 *             if self.trees[idomain] != NULL:
 *                 del self.trees[idomain]
 */
        delete ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[__pyx_v_idomain])[__pyx_v_ifield]);
        goto __pyx_L9;
      }
      __pyx_L9:;
    }

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":432
 *                 if self.hydro_datas[idomain][ifield] != NULL:
 *                     del self.hydro_datas[idomain][ifield]
 *             if self.trees[idomain] != NULL:             # <<<<<<<<<<<<<<
 *                 del self.trees[idomain]
 *             free(self.hydro_datas[idomain])
 */
    __pyx_t_5 = ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->trees[__pyx_v_idomain]) != NULL);
    if (__pyx_t_5) {

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":433
 *                     del self.hydro_datas[idomain][ifield]
 *             if self.trees[idomain] != NULL:
 *                 del self.trees[idomain]             # <<<<<<<<<<<<<<
 *             free(self.hydro_datas[idomain])
 *         free(self.trees)
 */
      delete (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->trees[__pyx_v_idomain]);
      goto __pyx_L10;
    }
    __pyx_L10:;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":434
 *             if self.trees[idomain] != NULL:
 *                 del self.trees[idomain]
 *             free(self.hydro_datas[idomain])             # <<<<<<<<<<<<<<
 *         free(self.trees)
 *         free(self.hydro_datas)
 */
    free((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[__pyx_v_idomain]));
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":435
 *                 del self.trees[idomain]
 *             free(self.hydro_datas[idomain])
 *         free(self.trees)             # <<<<<<<<<<<<<<
 *         free(self.hydro_datas)
 *         free(self.loaded)
 */
  free(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->trees);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":436
 *             free(self.hydro_datas[idomain])
 *         free(self.trees)
 *         free(self.hydro_datas)             # <<<<<<<<<<<<<<
 *         free(self.loaded)
 *         if self.snapshot_name != NULL: del self.snapshot_name
 */
  free(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":437
 *         free(self.trees)
 *         free(self.hydro_datas)
 *         free(self.loaded)             # <<<<<<<<<<<<<<
 *         if self.snapshot_name != NULL: del self.snapshot_name
 *         if self.rsnap != NULL: del self.rsnap
 */
  free(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->loaded);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":438
 *         free(self.hydro_datas)
 *         free(self.loaded)
 *         if self.snapshot_name != NULL: del self.snapshot_name             # <<<<<<<<<<<<<<
 *         if self.rsnap != NULL: del self.rsnap
 * 
 */
  __pyx_t_5 = (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->snapshot_name != NULL);
  if (__pyx_t_5) {
    delete ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->snapshot_name;
    goto __pyx_L11;
  }
  __pyx_L11:;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":439
 *         free(self.loaded)
 *         if self.snapshot_name != NULL: del self.snapshot_name
 *         if self.rsnap != NULL: del self.rsnap             # <<<<<<<<<<<<<<
 * 
 *     def count_zones(self):
 */
  __pyx_t_5 = (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap != NULL);
  if (__pyx_t_5) {
    delete ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap;
    goto __pyx_L12;
  }
  __pyx_L12:;

  __Pyx_RefNannyFinishContext();
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":441
 *         if self.rsnap != NULL: del self.rsnap
 * 
 *     def count_zones(self):             # <<<<<<<<<<<<<<
 *         # We need to do simulation domains here
 * 
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_count_zones(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_count_zones(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  unsigned int __pyx_v_idomain;
  unsigned int __pyx_v_ilevel;
  RAMSES::AMR::RAMSES_tree *__pyx_v_local_tree;
  RAMSES::HYDRO::RAMSES_hydro_data *__pyx_v_local_hydro_data;
  RAMSES::AMR::RAMSES_level *__pyx_v_local_level;
  PyObject *__pyx_v_cell_count;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  unsigned int __pyx_t_3;
  int __pyx_t_4;
  long __pyx_t_5;
  unsigned int __pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  __Pyx_RefNannySetupContext("count_zones");
  __pyx_v_cell_count = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":451
 *         # All the loop-local pointers must be declared up here
 * 
 *         cell_count = []             # <<<<<<<<<<<<<<
 *         for ilevel in range(self.rsnap.m_header.levelmax + 1):
 *             cell_count.append(0)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_cell_count));
  __pyx_v_cell_count = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":452
 * 
 *         cell_count = []
 *         for ilevel in range(self.rsnap.m_header.levelmax + 1):             # <<<<<<<<<<<<<<
 *             cell_count.append(0)
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):
 */
  __pyx_t_2 = (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.levelmax + 1);
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_ilevel = __pyx_t_3;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":453
 *         cell_count = []
 *         for ilevel in range(self.rsnap.m_header.levelmax + 1):
 *             cell_count.append(0)             # <<<<<<<<<<<<<<
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 */
    if (unlikely(__pyx_v_cell_count == Py_None)) {
      PyErr_SetString(PyExc_AttributeError, "'NoneType' object has no attribute 'append'"); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;} 
    }
    __pyx_t_4 = PyList_Append(((PyObject *)__pyx_v_cell_count), __pyx_int_0); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":454
 *         for ilevel in range(self.rsnap.m_header.levelmax + 1):
 *             cell_count.append(0)
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):             # <<<<<<<<<<<<<<
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)
 */
  __pyx_t_2 = (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ncpu + 1);
  for (__pyx_t_3 = 1; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_idomain = __pyx_t_3;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":456
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)             # <<<<<<<<<<<<<<
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 */
    __pyx_v_local_tree = new RAMSES::AMR::RAMSES_tree((*((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap), __pyx_v_idomain, ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.levelmax, 0);

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":457
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)
 *             local_tree.read()             # <<<<<<<<<<<<<<
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 *             for ilevel in range(local_tree.m_maxlevel + 1):
 */
    __pyx_v_local_tree->read();

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":458
 *                                          self.rsnap.m_header.levelmax, 0)
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))             # <<<<<<<<<<<<<<
 *             for ilevel in range(local_tree.m_maxlevel + 1):
 *                 local_level = &local_tree.m_AMR_levels[ilevel]
 */
    __pyx_v_local_hydro_data = new RAMSES::HYDRO::RAMSES_hydro_data((*__pyx_v_local_tree));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":459
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 *             for ilevel in range(local_tree.m_maxlevel + 1):             # <<<<<<<<<<<<<<
 *                 local_level = &local_tree.m_AMR_levels[ilevel]
 *                 cell_count[ilevel] += local_level.size()
 */
    __pyx_t_5 = (__pyx_v_local_tree->m_maxlevel + 1);
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_ilevel = __pyx_t_6;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":460
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 *             for ilevel in range(local_tree.m_maxlevel + 1):
 *                 local_level = &local_tree.m_AMR_levels[ilevel]             # <<<<<<<<<<<<<<
 *                 cell_count[ilevel] += local_level.size()
 *             del local_tree, local_hydro_data
 */
      __pyx_v_local_level = (&(__pyx_v_local_tree->m_AMR_levels[__pyx_v_ilevel]));

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":461
 *             for ilevel in range(local_tree.m_maxlevel + 1):
 *                 local_level = &local_tree.m_AMR_levels[ilevel]
 *                 cell_count[ilevel] += local_level.size()             # <<<<<<<<<<<<<<
 *             del local_tree, local_hydro_data
 * 
 */
      __pyx_t_1 = PyLong_FromUnsignedLong(__pyx_v_local_level->size()); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = __Pyx_GetItemInt_List(((PyObject *)__pyx_v_cell_count), __pyx_v_ilevel, sizeof(unsigned int)+1, PyLong_FromUnsignedLong); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = PyNumber_InPlaceAdd(__pyx_t_7, __pyx_t_1); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (__Pyx_SetItemInt(((PyObject *)__pyx_v_cell_count), __pyx_v_ilevel, __pyx_t_8, sizeof(unsigned int)+1, PyLong_FromUnsignedLong) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 461; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":462
 *                 local_level = &local_tree.m_AMR_levels[ilevel]
 *                 cell_count[ilevel] += local_level.size()
 *             del local_tree, local_hydro_data             # <<<<<<<<<<<<<<
 * 
 *         return cell_count
 */
    delete __pyx_v_local_tree;
    delete __pyx_v_local_hydro_data;
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":464
 *             del local_tree, local_hydro_data
 * 
 *         return cell_count             # <<<<<<<<<<<<<<
 * 
 *     def ensure_loaded(self, char *varname, int domain_index):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_cell_count));
  __pyx_r = ((PyObject *)__pyx_v_cell_count);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.count_zones");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_cell_count);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":466
 *         return cell_count
 * 
 *     def ensure_loaded(self, char *varname, int domain_index):             # <<<<<<<<<<<<<<
 *         # this domain_index must be zero-indexed
 *         cdef int varindex = self.field_ind[varname]
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_ensure_loaded(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_ensure_loaded(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_varname;
  int __pyx_v_domain_index;
  int __pyx_v_varindex;
  std::string *__pyx_v_field_name;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__varname,&__pyx_n_s__domain_index,0};
  __Pyx_RefNannySetupContext("ensure_loaded");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__varname);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__domain_index);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("ensure_loaded", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "ensure_loaded") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_varname = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_varname) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_domain_index = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_domain_index == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_varname = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_varname) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_domain_index = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_domain_index == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("ensure_loaded", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.ensure_loaded");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":468
 *     def ensure_loaded(self, char *varname, int domain_index):
 *         # this domain_index must be zero-indexed
 *         cdef int varindex = self.field_ind[varname]             # <<<<<<<<<<<<<<
 *         cdef string *field_name = new string(varname)
 *         if self.loaded[varindex] == 1: return
 */
  __pyx_t_1 = PyBytes_FromString(__pyx_v_varname); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = PyObject_GetItem(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind, ((PyObject *)__pyx_t_1)); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 468; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_varindex = __pyx_t_3;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":469
 *         # this domain_index must be zero-indexed
 *         cdef int varindex = self.field_ind[varname]
 *         cdef string *field_name = new string(varname)             # <<<<<<<<<<<<<<
 *         if self.loaded[varindex] == 1: return
 *         print "READING FROM DISK", varname
 */
  __pyx_v_field_name = new std::string(__pyx_v_varname);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":470
 *         cdef int varindex = self.field_ind[varname]
 *         cdef string *field_name = new string(varname)
 *         if self.loaded[varindex] == 1: return             # <<<<<<<<<<<<<<
 *         print "READING FROM DISK", varname
 *         self.hydro_datas[domain_index][varindex].read(deref(field_name))
 */
  __pyx_t_4 = ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->loaded[__pyx_v_varindex]) == 1);
  if (__pyx_t_4) {
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":471
 *         cdef string *field_name = new string(varname)
 *         if self.loaded[varindex] == 1: return
 *         print "READING FROM DISK", varname             # <<<<<<<<<<<<<<
 *         self.hydro_datas[domain_index][varindex].read(deref(field_name))
 *         self.loaded[varindex] = 1
 */
  __pyx_t_2 = PyBytes_FromString(__pyx_v_varname); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_1));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_kp_s_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_1));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  __pyx_t_2 = 0;
  if (__Pyx_Print(0, __pyx_t_1, 1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":472
 *         if self.loaded[varindex] == 1: return
 *         print "READING FROM DISK", varname
 *         self.hydro_datas[domain_index][varindex].read(deref(field_name))             # <<<<<<<<<<<<<<
 *         self.loaded[varindex] = 1
 *         del field_name
 */
  ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[__pyx_v_domain_index])[__pyx_v_varindex])->read((*__pyx_v_field_name));

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":473
 *         print "READING FROM DISK", varname
 *         self.hydro_datas[domain_index][varindex].read(deref(field_name))
 *         self.loaded[varindex] = 1             # <<<<<<<<<<<<<<
 *         del field_name
 * 
 */
  (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->loaded[__pyx_v_varindex]) = 1;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":474
 *         self.hydro_datas[domain_index][varindex].read(deref(field_name))
 *         self.loaded[varindex] = 1
 *         del field_name             # <<<<<<<<<<<<<<
 * 
 *     def clear_tree(self, char *varname, int domain_index):
 */
  delete __pyx_v_field_name;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.ensure_loaded");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":476
 *         del field_name
 * 
 *     def clear_tree(self, char *varname, int domain_index):             # <<<<<<<<<<<<<<
 *         # this domain_index must be zero-indexed
 *         # We delete and re-create
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_clear_tree(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_clear_tree(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_varname;
  int __pyx_v_domain_index;
  int __pyx_v_varindex;
  std::string *__pyx_v_field_name;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__varname,&__pyx_n_s__domain_index,0};
  __Pyx_RefNannySetupContext("clear_tree");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[2] = {0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__varname);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__domain_index);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("clear_tree", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "clear_tree") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_varname = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_varname) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_domain_index = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_domain_index == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_varname = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_varname) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_domain_index = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_domain_index == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("clear_tree", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.clear_tree");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":479
 *         # this domain_index must be zero-indexed
 *         # We delete and re-create
 *         cdef int varindex = self.field_ind[varname]             # <<<<<<<<<<<<<<
 *         cdef string *field_name = new string(varname)
 *         if self.loaded[varindex] == 0: return
 */
  __pyx_t_1 = PyBytes_FromString(__pyx_v_varname); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __pyx_t_2 = PyObject_GetItem(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind, ((PyObject *)__pyx_t_1)); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_varindex = __pyx_t_3;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":480
 *         # We delete and re-create
 *         cdef int varindex = self.field_ind[varname]
 *         cdef string *field_name = new string(varname)             # <<<<<<<<<<<<<<
 *         if self.loaded[varindex] == 0: return
 *         del self.hydro_datas[domain_index][varindex]
 */
  __pyx_v_field_name = new std::string(__pyx_v_varname);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":481
 *         cdef int varindex = self.field_ind[varname]
 *         cdef string *field_name = new string(varname)
 *         if self.loaded[varindex] == 0: return             # <<<<<<<<<<<<<<
 *         del self.hydro_datas[domain_index][varindex]
 *         self.hydro_datas[domain_index - 1][varindex] = \
 */
  __pyx_t_4 = ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->loaded[__pyx_v_varindex]) == 0);
  if (__pyx_t_4) {
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":482
 *         cdef string *field_name = new string(varname)
 *         if self.loaded[varindex] == 0: return
 *         del self.hydro_datas[domain_index][varindex]             # <<<<<<<<<<<<<<
 *         self.hydro_datas[domain_index - 1][varindex] = \
 *             new RAMSES_hydro_data(deref(self.trees[domain_index]))
 */
  delete ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[__pyx_v_domain_index])[__pyx_v_varindex]);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":483
 *         if self.loaded[varindex] == 0: return
 *         del self.hydro_datas[domain_index][varindex]
 *         self.hydro_datas[domain_index - 1][varindex] = \             # <<<<<<<<<<<<<<
 *             new RAMSES_hydro_data(deref(self.trees[domain_index]))
 *         self.loaded[varindex] = 0
 */
  ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[(__pyx_v_domain_index - 1)])[__pyx_v_varindex]) = new RAMSES::HYDRO::RAMSES_hydro_data((*(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->trees[__pyx_v_domain_index])));

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":485
 *         self.hydro_datas[domain_index - 1][varindex] = \
 *             new RAMSES_hydro_data(deref(self.trees[domain_index]))
 *         self.loaded[varindex] = 0             # <<<<<<<<<<<<<<
 *         del field_name
 * 
 */
  (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->loaded[__pyx_v_varindex]) = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":486
 *             new RAMSES_hydro_data(deref(self.trees[domain_index]))
 *         self.loaded[varindex] = 0
 *         del field_name             # <<<<<<<<<<<<<<
 * 
 *     def get_file_info(self):
 */
  delete __pyx_v_field_name;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.clear_tree");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":488
 *         del field_name
 * 
 *     def get_file_info(self):             # <<<<<<<<<<<<<<
 *         header_info = {}
 *         header_info["ncpu"] = self.rsnap.m_header.ncpu
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_get_file_info(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_get_file_info(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_v_header_info;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("get_file_info");
  __pyx_v_header_info = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":489
 * 
 *     def get_file_info(self):
 *         header_info = {}             # <<<<<<<<<<<<<<
 *         header_info["ncpu"] = self.rsnap.m_header.ncpu
 *         header_info["ndim"] = self.rsnap.m_header.ndim
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 489; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_header_info));
  __pyx_v_header_info = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":490
 *     def get_file_info(self):
 *         header_info = {}
 *         header_info["ncpu"] = self.rsnap.m_header.ncpu             # <<<<<<<<<<<<<<
 *         header_info["ndim"] = self.rsnap.m_header.ndim
 *         header_info["levelmin"] = self.rsnap.m_header.levelmin
 */
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ncpu); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__ncpu), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 490; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":491
 *         header_info = {}
 *         header_info["ncpu"] = self.rsnap.m_header.ncpu
 *         header_info["ndim"] = self.rsnap.m_header.ndim             # <<<<<<<<<<<<<<
 *         header_info["levelmin"] = self.rsnap.m_header.levelmin
 *         header_info["levelmax"] = self.rsnap.m_header.levelmax
 */
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ndim); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__ndim), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":492
 *         header_info["ncpu"] = self.rsnap.m_header.ncpu
 *         header_info["ndim"] = self.rsnap.m_header.ndim
 *         header_info["levelmin"] = self.rsnap.m_header.levelmin             # <<<<<<<<<<<<<<
 *         header_info["levelmax"] = self.rsnap.m_header.levelmax
 *         header_info["ngridmax"] = self.rsnap.m_header.ngridmax
 */
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.levelmin); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__levelmin), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 492; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":493
 *         header_info["ndim"] = self.rsnap.m_header.ndim
 *         header_info["levelmin"] = self.rsnap.m_header.levelmin
 *         header_info["levelmax"] = self.rsnap.m_header.levelmax             # <<<<<<<<<<<<<<
 *         header_info["ngridmax"] = self.rsnap.m_header.ngridmax
 *         header_info["nstep_coarse"] = self.rsnap.m_header.nstep_coarse
 */
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.levelmax); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__levelmax), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":494
 *         header_info["levelmin"] = self.rsnap.m_header.levelmin
 *         header_info["levelmax"] = self.rsnap.m_header.levelmax
 *         header_info["ngridmax"] = self.rsnap.m_header.ngridmax             # <<<<<<<<<<<<<<
 *         header_info["nstep_coarse"] = self.rsnap.m_header.nstep_coarse
 *         header_info["boxlen"] = self.rsnap.m_header.boxlen
 */
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ngridmax); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__ngridmax), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":495
 *         header_info["levelmax"] = self.rsnap.m_header.levelmax
 *         header_info["ngridmax"] = self.rsnap.m_header.ngridmax
 *         header_info["nstep_coarse"] = self.rsnap.m_header.nstep_coarse             # <<<<<<<<<<<<<<
 *         header_info["boxlen"] = self.rsnap.m_header.boxlen
 *         header_info["time"] = self.rsnap.m_header.time
 */
  __pyx_t_1 = PyLong_FromUnsignedLong(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.nstep_coarse); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__nstep_coarse), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 495; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":496
 *         header_info["ngridmax"] = self.rsnap.m_header.ngridmax
 *         header_info["nstep_coarse"] = self.rsnap.m_header.nstep_coarse
 *         header_info["boxlen"] = self.rsnap.m_header.boxlen             # <<<<<<<<<<<<<<
 *         header_info["time"] = self.rsnap.m_header.time
 *         header_info["aexp"] = self.rsnap.m_header.aexp
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.boxlen); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__boxlen), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 496; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":497
 *         header_info["nstep_coarse"] = self.rsnap.m_header.nstep_coarse
 *         header_info["boxlen"] = self.rsnap.m_header.boxlen
 *         header_info["time"] = self.rsnap.m_header.time             # <<<<<<<<<<<<<<
 *         header_info["aexp"] = self.rsnap.m_header.aexp
 *         header_info["H0"] = self.rsnap.m_header.H0
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.time); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__time), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":498
 *         header_info["boxlen"] = self.rsnap.m_header.boxlen
 *         header_info["time"] = self.rsnap.m_header.time
 *         header_info["aexp"] = self.rsnap.m_header.aexp             # <<<<<<<<<<<<<<
 *         header_info["H0"] = self.rsnap.m_header.H0
 *         header_info["omega_m"] = self.rsnap.m_header.omega_m
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.aexp); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__aexp), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":499
 *         header_info["time"] = self.rsnap.m_header.time
 *         header_info["aexp"] = self.rsnap.m_header.aexp
 *         header_info["H0"] = self.rsnap.m_header.H0             # <<<<<<<<<<<<<<
 *         header_info["omega_m"] = self.rsnap.m_header.omega_m
 *         header_info["omega_l"] = self.rsnap.m_header.omega_l
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.H0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__H0), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":500
 *         header_info["aexp"] = self.rsnap.m_header.aexp
 *         header_info["H0"] = self.rsnap.m_header.H0
 *         header_info["omega_m"] = self.rsnap.m_header.omega_m             # <<<<<<<<<<<<<<
 *         header_info["omega_l"] = self.rsnap.m_header.omega_l
 *         header_info["omega_k"] = self.rsnap.m_header.omega_k
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.omega_m); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__omega_m), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":501
 *         header_info["H0"] = self.rsnap.m_header.H0
 *         header_info["omega_m"] = self.rsnap.m_header.omega_m
 *         header_info["omega_l"] = self.rsnap.m_header.omega_l             # <<<<<<<<<<<<<<
 *         header_info["omega_k"] = self.rsnap.m_header.omega_k
 *         header_info["omega_b"] = self.rsnap.m_header.omega_b
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.omega_l); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__omega_l), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":502
 *         header_info["omega_m"] = self.rsnap.m_header.omega_m
 *         header_info["omega_l"] = self.rsnap.m_header.omega_l
 *         header_info["omega_k"] = self.rsnap.m_header.omega_k             # <<<<<<<<<<<<<<
 *         header_info["omega_b"] = self.rsnap.m_header.omega_b
 *         header_info["unit_l"] = self.rsnap.m_header.unit_l
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.omega_k); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__omega_k), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":503
 *         header_info["omega_l"] = self.rsnap.m_header.omega_l
 *         header_info["omega_k"] = self.rsnap.m_header.omega_k
 *         header_info["omega_b"] = self.rsnap.m_header.omega_b             # <<<<<<<<<<<<<<
 *         header_info["unit_l"] = self.rsnap.m_header.unit_l
 *         header_info["unit_d"] = self.rsnap.m_header.unit_d
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.omega_b); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__omega_b), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 503; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":504
 *         header_info["omega_k"] = self.rsnap.m_header.omega_k
 *         header_info["omega_b"] = self.rsnap.m_header.omega_b
 *         header_info["unit_l"] = self.rsnap.m_header.unit_l             # <<<<<<<<<<<<<<
 *         header_info["unit_d"] = self.rsnap.m_header.unit_d
 *         header_info["unit_t"] = self.rsnap.m_header.unit_t
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.unit_l); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__unit_l), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":505
 *         header_info["omega_b"] = self.rsnap.m_header.omega_b
 *         header_info["unit_l"] = self.rsnap.m_header.unit_l
 *         header_info["unit_d"] = self.rsnap.m_header.unit_d             # <<<<<<<<<<<<<<
 *         header_info["unit_t"] = self.rsnap.m_header.unit_t
 *         return header_info
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.unit_d); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__unit_d), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":506
 *         header_info["unit_l"] = self.rsnap.m_header.unit_l
 *         header_info["unit_d"] = self.rsnap.m_header.unit_d
 *         header_info["unit_t"] = self.rsnap.m_header.unit_t             # <<<<<<<<<<<<<<
 *         return header_info
 * 
 */
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.unit_t); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(((PyObject *)__pyx_v_header_info), ((PyObject *)__pyx_n_s__unit_t), __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 506; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":507
 *         header_info["unit_d"] = self.rsnap.m_header.unit_d
 *         header_info["unit_t"] = self.rsnap.m_header.unit_t
 *         return header_info             # <<<<<<<<<<<<<<
 * 
 *     def fill_hierarchy_arrays(self,
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_header_info));
  __pyx_r = ((PyObject *)__pyx_v_header_info);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.get_file_info");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_header_info);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":509
 *         return header_info
 * 
 *     def fill_hierarchy_arrays(self,             # <<<<<<<<<<<<<<
 *                               np.ndarray[np.float64_t, ndim=2] left_edges,
 *                               np.ndarray[np.float64_t, ndim=2] right_edges,
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_fill_hierarchy_arrays(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_fill_hierarchy_arrays(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_left_edges = 0;
  PyArrayObject *__pyx_v_right_edges = 0;
  PyArrayObject *__pyx_v_grid_levels = 0;
  PyArrayObject *__pyx_v_grid_file_locations = 0;
  PyArrayObject *__pyx_v_child_mask = 0;
  unsigned int __pyx_v_idomain;
  unsigned int __pyx_v_ilevel;
  RAMSES::AMR::RAMSES_tree *__pyx_v_local_tree;
  RAMSES::HYDRO::RAMSES_hydro_data *__pyx_v_local_hydro_data;
  RAMSES::AMR::RAMSES_tree::iterator __pyx_v_grid_it;
  RAMSES::AMR::RAMSES_tree::iterator __pyx_v_grid_end;
  RAMSES::AMR::RAMSES_tree::iterator __pyx_v_father_it;
  RAMSES::AMR::vec<double> __pyx_v_gvec;
  int __pyx_v_grid_ind;
  unsigned int __pyx_v_parent_ind;
  int __pyx_v_ci;
  double __pyx_v_grid_half_width;
  __pyx_t_5numpy_int32_t __pyx_v_rr;
  PyObject *__pyx_v_cell_count;
  PyObject *__pyx_v_level_cell_counts;
  Py_buffer __pyx_bstruct_right_edges;
  Py_ssize_t __pyx_bstride_0_right_edges = 0;
  Py_ssize_t __pyx_bstride_1_right_edges = 0;
  Py_ssize_t __pyx_bshape_0_right_edges = 0;
  Py_ssize_t __pyx_bshape_1_right_edges = 0;
  Py_buffer __pyx_bstruct_grid_levels;
  Py_ssize_t __pyx_bstride_0_grid_levels = 0;
  Py_ssize_t __pyx_bstride_1_grid_levels = 0;
  Py_ssize_t __pyx_bshape_0_grid_levels = 0;
  Py_ssize_t __pyx_bshape_1_grid_levels = 0;
  Py_buffer __pyx_bstruct_grid_file_locations;
  Py_ssize_t __pyx_bstride_0_grid_file_locations = 0;
  Py_ssize_t __pyx_bstride_1_grid_file_locations = 0;
  Py_ssize_t __pyx_bshape_0_grid_file_locations = 0;
  Py_ssize_t __pyx_bshape_1_grid_file_locations = 0;
  Py_buffer __pyx_bstruct_child_mask;
  Py_ssize_t __pyx_bstride_0_child_mask = 0;
  Py_ssize_t __pyx_bstride_1_child_mask = 0;
  Py_ssize_t __pyx_bshape_0_child_mask = 0;
  Py_ssize_t __pyx_bshape_1_child_mask = 0;
  Py_buffer __pyx_bstruct_left_edges;
  Py_ssize_t __pyx_bstride_0_left_edges = 0;
  Py_ssize_t __pyx_bstride_1_left_edges = 0;
  Py_ssize_t __pyx_bshape_0_left_edges = 0;
  Py_ssize_t __pyx_bshape_1_left_edges = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  unsigned int __pyx_t_3;
  long __pyx_t_4;
  unsigned int __pyx_t_5;
  long __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  long __pyx_t_10;
  int __pyx_t_11;
  long __pyx_t_12;
  int __pyx_t_13;
  long __pyx_t_14;
  int __pyx_t_15;
  long __pyx_t_16;
  int __pyx_t_17;
  long __pyx_t_18;
  int __pyx_t_19;
  long __pyx_t_20;
  int __pyx_t_21;
  long __pyx_t_22;
  int __pyx_t_23;
  PyObject *__pyx_t_24 = NULL;
  PyObject *__pyx_t_25 = NULL;
  __pyx_t_5numpy_int64_t __pyx_t_26;
  long __pyx_t_27;
  int __pyx_t_28;
  long __pyx_t_29;
  int __pyx_t_30;
  long __pyx_t_31;
  int __pyx_t_32;
  int __pyx_t_33;
  int __pyx_t_34;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__left_edges,&__pyx_n_s__right_edges,&__pyx_n_s__grid_levels,&__pyx_n_s__grid_file_locations,&__pyx_n_s__child_mask,0};
  __Pyx_RefNannySetupContext("fill_hierarchy_arrays");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[5] = {0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__left_edges);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__right_edges);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fill_hierarchy_arrays", 1, 5, 5, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__grid_levels);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fill_hierarchy_arrays", 1, 5, 5, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__grid_file_locations);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fill_hierarchy_arrays", 1, 5, 5, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__child_mask);
      if (likely(values[4])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("fill_hierarchy_arrays", 1, 5, 5, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "fill_hierarchy_arrays") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_left_edges = ((PyArrayObject *)values[0]);
    __pyx_v_right_edges = ((PyArrayObject *)values[1]);
    __pyx_v_grid_levels = ((PyArrayObject *)values[2]);
    __pyx_v_grid_file_locations = ((PyArrayObject *)values[3]);
    __pyx_v_child_mask = ((PyArrayObject *)values[4]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 5) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_left_edges = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_right_edges = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_grid_levels = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 2));
    __pyx_v_grid_file_locations = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 3));
    __pyx_v_child_mask = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 4));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("fill_hierarchy_arrays", 1, 5, 5, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.fill_hierarchy_arrays");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_cell_count = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_level_cell_counts = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_bstruct_left_edges.buf = NULL;
  __pyx_bstruct_right_edges.buf = NULL;
  __pyx_bstruct_grid_levels.buf = NULL;
  __pyx_bstruct_grid_file_locations.buf = NULL;
  __pyx_bstruct_child_mask.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_left_edges), __pyx_ptype_5numpy_ndarray, 1, "left_edges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 510; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_right_edges), __pyx_ptype_5numpy_ndarray, 1, "right_edges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 511; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_grid_levels), __pyx_ptype_5numpy_ndarray, 1, "grid_levels", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 512; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_grid_file_locations), __pyx_ptype_5numpy_ndarray, 1, "grid_file_locations", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 513; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_child_mask), __pyx_ptype_5numpy_ndarray, 1, "child_mask", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_left_edges, (PyObject*)__pyx_v_left_edges, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_left_edges = __pyx_bstruct_left_edges.strides[0]; __pyx_bstride_1_left_edges = __pyx_bstruct_left_edges.strides[1];
  __pyx_bshape_0_left_edges = __pyx_bstruct_left_edges.shape[0]; __pyx_bshape_1_left_edges = __pyx_bstruct_left_edges.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_right_edges, (PyObject*)__pyx_v_right_edges, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_right_edges = __pyx_bstruct_right_edges.strides[0]; __pyx_bstride_1_right_edges = __pyx_bstruct_right_edges.strides[1];
  __pyx_bshape_0_right_edges = __pyx_bstruct_right_edges.shape[0]; __pyx_bshape_1_right_edges = __pyx_bstruct_right_edges.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_grid_levels, (PyObject*)__pyx_v_grid_levels, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_grid_levels = __pyx_bstruct_grid_levels.strides[0]; __pyx_bstride_1_grid_levels = __pyx_bstruct_grid_levels.strides[1];
  __pyx_bshape_0_grid_levels = __pyx_bstruct_grid_levels.shape[0]; __pyx_bshape_1_grid_levels = __pyx_bstruct_grid_levels.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_grid_file_locations, (PyObject*)__pyx_v_grid_file_locations, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_grid_file_locations = __pyx_bstruct_grid_file_locations.strides[0]; __pyx_bstride_1_grid_file_locations = __pyx_bstruct_grid_file_locations.strides[1];
  __pyx_bshape_0_grid_file_locations = __pyx_bstruct_grid_file_locations.shape[0]; __pyx_bshape_1_grid_file_locations = __pyx_bstruct_grid_file_locations.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_child_mask, (PyObject*)__pyx_v_child_mask, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int32_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 509; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_child_mask = __pyx_bstruct_child_mask.strides[0]; __pyx_bstride_1_child_mask = __pyx_bstruct_child_mask.strides[1];
  __pyx_bshape_0_child_mask = __pyx_bstruct_child_mask.shape[0]; __pyx_bshape_1_child_mask = __pyx_bstruct_child_mask.shape[1];

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":526
 *         cdef tree_iterator grid_it, grid_end, father_it
 *         cdef vec[double] gvec
 *         cdef int grid_ind = 0             # <<<<<<<<<<<<<<
 *         cdef unsigned parent_ind
 *         cdef bint ci
 */
  __pyx_v_grid_ind = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":533
 * 
 *         cdef np.int32_t rr
 *         cell_count = []             # <<<<<<<<<<<<<<
 *         level_cell_counts = {}
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 533; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_cell_count));
  __pyx_v_cell_count = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":534
 *         cdef np.int32_t rr
 *         cell_count = []
 *         level_cell_counts = {}             # <<<<<<<<<<<<<<
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_DECREF(((PyObject *)__pyx_v_level_cell_counts));
  __pyx_v_level_cell_counts = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":535
 *         cell_count = []
 *         level_cell_counts = {}
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):             # <<<<<<<<<<<<<<
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)
 */
  __pyx_t_2 = (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.ncpu + 1);
  for (__pyx_t_3 = 1; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_idomain = __pyx_t_3;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":537
 *         for idomain in range(1, self.rsnap.m_header.ncpu + 1):
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)             # <<<<<<<<<<<<<<
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 */
    __pyx_v_local_tree = new RAMSES::AMR::RAMSES_tree((*((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap), __pyx_v_idomain, ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.levelmax, 0);

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":538
 *             local_tree = new RAMSES_tree(deref(self.rsnap), idomain,
 *                                          self.rsnap.m_header.levelmax, 0)
 *             local_tree.read()             # <<<<<<<<<<<<<<
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 *             for ilevel in range(local_tree.m_maxlevel + 1):
 */
    __pyx_v_local_tree->read();

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":539
 *                                          self.rsnap.m_header.levelmax, 0)
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))             # <<<<<<<<<<<<<<
 *             for ilevel in range(local_tree.m_maxlevel + 1):
 *                 # this gets overwritten for every domain, which is okay
 */
    __pyx_v_local_hydro_data = new RAMSES::HYDRO::RAMSES_hydro_data((*__pyx_v_local_tree));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":540
 *             local_tree.read()
 *             local_hydro_data = new RAMSES_hydro_data(deref(local_tree))
 *             for ilevel in range(local_tree.m_maxlevel + 1):             # <<<<<<<<<<<<<<
 *                 # this gets overwritten for every domain, which is okay
 *                 level_cell_counts[ilevel] = grid_ind
 */
    __pyx_t_4 = (__pyx_v_local_tree->m_maxlevel + 1);
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_ilevel = __pyx_t_5;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":542
 *             for ilevel in range(local_tree.m_maxlevel + 1):
 *                 # this gets overwritten for every domain, which is okay
 *                 level_cell_counts[ilevel] = grid_ind             # <<<<<<<<<<<<<<
 *                 grid_half_width = self.rsnap.m_header.boxlen / (2**(ilevel + 1))
 *                 grid_it = local_tree.begin(ilevel)
 */
      __pyx_t_1 = PyInt_FromLong(__pyx_v_grid_ind); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      if (__Pyx_SetItemInt(((PyObject *)__pyx_v_level_cell_counts), __pyx_v_ilevel, __pyx_t_1, sizeof(unsigned int)+1, PyLong_FromUnsignedLong) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 542; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":543
 *                 # this gets overwritten for every domain, which is okay
 *                 level_cell_counts[ilevel] = grid_ind
 *                 grid_half_width = self.rsnap.m_header.boxlen / (2**(ilevel + 1))             # <<<<<<<<<<<<<<
 *                 grid_it = local_tree.begin(ilevel)
 *                 grid_end = local_tree.end(ilevel)
 */
      __pyx_t_6 = __Pyx_pow_long(2, (__pyx_v_ilevel + 1));
      if (unlikely(__pyx_t_6 == 0)) {
        PyErr_Format(PyExc_ZeroDivisionError, "float division");
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_grid_half_width = (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->rsnap->m_header.boxlen / __pyx_t_6);

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":544
 *                 level_cell_counts[ilevel] = grid_ind
 *                 grid_half_width = self.rsnap.m_header.boxlen / (2**(ilevel + 1))
 *                 grid_it = local_tree.begin(ilevel)             # <<<<<<<<<<<<<<
 *                 grid_end = local_tree.end(ilevel)
 *                 while grid_it != grid_end:
 */
      __pyx_v_grid_it = __pyx_v_local_tree->begin(__pyx_v_ilevel);

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":545
 *                 grid_half_width = self.rsnap.m_header.boxlen / (2**(ilevel + 1))
 *                 grid_it = local_tree.begin(ilevel)
 *                 grid_end = local_tree.end(ilevel)             # <<<<<<<<<<<<<<
 *                 while grid_it != grid_end:
 *                     gvec = local_tree.grid_pos_double(grid_it)
 */
      __pyx_v_grid_end = __pyx_v_local_tree->end(__pyx_v_ilevel);

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":546
 *                 grid_it = local_tree.begin(ilevel)
 *                 grid_end = local_tree.end(ilevel)
 *                 while grid_it != grid_end:             # <<<<<<<<<<<<<<
 *                     gvec = local_tree.grid_pos_double(grid_it)
 *                     left_edges[grid_ind, 0] = gvec.x - grid_half_width
 */
      while (1) {
        __pyx_t_7 = (__pyx_v_grid_it != __pyx_v_grid_end);
        if (!__pyx_t_7) break;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":547
 *                 grid_end = local_tree.end(ilevel)
 *                 while grid_it != grid_end:
 *                     gvec = local_tree.grid_pos_double(grid_it)             # <<<<<<<<<<<<<<
 *                     left_edges[grid_ind, 0] = gvec.x - grid_half_width
 *                     left_edges[grid_ind, 1] = gvec.y - grid_half_width
 */
        __pyx_v_gvec = __pyx_v_local_tree->grid_pos<double>(__pyx_v_grid_it);

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":548
 *                 while grid_it != grid_end:
 *                     gvec = local_tree.grid_pos_double(grid_it)
 *                     left_edges[grid_ind, 0] = gvec.x - grid_half_width             # <<<<<<<<<<<<<<
 *                     left_edges[grid_ind, 1] = gvec.y - grid_half_width
 *                     left_edges[grid_ind, 2] = gvec.z - grid_half_width
 */
        __pyx_t_8 = __pyx_v_grid_ind;
        __pyx_t_6 = 0;
        __pyx_t_9 = -1;
        if (__pyx_t_8 < 0) {
          __pyx_t_8 += __pyx_bshape_0_left_edges;
          if (unlikely(__pyx_t_8 < 0)) __pyx_t_9 = 0;
        } else if (unlikely(__pyx_t_8 >= __pyx_bshape_0_left_edges)) __pyx_t_9 = 0;
        if (__pyx_t_6 < 0) {
          __pyx_t_6 += __pyx_bshape_1_left_edges;
          if (unlikely(__pyx_t_6 < 0)) __pyx_t_9 = 1;
        } else if (unlikely(__pyx_t_6 >= __pyx_bshape_1_left_edges)) __pyx_t_9 = 1;
        if (unlikely(__pyx_t_9 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_9);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_8, __pyx_bstride_0_left_edges, __pyx_t_6, __pyx_bstride_1_left_edges) = (__pyx_v_gvec.x - __pyx_v_grid_half_width);

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":549
 *                     gvec = local_tree.grid_pos_double(grid_it)
 *                     left_edges[grid_ind, 0] = gvec.x - grid_half_width
 *                     left_edges[grid_ind, 1] = gvec.y - grid_half_width             # <<<<<<<<<<<<<<
 *                     left_edges[grid_ind, 2] = gvec.z - grid_half_width
 *                     right_edges[grid_ind, 0] = gvec.x + grid_half_width
 */
        __pyx_t_9 = __pyx_v_grid_ind;
        __pyx_t_10 = 1;
        __pyx_t_11 = -1;
        if (__pyx_t_9 < 0) {
          __pyx_t_9 += __pyx_bshape_0_left_edges;
          if (unlikely(__pyx_t_9 < 0)) __pyx_t_11 = 0;
        } else if (unlikely(__pyx_t_9 >= __pyx_bshape_0_left_edges)) __pyx_t_11 = 0;
        if (__pyx_t_10 < 0) {
          __pyx_t_10 += __pyx_bshape_1_left_edges;
          if (unlikely(__pyx_t_10 < 0)) __pyx_t_11 = 1;
        } else if (unlikely(__pyx_t_10 >= __pyx_bshape_1_left_edges)) __pyx_t_11 = 1;
        if (unlikely(__pyx_t_11 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_11);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_9, __pyx_bstride_0_left_edges, __pyx_t_10, __pyx_bstride_1_left_edges) = (__pyx_v_gvec.y - __pyx_v_grid_half_width);

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":550
 *                     left_edges[grid_ind, 0] = gvec.x - grid_half_width
 *                     left_edges[grid_ind, 1] = gvec.y - grid_half_width
 *                     left_edges[grid_ind, 2] = gvec.z - grid_half_width             # <<<<<<<<<<<<<<
 *                     right_edges[grid_ind, 0] = gvec.x + grid_half_width
 *                     right_edges[grid_ind, 1] = gvec.y + grid_half_width
 */
        __pyx_t_11 = __pyx_v_grid_ind;
        __pyx_t_12 = 2;
        __pyx_t_13 = -1;
        if (__pyx_t_11 < 0) {
          __pyx_t_11 += __pyx_bshape_0_left_edges;
          if (unlikely(__pyx_t_11 < 0)) __pyx_t_13 = 0;
        } else if (unlikely(__pyx_t_11 >= __pyx_bshape_0_left_edges)) __pyx_t_13 = 0;
        if (__pyx_t_12 < 0) {
          __pyx_t_12 += __pyx_bshape_1_left_edges;
          if (unlikely(__pyx_t_12 < 0)) __pyx_t_13 = 1;
        } else if (unlikely(__pyx_t_12 >= __pyx_bshape_1_left_edges)) __pyx_t_13 = 1;
        if (unlikely(__pyx_t_13 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_13);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_11, __pyx_bstride_0_left_edges, __pyx_t_12, __pyx_bstride_1_left_edges) = (__pyx_v_gvec.z - __pyx_v_grid_half_width);

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":551
 *                     left_edges[grid_ind, 1] = gvec.y - grid_half_width
 *                     left_edges[grid_ind, 2] = gvec.z - grid_half_width
 *                     right_edges[grid_ind, 0] = gvec.x + grid_half_width             # <<<<<<<<<<<<<<
 *                     right_edges[grid_ind, 1] = gvec.y + grid_half_width
 *                     right_edges[grid_ind, 2] = gvec.z + grid_half_width
 */
        __pyx_t_13 = __pyx_v_grid_ind;
        __pyx_t_14 = 0;
        __pyx_t_15 = -1;
        if (__pyx_t_13 < 0) {
          __pyx_t_13 += __pyx_bshape_0_right_edges;
          if (unlikely(__pyx_t_13 < 0)) __pyx_t_15 = 0;
        } else if (unlikely(__pyx_t_13 >= __pyx_bshape_0_right_edges)) __pyx_t_15 = 0;
        if (__pyx_t_14 < 0) {
          __pyx_t_14 += __pyx_bshape_1_right_edges;
          if (unlikely(__pyx_t_14 < 0)) __pyx_t_15 = 1;
        } else if (unlikely(__pyx_t_14 >= __pyx_bshape_1_right_edges)) __pyx_t_15 = 1;
        if (unlikely(__pyx_t_15 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_15);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_bstruct_right_edges.buf, __pyx_t_13, __pyx_bstride_0_right_edges, __pyx_t_14, __pyx_bstride_1_right_edges) = (__pyx_v_gvec.x + __pyx_v_grid_half_width);

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":552
 *                     left_edges[grid_ind, 2] = gvec.z - grid_half_width
 *                     right_edges[grid_ind, 0] = gvec.x + grid_half_width
 *                     right_edges[grid_ind, 1] = gvec.y + grid_half_width             # <<<<<<<<<<<<<<
 *                     right_edges[grid_ind, 2] = gvec.z + grid_half_width
 *                     grid_levels[grid_ind, 0] = ilevel
 */
        __pyx_t_15 = __pyx_v_grid_ind;
        __pyx_t_16 = 1;
        __pyx_t_17 = -1;
        if (__pyx_t_15 < 0) {
          __pyx_t_15 += __pyx_bshape_0_right_edges;
          if (unlikely(__pyx_t_15 < 0)) __pyx_t_17 = 0;
        } else if (unlikely(__pyx_t_15 >= __pyx_bshape_0_right_edges)) __pyx_t_17 = 0;
        if (__pyx_t_16 < 0) {
          __pyx_t_16 += __pyx_bshape_1_right_edges;
          if (unlikely(__pyx_t_16 < 0)) __pyx_t_17 = 1;
        } else if (unlikely(__pyx_t_16 >= __pyx_bshape_1_right_edges)) __pyx_t_17 = 1;
        if (unlikely(__pyx_t_17 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_17);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_bstruct_right_edges.buf, __pyx_t_15, __pyx_bstride_0_right_edges, __pyx_t_16, __pyx_bstride_1_right_edges) = (__pyx_v_gvec.y + __pyx_v_grid_half_width);

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":553
 *                     right_edges[grid_ind, 0] = gvec.x + grid_half_width
 *                     right_edges[grid_ind, 1] = gvec.y + grid_half_width
 *                     right_edges[grid_ind, 2] = gvec.z + grid_half_width             # <<<<<<<<<<<<<<
 *                     grid_levels[grid_ind, 0] = ilevel
 *                     # Now the harder part
 */
        __pyx_t_17 = __pyx_v_grid_ind;
        __pyx_t_18 = 2;
        __pyx_t_19 = -1;
        if (__pyx_t_17 < 0) {
          __pyx_t_17 += __pyx_bshape_0_right_edges;
          if (unlikely(__pyx_t_17 < 0)) __pyx_t_19 = 0;
        } else if (unlikely(__pyx_t_17 >= __pyx_bshape_0_right_edges)) __pyx_t_19 = 0;
        if (__pyx_t_18 < 0) {
          __pyx_t_18 += __pyx_bshape_1_right_edges;
          if (unlikely(__pyx_t_18 < 0)) __pyx_t_19 = 1;
        } else if (unlikely(__pyx_t_18 >= __pyx_bshape_1_right_edges)) __pyx_t_19 = 1;
        if (unlikely(__pyx_t_19 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_19);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_float64_t *, __pyx_bstruct_right_edges.buf, __pyx_t_17, __pyx_bstride_0_right_edges, __pyx_t_18, __pyx_bstride_1_right_edges) = (__pyx_v_gvec.z + __pyx_v_grid_half_width);

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":554
 *                     right_edges[grid_ind, 1] = gvec.y + grid_half_width
 *                     right_edges[grid_ind, 2] = gvec.z + grid_half_width
 *                     grid_levels[grid_ind, 0] = ilevel             # <<<<<<<<<<<<<<
 *                     # Now the harder part
 *                     father_it = grid_it.get_parent()
 */
        __pyx_t_19 = __pyx_v_grid_ind;
        __pyx_t_20 = 0;
        __pyx_t_21 = -1;
        if (__pyx_t_19 < 0) {
          __pyx_t_19 += __pyx_bshape_0_grid_levels;
          if (unlikely(__pyx_t_19 < 0)) __pyx_t_21 = 0;
        } else if (unlikely(__pyx_t_19 >= __pyx_bshape_0_grid_levels)) __pyx_t_21 = 0;
        if (__pyx_t_20 < 0) {
          __pyx_t_20 += __pyx_bshape_1_grid_levels;
          if (unlikely(__pyx_t_20 < 0)) __pyx_t_21 = 1;
        } else if (unlikely(__pyx_t_20 >= __pyx_bshape_1_grid_levels)) __pyx_t_21 = 1;
        if (unlikely(__pyx_t_21 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_21);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int32_t *, __pyx_bstruct_grid_levels.buf, __pyx_t_19, __pyx_bstride_0_grid_levels, __pyx_t_20, __pyx_bstride_1_grid_levels) = __pyx_v_ilevel;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":556
 *                     grid_levels[grid_ind, 0] = ilevel
 *                     # Now the harder part
 *                     father_it = grid_it.get_parent()             # <<<<<<<<<<<<<<
 *                     grid_file_locations[grid_ind, 0] = idomain
 *                     grid_file_locations[grid_ind, 1] = grid_ind - level_cell_counts[ilevel]
 */
        __pyx_v_father_it = __pyx_v_grid_it.get_parent();

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":557
 *                     # Now the harder part
 *                     father_it = grid_it.get_parent()
 *                     grid_file_locations[grid_ind, 0] = idomain             # <<<<<<<<<<<<<<
 *                     grid_file_locations[grid_ind, 1] = grid_ind - level_cell_counts[ilevel]
 *                     parent_ind = father_it.get_absolute_position()
 */
        __pyx_t_21 = __pyx_v_grid_ind;
        __pyx_t_22 = 0;
        __pyx_t_23 = -1;
        if (__pyx_t_21 < 0) {
          __pyx_t_21 += __pyx_bshape_0_grid_file_locations;
          if (unlikely(__pyx_t_21 < 0)) __pyx_t_23 = 0;
        } else if (unlikely(__pyx_t_21 >= __pyx_bshape_0_grid_file_locations)) __pyx_t_23 = 0;
        if (__pyx_t_22 < 0) {
          __pyx_t_22 += __pyx_bshape_1_grid_file_locations;
          if (unlikely(__pyx_t_22 < 0)) __pyx_t_23 = 1;
        } else if (unlikely(__pyx_t_22 >= __pyx_bshape_1_grid_file_locations)) __pyx_t_23 = 1;
        if (unlikely(__pyx_t_23 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_23);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 557; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_grid_file_locations.buf, __pyx_t_21, __pyx_bstride_0_grid_file_locations, __pyx_t_22, __pyx_bstride_1_grid_file_locations) = __pyx_v_idomain;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":558
 *                     father_it = grid_it.get_parent()
 *                     grid_file_locations[grid_ind, 0] = idomain
 *                     grid_file_locations[grid_ind, 1] = grid_ind - level_cell_counts[ilevel]             # <<<<<<<<<<<<<<
 *                     parent_ind = father_it.get_absolute_position()
 *                     if ilevel > 0:
 */
        __pyx_t_1 = PyInt_FromLong(__pyx_v_grid_ind); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_24 = __Pyx_GetItemInt(((PyObject *)__pyx_v_level_cell_counts), __pyx_v_ilevel, sizeof(unsigned int)+1, PyLong_FromUnsignedLong); if (!__pyx_t_24) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_24);
        __pyx_t_25 = PyNumber_Subtract(__pyx_t_1, __pyx_t_24); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_25);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
        __pyx_t_26 = __Pyx_PyInt_from_py_npy_int64(__pyx_t_25); if (unlikely((__pyx_t_26 == (npy_int64)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
        __pyx_t_23 = __pyx_v_grid_ind;
        __pyx_t_27 = 1;
        __pyx_t_28 = -1;
        if (__pyx_t_23 < 0) {
          __pyx_t_23 += __pyx_bshape_0_grid_file_locations;
          if (unlikely(__pyx_t_23 < 0)) __pyx_t_28 = 0;
        } else if (unlikely(__pyx_t_23 >= __pyx_bshape_0_grid_file_locations)) __pyx_t_28 = 0;
        if (__pyx_t_27 < 0) {
          __pyx_t_27 += __pyx_bshape_1_grid_file_locations;
          if (unlikely(__pyx_t_27 < 0)) __pyx_t_28 = 1;
        } else if (unlikely(__pyx_t_27 >= __pyx_bshape_1_grid_file_locations)) __pyx_t_28 = 1;
        if (unlikely(__pyx_t_28 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_28);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 558; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_grid_file_locations.buf, __pyx_t_23, __pyx_bstride_0_grid_file_locations, __pyx_t_27, __pyx_bstride_1_grid_file_locations) = __pyx_t_26;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":559
 *                     grid_file_locations[grid_ind, 0] = idomain
 *                     grid_file_locations[grid_ind, 1] = grid_ind - level_cell_counts[ilevel]
 *                     parent_ind = father_it.get_absolute_position()             # <<<<<<<<<<<<<<
 *                     if ilevel > 0:
 *                         # We calculate the REAL parent index
 */
        __pyx_v_parent_ind = __pyx_v_father_it.get_absolute_position();

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":560
 *                     grid_file_locations[grid_ind, 1] = grid_ind - level_cell_counts[ilevel]
 *                     parent_ind = father_it.get_absolute_position()
 *                     if ilevel > 0:             # <<<<<<<<<<<<<<
 *                         # We calculate the REAL parent index
 *                         grid_file_locations[grid_ind, 2] = \
 */
        __pyx_t_7 = (__pyx_v_ilevel > 0);
        if (__pyx_t_7) {

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":563
 *                         # We calculate the REAL parent index
 *                         grid_file_locations[grid_ind, 2] = \
 *                             level_cell_counts[ilevel - 1] + parent_ind             # <<<<<<<<<<<<<<
 *                     else:
 *                         grid_file_locations[grid_ind, 2] = -1
 */
          __pyx_t_29 = (__pyx_v_ilevel - 1);
          __pyx_t_25 = __Pyx_GetItemInt(((PyObject *)__pyx_v_level_cell_counts), __pyx_t_29, sizeof(long), PyInt_FromLong); if (!__pyx_t_25) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_25);
          __pyx_t_24 = PyLong_FromUnsignedLong(__pyx_v_parent_ind); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_24);
          __pyx_t_1 = PyNumber_Add(__pyx_t_25, __pyx_t_24); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
          __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
          __pyx_t_26 = __Pyx_PyInt_from_py_npy_int64(__pyx_t_1); if (unlikely((__pyx_t_26 == (npy_int64)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":562
 *                     if ilevel > 0:
 *                         # We calculate the REAL parent index
 *                         grid_file_locations[grid_ind, 2] = \             # <<<<<<<<<<<<<<
 *                             level_cell_counts[ilevel - 1] + parent_ind
 *                     else:
 */
          __pyx_t_28 = __pyx_v_grid_ind;
          __pyx_t_29 = 2;
          __pyx_t_30 = -1;
          if (__pyx_t_28 < 0) {
            __pyx_t_28 += __pyx_bshape_0_grid_file_locations;
            if (unlikely(__pyx_t_28 < 0)) __pyx_t_30 = 0;
          } else if (unlikely(__pyx_t_28 >= __pyx_bshape_0_grid_file_locations)) __pyx_t_30 = 0;
          if (__pyx_t_29 < 0) {
            __pyx_t_29 += __pyx_bshape_1_grid_file_locations;
            if (unlikely(__pyx_t_29 < 0)) __pyx_t_30 = 1;
          } else if (unlikely(__pyx_t_29 >= __pyx_bshape_1_grid_file_locations)) __pyx_t_30 = 1;
          if (unlikely(__pyx_t_30 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_30);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_grid_file_locations.buf, __pyx_t_28, __pyx_bstride_0_grid_file_locations, __pyx_t_29, __pyx_bstride_1_grid_file_locations) = __pyx_t_26;
          goto __pyx_L12;
        }
        /*else*/ {

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":565
 *                             level_cell_counts[ilevel - 1] + parent_ind
 *                     else:
 *                         grid_file_locations[grid_ind, 2] = -1             # <<<<<<<<<<<<<<
 *                     for ci in range(8):
 *                         rr = <np.int32_t> grid_it.is_finest(ci)
 */
          __pyx_t_30 = __pyx_v_grid_ind;
          __pyx_t_31 = 2;
          __pyx_t_32 = -1;
          if (__pyx_t_30 < 0) {
            __pyx_t_30 += __pyx_bshape_0_grid_file_locations;
            if (unlikely(__pyx_t_30 < 0)) __pyx_t_32 = 0;
          } else if (unlikely(__pyx_t_30 >= __pyx_bshape_0_grid_file_locations)) __pyx_t_32 = 0;
          if (__pyx_t_31 < 0) {
            __pyx_t_31 += __pyx_bshape_1_grid_file_locations;
            if (unlikely(__pyx_t_31 < 0)) __pyx_t_32 = 1;
          } else if (unlikely(__pyx_t_31 >= __pyx_bshape_1_grid_file_locations)) __pyx_t_32 = 1;
          if (unlikely(__pyx_t_32 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_32);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_grid_file_locations.buf, __pyx_t_30, __pyx_bstride_0_grid_file_locations, __pyx_t_31, __pyx_bstride_1_grid_file_locations) = -1;
        }
        __pyx_L12:;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":566
 *                     else:
 *                         grid_file_locations[grid_ind, 2] = -1
 *                     for ci in range(8):             # <<<<<<<<<<<<<<
 *                         rr = <np.int32_t> grid_it.is_finest(ci)
 *                         child_mask[grid_ind, ci] = rr
 */
        for (__pyx_t_7 = 0; __pyx_t_7 < 8; __pyx_t_7+=1) {
          __pyx_v_ci = __pyx_t_7;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":567
 *                         grid_file_locations[grid_ind, 2] = -1
 *                     for ci in range(8):
 *                         rr = <np.int32_t> grid_it.is_finest(ci)             # <<<<<<<<<<<<<<
 *                         child_mask[grid_ind, ci] = rr
 *                     grid_ind += 1
 */
          __pyx_v_rr = ((__pyx_t_5numpy_int32_t)__pyx_v_grid_it.is_finest(__pyx_v_ci));

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":568
 *                     for ci in range(8):
 *                         rr = <np.int32_t> grid_it.is_finest(ci)
 *                         child_mask[grid_ind, ci] = rr             # <<<<<<<<<<<<<<
 *                     grid_ind += 1
 *                     grid_it.next()
 */
          __pyx_t_32 = __pyx_v_grid_ind;
          __pyx_t_33 = __pyx_v_ci;
          __pyx_t_34 = -1;
          if (__pyx_t_32 < 0) {
            __pyx_t_32 += __pyx_bshape_0_child_mask;
            if (unlikely(__pyx_t_32 < 0)) __pyx_t_34 = 0;
          } else if (unlikely(__pyx_t_32 >= __pyx_bshape_0_child_mask)) __pyx_t_34 = 0;
          if (__pyx_t_33 < 0) {
            __pyx_t_33 += __pyx_bshape_1_child_mask;
            if (unlikely(__pyx_t_33 < 0)) __pyx_t_34 = 1;
          } else if (unlikely(__pyx_t_33 >= __pyx_bshape_1_child_mask)) __pyx_t_34 = 1;
          if (unlikely(__pyx_t_34 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_34);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int32_t *, __pyx_bstruct_child_mask.buf, __pyx_t_32, __pyx_bstride_0_child_mask, __pyx_t_33, __pyx_bstride_1_child_mask) = __pyx_v_rr;
        }

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":569
 *                         rr = <np.int32_t> grid_it.is_finest(ci)
 *                         child_mask[grid_ind, ci] = rr
 *                     grid_ind += 1             # <<<<<<<<<<<<<<
 *                     grid_it.next()
 *             del local_tree, local_hydro_data
 */
        __pyx_v_grid_ind += 1;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":570
 *                         child_mask[grid_ind, ci] = rr
 *                     grid_ind += 1
 *                     grid_it.next()             # <<<<<<<<<<<<<<
 *             del local_tree, local_hydro_data
 * 
 */
        __pyx_v_grid_it.next();
      }
    }

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":571
 *                     grid_ind += 1
 *                     grid_it.next()
 *             del local_tree, local_hydro_data             # <<<<<<<<<<<<<<
 * 
 *     def read_grid(self, char *field, int level, int domain, int grid_id):
 */
    delete __pyx_v_local_tree;
    delete __pyx_v_local_hydro_data;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_24);
  __Pyx_XDECREF(__pyx_t_25);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_right_edges);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_grid_levels);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_grid_file_locations);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_child_mask);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_left_edges);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.fill_hierarchy_arrays");
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_right_edges);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_grid_levels);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_grid_file_locations);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_child_mask);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_left_edges);
  __pyx_L2:;
  __Pyx_DECREF(__pyx_v_cell_count);
  __Pyx_DECREF(__pyx_v_level_cell_counts);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":573
 *             del local_tree, local_hydro_data
 * 
 *     def read_grid(self, char *field, int level, int domain, int grid_id):             # <<<<<<<<<<<<<<
 * 
 *         self.ensure_loaded(field, domain - 1)
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_read_grid(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_read_grid(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_field;
  int __pyx_v_level;
  int __pyx_v_domain;
  int __pyx_v_grid_id;
  int __pyx_v_varindex;
  int __pyx_v_i;
  PyArrayObject *__pyx_v_tr = 0;
  double *__pyx_v_data;
  RAMSES::AMR::RAMSES_tree *__pyx_v_local_tree;
  RAMSES::HYDRO::RAMSES_hydro_data *__pyx_v_local_hydro_data;
  Py_buffer __pyx_bstruct_tr;
  Py_ssize_t __pyx_bstride_0_tr = 0;
  Py_ssize_t __pyx_bstride_1_tr = 0;
  Py_ssize_t __pyx_bstride_2_tr = 0;
  Py_ssize_t __pyx_bshape_0_tr = 0;
  Py_ssize_t __pyx_bshape_1_tr = 0;
  Py_ssize_t __pyx_bshape_2_tr = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyArrayObject *__pyx_t_6 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__field,&__pyx_n_s__level,&__pyx_n_s__domain,&__pyx_n_s__grid_id,0};
  __Pyx_RefNannySetupContext("read_grid");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[4] = {0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__field);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__level);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("read_grid", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__domain);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("read_grid", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__grid_id);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("read_grid", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "read_grid") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_field = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_field) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_level = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_level == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_domain = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_domain == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_grid_id = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_grid_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_field = PyBytes_AsString(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((!__pyx_v_field) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_level = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely((__pyx_v_level == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_domain = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely((__pyx_v_domain == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_grid_id = __Pyx_PyInt_AsInt(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely((__pyx_v_grid_id == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("read_grid", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 573; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.read_grid");
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_bstruct_tr.buf = NULL;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":575
 *     def read_grid(self, char *field, int level, int domain, int grid_id):
 * 
 *         self.ensure_loaded(field, domain - 1)             # <<<<<<<<<<<<<<
 *         cdef int varindex = self.field_ind[field]
 *         cdef int i
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self, __pyx_n_s__ensure_loaded); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyBytes_FromString(__pyx_v_field); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_t_3 = PyInt_FromLong((__pyx_v_domain - 1)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_2));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_1, __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 575; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":576
 * 
 *         self.ensure_loaded(field, domain - 1)
 *         cdef int varindex = self.field_ind[field]             # <<<<<<<<<<<<<<
 *         cdef int i
 * 
 */
  __pyx_t_3 = PyBytes_FromString(__pyx_v_field); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_3));
  __pyx_t_4 = PyObject_GetItem(((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->field_ind, ((PyObject *)__pyx_t_3)); if (!__pyx_t_4) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_t_5 = __Pyx_PyInt_AsInt(__pyx_t_4); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_varindex = __pyx_t_5;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":579
 *         cdef int i
 * 
 *         cdef np.ndarray[np.float64_t, ndim=3] tr = np.empty((2,2,2), dtype='float64',             # <<<<<<<<<<<<<<
 *                                                    order='F')
 *         cdef tree_iterator grid_it, grid_end
 */
  __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyObject_GetAttr(__pyx_t_4, __pyx_n_s__empty); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_INCREF(__pyx_int_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  __Pyx_INCREF(__pyx_int_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  __Pyx_INCREF(__pyx_int_2);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_int_2);
  __Pyx_GIVEREF(__pyx_int_2);
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_t_4 = 0;
  __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_4));
  if (PyDict_SetItem(__pyx_t_4, ((PyObject *)__pyx_n_s__dtype), ((PyObject *)__pyx_n_s__float64)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (PyDict_SetItem(__pyx_t_4, ((PyObject *)__pyx_n_s__order), ((PyObject *)__pyx_n_s__F)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyEval_CallObjectWithKeywords(__pyx_t_3, __pyx_t_1, ((PyObject *)__pyx_t_4)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_2);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_tr, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_float64_t, PyBUF_FORMAT| PyBUF_STRIDES, 3, 0, __pyx_stack) == -1)) {
      __pyx_v_tr = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_bstruct_tr.buf = NULL;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    } else {__pyx_bstride_0_tr = __pyx_bstruct_tr.strides[0]; __pyx_bstride_1_tr = __pyx_bstruct_tr.strides[1]; __pyx_bstride_2_tr = __pyx_bstruct_tr.strides[2];
      __pyx_bshape_0_tr = __pyx_bstruct_tr.shape[0]; __pyx_bshape_1_tr = __pyx_bstruct_tr.shape[1]; __pyx_bshape_2_tr = __pyx_bstruct_tr.shape[2];
    }
  }
  __pyx_t_6 = 0;
  __pyx_v_tr = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":582
 *                                                    order='F')
 *         cdef tree_iterator grid_it, grid_end
 *         cdef double* data = <double*> tr.data             # <<<<<<<<<<<<<<
 * 
 *         cdef RAMSES_tree *local_tree = self.trees[domain - 1]
 */
  __pyx_v_data = ((double *)__pyx_v_tr->data);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":584
 *         cdef double* data = <double*> tr.data
 * 
 *         cdef RAMSES_tree *local_tree = self.trees[domain - 1]             # <<<<<<<<<<<<<<
 *         cdef RAMSES_hydro_data *local_hydro_data = self.hydro_datas[domain - 1][varindex]
 * 
 */
  __pyx_v_local_tree = (((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->trees[(__pyx_v_domain - 1)]);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":585
 * 
 *         cdef RAMSES_tree *local_tree = self.trees[domain - 1]
 *         cdef RAMSES_hydro_data *local_hydro_data = self.hydro_datas[domain - 1][varindex]             # <<<<<<<<<<<<<<
 * 
 *         #inline ValueType_& cell_value( const typename TreeType_::iterator& it,
 */
  __pyx_v_local_hydro_data = ((((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)__pyx_v_self)->hydro_datas[(__pyx_v_domain - 1)])[__pyx_v_varindex]);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":595
 *         #}
 * 
 *         for i in range(8):             # <<<<<<<<<<<<<<
 *             data[i] = local_hydro_data.m_var_array[level][8*grid_id+i]
 *         return tr
 */
  for (__pyx_t_5 = 0; __pyx_t_5 < 8; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":596
 * 
 *         for i in range(8):
 *             data[i] = local_hydro_data.m_var_array[level][8*grid_id+i]             # <<<<<<<<<<<<<<
 *         return tr
 * 
 */
    (__pyx_v_data[__pyx_v_i]) = ((__pyx_v_local_hydro_data->m_var_array[__pyx_v_level])[((8 * __pyx_v_grid_id) + __pyx_v_i)]);
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":597
 *         for i in range(8):
 *             data[i] = local_hydro_data.m_var_array[level][8*grid_id+i]
 *         return tr             # <<<<<<<<<<<<<<
 * 
 * cdef class ProtoSubgrid:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_tr));
  __pyx_r = ((PyObject *)__pyx_v_tr);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_tr);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yt.ramses_reader.RAMSES_tree_proxy.read_grid");
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_tr);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_tr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":604
 *     cdef np.int64_t right_edge[3]
 *     cdef np.int64_t dimensions[3]
 *     cdef public np.float64_t efficiency             # <<<<<<<<<<<<<<
 *     cdef public object sigs
 *     cdef public object grid_file_locations
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_10efficiency___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_10efficiency___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->efficiency); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("yt.ramses_reader.ProtoSubgrid.efficiency.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_10efficiency___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_10efficiency___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __pyx_t_5numpy_float64_t __pyx_t_1;
  __Pyx_RefNannySetupContext("__set__");
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_1 == (npy_float64)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 604; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->efficiency = __pyx_t_1;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("yt.ramses_reader.ProtoSubgrid.efficiency.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":605
 *     cdef np.int64_t dimensions[3]
 *     cdef public np.float64_t efficiency
 *     cdef public object sigs             # <<<<<<<<<<<<<<
 *     cdef public object grid_file_locations
 *     cdef public object dd
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs);
  __pyx_r = ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":606
 *     cdef public np.float64_t efficiency
 *     cdef public object sigs
 *     cdef public object grid_file_locations             # <<<<<<<<<<<<<<
 *     cdef public object dd
 * 
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations);
  __pyx_r = ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":607
 *     cdef public object sigs
 *     cdef public object grid_file_locations
 *     cdef public object dd             # <<<<<<<<<<<<<<
 * 
 *     #@cython.boundscheck(False)
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannySetupContext("__get__");
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  __pyx_r = ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__set__");
  __Pyx_INCREF(__pyx_v_value);
  __Pyx_GIVEREF(__pyx_v_value);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd = __pyx_v_value;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___del__(PyObject *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannySetupContext("__del__");
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd = Py_None;

  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":611
 *     #@cython.boundscheck(False)
 *     #@cython.wraparound(False)
 *     def __cinit__(self,             # <<<<<<<<<<<<<<
 *                    np.ndarray[np.int64_t, ndim=1] left_index,
 *                    np.ndarray[np.int64_t, ndim=1] dimensions,
 */

static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyArrayObject *__pyx_v_left_index = 0;
  PyArrayObject *__pyx_v_dimensions = 0;
  PyArrayObject *__pyx_v_left_edges = 0;
  PyArrayObject *__pyx_v_right_edges = 0;
  PyArrayObject *__pyx_v_grid_dimensions = 0;
  PyArrayObject *__pyx_v_grid_file_locations = 0;
  int __pyx_v_i;
  int __pyx_v_ng;
  int __pyx_v_l0;
  int __pyx_v_l1;
  int __pyx_v_l2;
  int __pyx_v_i0;
  int __pyx_v_i1;
  int __pyx_v_i2;
  __pyx_t_5numpy_int64_t __pyx_v_temp_l[3];
  __pyx_t_5numpy_int64_t __pyx_v_temp_r[3];
  __pyx_t_5numpy_float64_t __pyx_v_efficiency;
  int __pyx_v_gi;
  PyArrayObject *__pyx_v_sig0;
  PyArrayObject *__pyx_v_sig1;
  PyArrayObject *__pyx_v_sig2;
  int __pyx_v_used;
  long __pyx_v_nnn;
  Py_buffer __pyx_bstruct_right_edges;
  Py_ssize_t __pyx_bstride_0_right_edges = 0;
  Py_ssize_t __pyx_bstride_1_right_edges = 0;
  Py_ssize_t __pyx_bshape_0_right_edges = 0;
  Py_ssize_t __pyx_bshape_1_right_edges = 0;
  Py_buffer __pyx_bstruct_left_index;
  Py_ssize_t __pyx_bstride_0_left_index = 0;
  Py_ssize_t __pyx_bshape_0_left_index = 0;
  Py_buffer __pyx_bstruct_dimensions;
  Py_ssize_t __pyx_bstride_0_dimensions = 0;
  Py_ssize_t __pyx_bshape_0_dimensions = 0;
  Py_buffer __pyx_bstruct_grid_file_locations;
  Py_ssize_t __pyx_bstride_0_grid_file_locations = 0;
  Py_ssize_t __pyx_bstride_1_grid_file_locations = 0;
  Py_ssize_t __pyx_bshape_0_grid_file_locations = 0;
  Py_ssize_t __pyx_bshape_1_grid_file_locations = 0;
  Py_buffer __pyx_bstruct_grid_dimensions;
  Py_ssize_t __pyx_bstride_0_grid_dimensions = 0;
  Py_ssize_t __pyx_bstride_1_grid_dimensions = 0;
  Py_ssize_t __pyx_bshape_0_grid_dimensions = 0;
  Py_ssize_t __pyx_bshape_1_grid_dimensions = 0;
  Py_buffer __pyx_bstruct_sig1;
  Py_ssize_t __pyx_bstride_0_sig1 = 0;
  Py_ssize_t __pyx_bshape_0_sig1 = 0;
  Py_buffer __pyx_bstruct_sig2;
  Py_ssize_t __pyx_bstride_0_sig2 = 0;
  Py_ssize_t __pyx_bshape_0_sig2 = 0;
  Py_buffer __pyx_bstruct_sig0;
  Py_ssize_t __pyx_bstride_0_sig0 = 0;
  Py_ssize_t __pyx_bshape_0_sig0 = 0;
  Py_buffer __pyx_bstruct_left_edges;
  Py_ssize_t __pyx_bstride_0_left_edges = 0;
  Py_ssize_t __pyx_bstride_1_left_edges = 0;
  Py_ssize_t __pyx_bshape_0_left_edges = 0;
  Py_ssize_t __pyx_bshape_1_left_edges = 0;
  int __pyx_r;
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  long __pyx_t_8;
  int __pyx_t_9;
  long __pyx_t_10;
  long __pyx_t_11;
  int __pyx_t_12;
  long __pyx_t_13;
  int __pyx_t_14;
  long __pyx_t_15;
  int __pyx_t_16;
  long __pyx_t_17;
  int __pyx_t_18;
  long __pyx_t_19;
  long __pyx_t_20;
  int __pyx_t_21;
  long __pyx_t_22;
  int __pyx_t_23;
  long __pyx_t_24;
  int __pyx_t_25;
  long __pyx_t_26;
  int __pyx_t_27;
  long __pyx_t_28;
  long __pyx_t_29;
  int __pyx_t_30;
  long __pyx_t_31;
  int __pyx_t_32;
  long __pyx_t_33;
  int __pyx_t_34;
  int __pyx_t_35;
  int __pyx_t_36;
  int __pyx_t_37;
  int __pyx_t_38;
  int __pyx_t_39;
  int __pyx_t_40;
  int __pyx_t_41;
  PyObject *__pyx_t_42 = NULL;
  PyObject *__pyx_t_43 = NULL;
  PyArrayObject *__pyx_t_44 = NULL;
  PyObject *__pyx_t_45 = NULL;
  PyObject *__pyx_t_46 = NULL;
  PyObject *__pyx_t_47 = NULL;
  int __pyx_t_48;
  long __pyx_t_49;
  int __pyx_t_50;
  __pyx_t_5numpy_int64_t __pyx_t_51;
  int __pyx_t_52;
  long __pyx_t_53;
  int __pyx_t_54;
  long __pyx_t_55;
  int __pyx_t_56;
  __pyx_t_5numpy_int64_t __pyx_t_57;
  int __pyx_t_58;
  long __pyx_t_59;
  int __pyx_t_60;
  long __pyx_t_61;
  int __pyx_t_62;
  __pyx_t_5numpy_int64_t __pyx_t_63;
  int __pyx_t_64;
  long __pyx_t_65;
  int __pyx_t_66;
  int __pyx_t_67;
  int __pyx_t_68;
  int __pyx_t_69;
  PyObject *__pyx_t_70 = NULL;
  static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__left_index,&__pyx_n_s__dimensions,&__pyx_n_s__left_edges,&__pyx_n_s__right_edges,&__pyx_n_s__grid_dimensions,&__pyx_n_s__grid_file_locations,0};
  __Pyx_RefNannySetupContext("__cinit__");
  if (unlikely(__pyx_kwds)) {
    Py_ssize_t kw_args = PyDict_Size(__pyx_kwds);
    PyObject* values[6] = {0,0,0,0,0,0};
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
      case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
      case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
      case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      case  0: break;
      default: goto __pyx_L5_argtuple_error;
    }
    switch (PyTuple_GET_SIZE(__pyx_args)) {
      case  0:
      values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__left_index);
      if (likely(values[0])) kw_args--;
      else goto __pyx_L5_argtuple_error;
      case  1:
      values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__dimensions);
      if (likely(values[1])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 6, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  2:
      values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__left_edges);
      if (likely(values[2])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 6, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  3:
      values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__right_edges);
      if (likely(values[3])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 6, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  4:
      values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__grid_dimensions);
      if (likely(values[4])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 6, 6, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
      case  5:
      values[5] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__grid_file_locations);
      if (likely(values[5])) kw_args--;
      else {
        __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 6, 6, 5); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    }
    if (unlikely(kw_args > 0)) {
      if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, PyTuple_GET_SIZE(__pyx_args), "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    }
    __pyx_v_left_index = ((PyArrayObject *)values[0]);
    __pyx_v_dimensions = ((PyArrayObject *)values[1]);
    __pyx_v_left_edges = ((PyArrayObject *)values[2]);
    __pyx_v_right_edges = ((PyArrayObject *)values[3]);
    __pyx_v_grid_dimensions = ((PyArrayObject *)values[4]);
    __pyx_v_grid_file_locations = ((PyArrayObject *)values[5]);
  } else if (PyTuple_GET_SIZE(__pyx_args) != 6) {
    goto __pyx_L5_argtuple_error;
  } else {
    __pyx_v_left_index = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_dimensions = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 1));
    __pyx_v_left_edges = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 2));
    __pyx_v_right_edges = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 3));
    __pyx_v_grid_dimensions = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 4));
    __pyx_v_grid_file_locations = ((PyArrayObject *)PyTuple_GET_ITEM(__pyx_args, 5));
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 1, 6, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("yt.ramses_reader.ProtoSubgrid.__cinit__");
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_v_sig0 = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_sig1 = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_sig2 = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_bstruct_sig0.buf = NULL;
  __pyx_bstruct_sig1.buf = NULL;
  __pyx_bstruct_sig2.buf = NULL;
  __pyx_bstruct_left_index.buf = NULL;
  __pyx_bstruct_dimensions.buf = NULL;
  __pyx_bstruct_left_edges.buf = NULL;
  __pyx_bstruct_right_edges.buf = NULL;
  __pyx_bstruct_grid_dimensions.buf = NULL;
  __pyx_bstruct_grid_file_locations.buf = NULL;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_left_index), __pyx_ptype_5numpy_ndarray, 1, "left_index", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dimensions), __pyx_ptype_5numpy_ndarray, 1, "dimensions", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_left_edges), __pyx_ptype_5numpy_ndarray, 1, "left_edges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_right_edges), __pyx_ptype_5numpy_ndarray, 1, "right_edges", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_grid_dimensions), __pyx_ptype_5numpy_ndarray, 1, "grid_dimensions", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_grid_file_locations), __pyx_ptype_5numpy_ndarray, 1, "grid_file_locations", 0))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_left_index, (PyObject*)__pyx_v_left_index, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_left_index = __pyx_bstruct_left_index.strides[0];
  __pyx_bshape_0_left_index = __pyx_bstruct_left_index.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_dimensions, (PyObject*)__pyx_v_dimensions, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_dimensions = __pyx_bstruct_dimensions.strides[0];
  __pyx_bshape_0_dimensions = __pyx_bstruct_dimensions.shape[0];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_left_edges, (PyObject*)__pyx_v_left_edges, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_left_edges = __pyx_bstruct_left_edges.strides[0]; __pyx_bstride_1_left_edges = __pyx_bstruct_left_edges.strides[1];
  __pyx_bshape_0_left_edges = __pyx_bstruct_left_edges.shape[0]; __pyx_bshape_1_left_edges = __pyx_bstruct_left_edges.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_right_edges, (PyObject*)__pyx_v_right_edges, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_right_edges = __pyx_bstruct_right_edges.strides[0]; __pyx_bstride_1_right_edges = __pyx_bstruct_right_edges.strides[1];
  __pyx_bshape_0_right_edges = __pyx_bstruct_right_edges.shape[0]; __pyx_bshape_1_right_edges = __pyx_bstruct_right_edges.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_grid_dimensions, (PyObject*)__pyx_v_grid_dimensions, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_grid_dimensions = __pyx_bstruct_grid_dimensions.strides[0]; __pyx_bstride_1_grid_dimensions = __pyx_bstruct_grid_dimensions.strides[1];
  __pyx_bshape_0_grid_dimensions = __pyx_bstruct_grid_dimensions.shape[0]; __pyx_bshape_1_grid_dimensions = __pyx_bstruct_grid_dimensions.shape[1];
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_grid_file_locations, (PyObject*)__pyx_v_grid_file_locations, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_bstride_0_grid_file_locations = __pyx_bstruct_grid_file_locations.strides[0]; __pyx_bstride_1_grid_file_locations = __pyx_bstruct_grid_file_locations.strides[1];
  __pyx_bshape_0_grid_file_locations = __pyx_bstruct_grid_file_locations.shape[0]; __pyx_bshape_1_grid_file_locations = __pyx_bstruct_grid_file_locations.shape[1];

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":619
 *                    np.ndarray[np.int64_t, ndim=2] grid_file_locations):
 *         # This also includes the shrinking step.
 *         cdef int i, ci, ng = left_edges.shape[0]             # <<<<<<<<<<<<<<
 *         cdef np.ndarray temp_arr
 *         cdef int l0, r0, l1, r1, l2, r2, i0, i1, i2
 */
  __pyx_v_ng = (__pyx_v_left_edges->dimensions[0]);

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":624
 *         cdef np.int64_t temp_l[3], temp_r[3], ncells
 *         cdef np.float64_t efficiency
 *         self.sigs = []             # <<<<<<<<<<<<<<
 *         for i in range(3):
 *             temp_l[i] = left_index[i] + dimensions[i]
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":625
 *         cdef np.float64_t efficiency
 *         self.sigs = []
 *         for i in range(3):             # <<<<<<<<<<<<<<
 *             temp_l[i] = left_index[i] + dimensions[i]
 *             temp_r[i] = left_index[i]
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":626
 *         self.sigs = []
 *         for i in range(3):
 *             temp_l[i] = left_index[i] + dimensions[i]             # <<<<<<<<<<<<<<
 *             temp_r[i] = left_index[i]
 *             self.signature[i] = NULL
 */
    __pyx_t_3 = __pyx_v_i;
    __pyx_t_4 = -1;
    if (__pyx_t_3 < 0) {
      __pyx_t_3 += __pyx_bshape_0_left_index;
      if (unlikely(__pyx_t_3 < 0)) __pyx_t_4 = 0;
    } else if (unlikely(__pyx_t_3 >= __pyx_bshape_0_left_index)) __pyx_t_4 = 0;
    if (unlikely(__pyx_t_4 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_4);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_4 = __pyx_v_i;
    __pyx_t_5 = -1;
    if (__pyx_t_4 < 0) {
      __pyx_t_4 += __pyx_bshape_0_dimensions;
      if (unlikely(__pyx_t_4 < 0)) __pyx_t_5 = 0;
    } else if (unlikely(__pyx_t_4 >= __pyx_bshape_0_dimensions)) __pyx_t_5 = 0;
    if (unlikely(__pyx_t_5 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_5);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (__pyx_v_temp_l[__pyx_v_i]) = ((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_3, __pyx_bstride_0_left_index)) + (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_dimensions.buf, __pyx_t_4, __pyx_bstride_0_dimensions)));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":627
 *         for i in range(3):
 *             temp_l[i] = left_index[i] + dimensions[i]
 *             temp_r[i] = left_index[i]             # <<<<<<<<<<<<<<
 *             self.signature[i] = NULL
 *         for gi in range(ng):
 */
    __pyx_t_5 = __pyx_v_i;
    __pyx_t_6 = -1;
    if (__pyx_t_5 < 0) {
      __pyx_t_5 += __pyx_bshape_0_left_index;
      if (unlikely(__pyx_t_5 < 0)) __pyx_t_6 = 0;
    } else if (unlikely(__pyx_t_5 >= __pyx_bshape_0_left_index)) __pyx_t_6 = 0;
    if (unlikely(__pyx_t_6 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_6);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 627; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (__pyx_v_temp_r[__pyx_v_i]) = (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_5, __pyx_bstride_0_left_index));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":628
 *             temp_l[i] = left_index[i] + dimensions[i]
 *             temp_r[i] = left_index[i]
 *             self.signature[i] = NULL             # <<<<<<<<<<<<<<
 *         for gi in range(ng):
 *             if left_edges[gi,0] > left_index[0]+dimensions[0] or \
 */
    (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->signature[__pyx_v_i]) = NULL;
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":629
 *             temp_r[i] = left_index[i]
 *             self.signature[i] = NULL
 *         for gi in range(ng):             # <<<<<<<<<<<<<<
 *             if left_edges[gi,0] > left_index[0]+dimensions[0] or \
 *                right_edges[gi,0] < left_index[0] or \
 */
  __pyx_t_2 = __pyx_v_ng;
  for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_2; __pyx_t_6+=1) {
    __pyx_v_gi = __pyx_t_6;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":630
 *             self.signature[i] = NULL
 *         for gi in range(ng):
 *             if left_edges[gi,0] > left_index[0]+dimensions[0] or \             # <<<<<<<<<<<<<<
 *                right_edges[gi,0] < left_index[0] or \
 *                left_edges[gi,1] > left_index[1]+dimensions[1] or \
 */
    __pyx_t_7 = __pyx_v_gi;
    __pyx_t_8 = 0;
    __pyx_t_9 = -1;
    if (__pyx_t_7 < 0) {
      __pyx_t_7 += __pyx_bshape_0_left_edges;
      if (unlikely(__pyx_t_7 < 0)) __pyx_t_9 = 0;
    } else if (unlikely(__pyx_t_7 >= __pyx_bshape_0_left_edges)) __pyx_t_9 = 0;
    if (__pyx_t_8 < 0) {
      __pyx_t_8 += __pyx_bshape_1_left_edges;
      if (unlikely(__pyx_t_8 < 0)) __pyx_t_9 = 1;
    } else if (unlikely(__pyx_t_8 >= __pyx_bshape_1_left_edges)) __pyx_t_9 = 1;
    if (unlikely(__pyx_t_9 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_9);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_10 = 0;
    __pyx_t_9 = -1;
    if (__pyx_t_10 < 0) {
      __pyx_t_10 += __pyx_bshape_0_left_index;
      if (unlikely(__pyx_t_10 < 0)) __pyx_t_9 = 0;
    } else if (unlikely(__pyx_t_10 >= __pyx_bshape_0_left_index)) __pyx_t_9 = 0;
    if (unlikely(__pyx_t_9 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_9);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_11 = 0;
    __pyx_t_9 = -1;
    if (__pyx_t_11 < 0) {
      __pyx_t_11 += __pyx_bshape_0_dimensions;
      if (unlikely(__pyx_t_11 < 0)) __pyx_t_9 = 0;
    } else if (unlikely(__pyx_t_11 >= __pyx_bshape_0_dimensions)) __pyx_t_9 = 0;
    if (unlikely(__pyx_t_9 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_9);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_12 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_7, __pyx_bstride_0_left_edges, __pyx_t_8, __pyx_bstride_1_left_edges)) > ((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_10, __pyx_bstride_0_left_index)) + (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_dimensions.buf, __pyx_t_11, __pyx_bstride_0_dimensions))));
    if (!__pyx_t_12) {

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":631
 *         for gi in range(ng):
 *             if left_edges[gi,0] > left_index[0]+dimensions[0] or \
 *                right_edges[gi,0] < left_index[0] or \             # <<<<<<<<<<<<<<
 *                left_edges[gi,1] > left_index[1]+dimensions[1] or \
 *                right_edges[gi,1] < left_index[1] or \
 */
      __pyx_t_9 = __pyx_v_gi;
      __pyx_t_13 = 0;
      __pyx_t_14 = -1;
      if (__pyx_t_9 < 0) {
        __pyx_t_9 += __pyx_bshape_0_right_edges;
        if (unlikely(__pyx_t_9 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_9 >= __pyx_bshape_0_right_edges)) __pyx_t_14 = 0;
      if (__pyx_t_13 < 0) {
        __pyx_t_13 += __pyx_bshape_1_right_edges;
        if (unlikely(__pyx_t_13 < 0)) __pyx_t_14 = 1;
      } else if (unlikely(__pyx_t_13 >= __pyx_bshape_1_right_edges)) __pyx_t_14 = 1;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_15 = 0;
      __pyx_t_14 = -1;
      if (__pyx_t_15 < 0) {
        __pyx_t_15 += __pyx_bshape_0_left_index;
        if (unlikely(__pyx_t_15 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_15 >= __pyx_bshape_0_left_index)) __pyx_t_14 = 0;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_16 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_right_edges.buf, __pyx_t_9, __pyx_bstride_0_right_edges, __pyx_t_13, __pyx_bstride_1_right_edges)) < (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_15, __pyx_bstride_0_left_index)));
      if (!__pyx_t_16) {

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":632
 *             if left_edges[gi,0] > left_index[0]+dimensions[0] or \
 *                right_edges[gi,0] < left_index[0] or \
 *                left_edges[gi,1] > left_index[1]+dimensions[1] or \             # <<<<<<<<<<<<<<
 *                right_edges[gi,1] < left_index[1] or \
 *                left_edges[gi,2] > left_index[2]+dimensions[2] or \
 */
        __pyx_t_14 = __pyx_v_gi;
        __pyx_t_17 = 1;
        __pyx_t_18 = -1;
        if (__pyx_t_14 < 0) {
          __pyx_t_14 += __pyx_bshape_0_left_edges;
          if (unlikely(__pyx_t_14 < 0)) __pyx_t_18 = 0;
        } else if (unlikely(__pyx_t_14 >= __pyx_bshape_0_left_edges)) __pyx_t_18 = 0;
        if (__pyx_t_17 < 0) {
          __pyx_t_17 += __pyx_bshape_1_left_edges;
          if (unlikely(__pyx_t_17 < 0)) __pyx_t_18 = 1;
        } else if (unlikely(__pyx_t_17 >= __pyx_bshape_1_left_edges)) __pyx_t_18 = 1;
        if (unlikely(__pyx_t_18 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_18);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_t_19 = 1;
        __pyx_t_18 = -1;
        if (__pyx_t_19 < 0) {
          __pyx_t_19 += __pyx_bshape_0_left_index;
          if (unlikely(__pyx_t_19 < 0)) __pyx_t_18 = 0;
        } else if (unlikely(__pyx_t_19 >= __pyx_bshape_0_left_index)) __pyx_t_18 = 0;
        if (unlikely(__pyx_t_18 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_18);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_t_20 = 1;
        __pyx_t_18 = -1;
        if (__pyx_t_20 < 0) {
          __pyx_t_20 += __pyx_bshape_0_dimensions;
          if (unlikely(__pyx_t_20 < 0)) __pyx_t_18 = 0;
        } else if (unlikely(__pyx_t_20 >= __pyx_bshape_0_dimensions)) __pyx_t_18 = 0;
        if (unlikely(__pyx_t_18 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_18);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 632; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_t_21 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_14, __pyx_bstride_0_left_edges, __pyx_t_17, __pyx_bstride_1_left_edges)) > ((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_19, __pyx_bstride_0_left_index)) + (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_dimensions.buf, __pyx_t_20, __pyx_bstride_0_dimensions))));
        if (!__pyx_t_21) {

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":633
 *                right_edges[gi,0] < left_index[0] or \
 *                left_edges[gi,1] > left_index[1]+dimensions[1] or \
 *                right_edges[gi,1] < left_index[1] or \             # <<<<<<<<<<<<<<
 *                left_edges[gi,2] > left_index[2]+dimensions[2] or \
 *                right_edges[gi,2] < left_index[2]:
 */
          __pyx_t_18 = __pyx_v_gi;
          __pyx_t_22 = 1;
          __pyx_t_23 = -1;
          if (__pyx_t_18 < 0) {
            __pyx_t_18 += __pyx_bshape_0_right_edges;
            if (unlikely(__pyx_t_18 < 0)) __pyx_t_23 = 0;
          } else if (unlikely(__pyx_t_18 >= __pyx_bshape_0_right_edges)) __pyx_t_23 = 0;
          if (__pyx_t_22 < 0) {
            __pyx_t_22 += __pyx_bshape_1_right_edges;
            if (unlikely(__pyx_t_22 < 0)) __pyx_t_23 = 1;
          } else if (unlikely(__pyx_t_22 >= __pyx_bshape_1_right_edges)) __pyx_t_23 = 1;
          if (unlikely(__pyx_t_23 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_23);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_24 = 1;
          __pyx_t_23 = -1;
          if (__pyx_t_24 < 0) {
            __pyx_t_24 += __pyx_bshape_0_left_index;
            if (unlikely(__pyx_t_24 < 0)) __pyx_t_23 = 0;
          } else if (unlikely(__pyx_t_24 >= __pyx_bshape_0_left_index)) __pyx_t_23 = 0;
          if (unlikely(__pyx_t_23 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_23);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 633; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_t_25 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_right_edges.buf, __pyx_t_18, __pyx_bstride_0_right_edges, __pyx_t_22, __pyx_bstride_1_right_edges)) < (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_24, __pyx_bstride_0_left_index)));
          if (!__pyx_t_25) {

            /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":634
 *                left_edges[gi,1] > left_index[1]+dimensions[1] or \
 *                right_edges[gi,1] < left_index[1] or \
 *                left_edges[gi,2] > left_index[2]+dimensions[2] or \             # <<<<<<<<<<<<<<
 *                right_edges[gi,2] < left_index[2]:
 *                #print "Skipping grid", gi, "which lies outside out box"
 */
            __pyx_t_23 = __pyx_v_gi;
            __pyx_t_26 = 2;
            __pyx_t_27 = -1;
            if (__pyx_t_23 < 0) {
              __pyx_t_23 += __pyx_bshape_0_left_edges;
              if (unlikely(__pyx_t_23 < 0)) __pyx_t_27 = 0;
            } else if (unlikely(__pyx_t_23 >= __pyx_bshape_0_left_edges)) __pyx_t_27 = 0;
            if (__pyx_t_26 < 0) {
              __pyx_t_26 += __pyx_bshape_1_left_edges;
              if (unlikely(__pyx_t_26 < 0)) __pyx_t_27 = 1;
            } else if (unlikely(__pyx_t_26 >= __pyx_bshape_1_left_edges)) __pyx_t_27 = 1;
            if (unlikely(__pyx_t_27 != -1)) {
              __Pyx_RaiseBufferIndexError(__pyx_t_27);
              {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            __pyx_t_28 = 2;
            __pyx_t_27 = -1;
            if (__pyx_t_28 < 0) {
              __pyx_t_28 += __pyx_bshape_0_left_index;
              if (unlikely(__pyx_t_28 < 0)) __pyx_t_27 = 0;
            } else if (unlikely(__pyx_t_28 >= __pyx_bshape_0_left_index)) __pyx_t_27 = 0;
            if (unlikely(__pyx_t_27 != -1)) {
              __Pyx_RaiseBufferIndexError(__pyx_t_27);
              {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            __pyx_t_29 = 2;
            __pyx_t_27 = -1;
            if (__pyx_t_29 < 0) {
              __pyx_t_29 += __pyx_bshape_0_dimensions;
              if (unlikely(__pyx_t_29 < 0)) __pyx_t_27 = 0;
            } else if (unlikely(__pyx_t_29 >= __pyx_bshape_0_dimensions)) __pyx_t_27 = 0;
            if (unlikely(__pyx_t_27 != -1)) {
              __Pyx_RaiseBufferIndexError(__pyx_t_27);
              {__pyx_filename = __pyx_f[0]; __pyx_lineno = 634; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            __pyx_t_30 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_23, __pyx_bstride_0_left_edges, __pyx_t_26, __pyx_bstride_1_left_edges)) > ((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_28, __pyx_bstride_0_left_index)) + (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_dimensions.buf, __pyx_t_29, __pyx_bstride_0_dimensions))));
            if (!__pyx_t_30) {

              /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":635
 *                right_edges[gi,1] < left_index[1] or \
 *                left_edges[gi,2] > left_index[2]+dimensions[2] or \
 *                right_edges[gi,2] < left_index[2]:             # <<<<<<<<<<<<<<
 *                #print "Skipping grid", gi, "which lies outside out box"
 *                continue
 */
              __pyx_t_27 = __pyx_v_gi;
              __pyx_t_31 = 2;
              __pyx_t_32 = -1;
              if (__pyx_t_27 < 0) {
                __pyx_t_27 += __pyx_bshape_0_right_edges;
                if (unlikely(__pyx_t_27 < 0)) __pyx_t_32 = 0;
              } else if (unlikely(__pyx_t_27 >= __pyx_bshape_0_right_edges)) __pyx_t_32 = 0;
              if (__pyx_t_31 < 0) {
                __pyx_t_31 += __pyx_bshape_1_right_edges;
                if (unlikely(__pyx_t_31 < 0)) __pyx_t_32 = 1;
              } else if (unlikely(__pyx_t_31 >= __pyx_bshape_1_right_edges)) __pyx_t_32 = 1;
              if (unlikely(__pyx_t_32 != -1)) {
                __Pyx_RaiseBufferIndexError(__pyx_t_32);
                {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              }
              __pyx_t_33 = 2;
              __pyx_t_32 = -1;
              if (__pyx_t_33 < 0) {
                __pyx_t_33 += __pyx_bshape_0_left_index;
                if (unlikely(__pyx_t_33 < 0)) __pyx_t_32 = 0;
              } else if (unlikely(__pyx_t_33 >= __pyx_bshape_0_left_index)) __pyx_t_32 = 0;
              if (unlikely(__pyx_t_32 != -1)) {
                __Pyx_RaiseBufferIndexError(__pyx_t_32);
                {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
              }
              __pyx_t_34 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_right_edges.buf, __pyx_t_27, __pyx_bstride_0_right_edges, __pyx_t_31, __pyx_bstride_1_right_edges)) < (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_33, __pyx_bstride_0_left_index)));
              __pyx_t_35 = __pyx_t_34;
            } else {
              __pyx_t_35 = __pyx_t_30;
            }
            __pyx_t_30 = __pyx_t_35;
          } else {
            __pyx_t_30 = __pyx_t_25;
          }
          __pyx_t_25 = __pyx_t_30;
        } else {
          __pyx_t_25 = __pyx_t_21;
        }
        __pyx_t_21 = __pyx_t_25;
      } else {
        __pyx_t_21 = __pyx_t_16;
      }
      __pyx_t_16 = __pyx_t_21;
    } else {
      __pyx_t_16 = __pyx_t_12;
    }
    if (__pyx_t_16) {

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":637
 *                right_edges[gi,2] < left_index[2]:
 *                #print "Skipping grid", gi, "which lies outside out box"
 *                continue             # <<<<<<<<<<<<<<
 *             for i in range(3):
 *                 temp_l[i] = i64min(left_edges[gi,i], temp_l[i])
 */
      goto __pyx_L8_continue;
      goto __pyx_L10;
    }
    __pyx_L10:;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":638
 *                #print "Skipping grid", gi, "which lies outside out box"
 *                continue
 *             for i in range(3):             # <<<<<<<<<<<<<<
 *                 temp_l[i] = i64min(left_edges[gi,i], temp_l[i])
 *                 temp_r[i] = i64max(right_edges[gi,i], temp_r[i])
 */
    for (__pyx_t_32 = 0; __pyx_t_32 < 3; __pyx_t_32+=1) {
      __pyx_v_i = __pyx_t_32;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":639
 *                continue
 *             for i in range(3):
 *                 temp_l[i] = i64min(left_edges[gi,i], temp_l[i])             # <<<<<<<<<<<<<<
 *                 temp_r[i] = i64max(right_edges[gi,i], temp_r[i])
 *         for i in range(3):
 */
      __pyx_t_36 = __pyx_v_gi;
      __pyx_t_37 = __pyx_v_i;
      __pyx_t_38 = -1;
      if (__pyx_t_36 < 0) {
        __pyx_t_36 += __pyx_bshape_0_left_edges;
        if (unlikely(__pyx_t_36 < 0)) __pyx_t_38 = 0;
      } else if (unlikely(__pyx_t_36 >= __pyx_bshape_0_left_edges)) __pyx_t_38 = 0;
      if (__pyx_t_37 < 0) {
        __pyx_t_37 += __pyx_bshape_1_left_edges;
        if (unlikely(__pyx_t_37 < 0)) __pyx_t_38 = 1;
      } else if (unlikely(__pyx_t_37 >= __pyx_bshape_1_left_edges)) __pyx_t_38 = 1;
      if (unlikely(__pyx_t_38 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_38);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 639; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_temp_l[__pyx_v_i]) = __pyx_f_2yt_13ramses_reader_i64min((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_36, __pyx_bstride_0_left_edges, __pyx_t_37, __pyx_bstride_1_left_edges)), (__pyx_v_temp_l[__pyx_v_i]));

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":640
 *             for i in range(3):
 *                 temp_l[i] = i64min(left_edges[gi,i], temp_l[i])
 *                 temp_r[i] = i64max(right_edges[gi,i], temp_r[i])             # <<<<<<<<<<<<<<
 *         for i in range(3):
 *             self.left_edge[i] = i64max(temp_l[i], left_index[i])
 */
      __pyx_t_38 = __pyx_v_gi;
      __pyx_t_39 = __pyx_v_i;
      __pyx_t_40 = -1;
      if (__pyx_t_38 < 0) {
        __pyx_t_38 += __pyx_bshape_0_right_edges;
        if (unlikely(__pyx_t_38 < 0)) __pyx_t_40 = 0;
      } else if (unlikely(__pyx_t_38 >= __pyx_bshape_0_right_edges)) __pyx_t_40 = 0;
      if (__pyx_t_39 < 0) {
        __pyx_t_39 += __pyx_bshape_1_right_edges;
        if (unlikely(__pyx_t_39 < 0)) __pyx_t_40 = 1;
      } else if (unlikely(__pyx_t_39 >= __pyx_bshape_1_right_edges)) __pyx_t_40 = 1;
      if (unlikely(__pyx_t_40 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_40);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 640; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_temp_r[__pyx_v_i]) = __pyx_f_2yt_13ramses_reader_i64max((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_right_edges.buf, __pyx_t_38, __pyx_bstride_0_right_edges, __pyx_t_39, __pyx_bstride_1_right_edges)), (__pyx_v_temp_r[__pyx_v_i]));
    }
    __pyx_L8_continue:;
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":641
 *                 temp_l[i] = i64min(left_edges[gi,i], temp_l[i])
 *                 temp_r[i] = i64max(right_edges[gi,i], temp_r[i])
 *         for i in range(3):             # <<<<<<<<<<<<<<
 *             self.left_edge[i] = i64max(temp_l[i], left_index[i])
 *             self.right_edge[i] = i64min(temp_r[i], left_index[i] + dimensions[i])
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":642
 *                 temp_r[i] = i64max(right_edges[gi,i], temp_r[i])
 *         for i in range(3):
 *             self.left_edge[i] = i64max(temp_l[i], left_index[i])             # <<<<<<<<<<<<<<
 *             self.right_edge[i] = i64min(temp_r[i], left_index[i] + dimensions[i])
 *             self.dimensions[i] = self.right_edge[i] - self.left_edge[i]
 */
    __pyx_t_6 = __pyx_v_i;
    __pyx_t_32 = -1;
    if (__pyx_t_6 < 0) {
      __pyx_t_6 += __pyx_bshape_0_left_index;
      if (unlikely(__pyx_t_6 < 0)) __pyx_t_32 = 0;
    } else if (unlikely(__pyx_t_6 >= __pyx_bshape_0_left_index)) __pyx_t_32 = 0;
    if (unlikely(__pyx_t_32 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_32);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 642; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[__pyx_v_i]) = __pyx_f_2yt_13ramses_reader_i64max((__pyx_v_temp_l[__pyx_v_i]), (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_6, __pyx_bstride_0_left_index)));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":643
 *         for i in range(3):
 *             self.left_edge[i] = i64max(temp_l[i], left_index[i])
 *             self.right_edge[i] = i64min(temp_r[i], left_index[i] + dimensions[i])             # <<<<<<<<<<<<<<
 *             self.dimensions[i] = self.right_edge[i] - self.left_edge[i]
 *             if self.dimensions[i] <= 0:
 */
    __pyx_t_32 = __pyx_v_i;
    __pyx_t_40 = -1;
    if (__pyx_t_32 < 0) {
      __pyx_t_32 += __pyx_bshape_0_left_index;
      if (unlikely(__pyx_t_32 < 0)) __pyx_t_40 = 0;
    } else if (unlikely(__pyx_t_32 >= __pyx_bshape_0_left_index)) __pyx_t_40 = 0;
    if (unlikely(__pyx_t_40 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_40);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_40 = __pyx_v_i;
    __pyx_t_41 = -1;
    if (__pyx_t_40 < 0) {
      __pyx_t_40 += __pyx_bshape_0_dimensions;
      if (unlikely(__pyx_t_40 < 0)) __pyx_t_41 = 0;
    } else if (unlikely(__pyx_t_40 >= __pyx_bshape_0_dimensions)) __pyx_t_41 = 0;
    if (unlikely(__pyx_t_41 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_41);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 643; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->right_edge[__pyx_v_i]) = __pyx_f_2yt_13ramses_reader_i64min((__pyx_v_temp_r[__pyx_v_i]), ((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_index.buf, __pyx_t_32, __pyx_bstride_0_left_index)) + (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_dimensions.buf, __pyx_t_40, __pyx_bstride_0_dimensions))));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":644
 *             self.left_edge[i] = i64max(temp_l[i], left_index[i])
 *             self.right_edge[i] = i64min(temp_r[i], left_index[i] + dimensions[i])
 *             self.dimensions[i] = self.right_edge[i] - self.left_edge[i]             # <<<<<<<<<<<<<<
 *             if self.dimensions[i] <= 0:
 *                 self.efficiency = -1.0
 */
    (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_i]) = ((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->right_edge[__pyx_v_i]) - (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[__pyx_v_i]));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":645
 *             self.right_edge[i] = i64min(temp_r[i], left_index[i] + dimensions[i])
 *             self.dimensions[i] = self.right_edge[i] - self.left_edge[i]
 *             if self.dimensions[i] <= 0:             # <<<<<<<<<<<<<<
 *                 self.efficiency = -1.0
 *                 return
 */
    __pyx_t_16 = ((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_i]) <= 0);
    if (__pyx_t_16) {

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":646
 *             self.dimensions[i] = self.right_edge[i] - self.left_edge[i]
 *             if self.dimensions[i] <= 0:
 *                 self.efficiency = -1.0             # <<<<<<<<<<<<<<
 *                 return
 *             self.sigs.append(np.zeros(self.dimensions[i], 'int64'))
 */
      ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->efficiency = (-1.0);

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":647
 *             if self.dimensions[i] <= 0:
 *                 self.efficiency = -1.0
 *                 return             # <<<<<<<<<<<<<<
 *             self.sigs.append(np.zeros(self.dimensions[i], 'int64'))
 *         #print self.sigs[0].size, self.sigs[1].size, self.sigs[2].size
 */
      __pyx_r = 0;
      goto __pyx_L0;
      goto __pyx_L15;
    }
    __pyx_L15:;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":648
 *                 self.efficiency = -1.0
 *                 return
 *             self.sigs.append(np.zeros(self.dimensions[i], 'int64'))             # <<<<<<<<<<<<<<
 *         #print self.sigs[0].size, self.sigs[1].size, self.sigs[2].size
 * 
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_42 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__zeros); if (unlikely(!__pyx_t_42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_42);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyInt_to_py_npy_int64((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_i])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_43 = PyTuple_New(2); if (unlikely(!__pyx_t_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_43);
    PyTuple_SET_ITEM(__pyx_t_43, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_n_s__int64));
    PyTuple_SET_ITEM(__pyx_t_43, 1, ((PyObject *)__pyx_n_s__int64));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__int64));
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_42, __pyx_t_43, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_42); __pyx_t_42 = 0;
    __Pyx_DECREF(__pyx_t_43); __pyx_t_43 = 0;
    __pyx_t_43 = __Pyx_PyObject_Append(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs, __pyx_t_1); if (unlikely(!__pyx_t_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 648; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_43);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_43); __pyx_t_43 = 0;
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":655
 *         # pass.
 *         cdef np.ndarray[np.int64_t, ndim=1] sig0, sig1, sig2
 *         sig0 = self.sigs[0]             # <<<<<<<<<<<<<<
 *         sig1 = self.sigs[1]
 *         sig2 = self.sigs[2]
 */
  __pyx_t_43 = __Pyx_GetItemInt(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_43) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_43);
  if (!(likely(((__pyx_t_43) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_43, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_44 = ((PyArrayObject *)__pyx_t_43);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig0);
    __pyx_t_2 = __Pyx_GetBufferAndValidate(&__pyx_bstruct_sig0, (PyObject*)__pyx_t_44, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_2 < 0)) {
      PyErr_Fetch(&__pyx_t_45, &__pyx_t_46, &__pyx_t_47);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_sig0, (PyObject*)__pyx_v_sig0, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_45); Py_XDECREF(__pyx_t_46); Py_XDECREF(__pyx_t_47);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_45, __pyx_t_46, __pyx_t_47);
      }
    }
    __pyx_bstride_0_sig0 = __pyx_bstruct_sig0.strides[0];
    __pyx_bshape_0_sig0 = __pyx_bstruct_sig0.shape[0];
    if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 655; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_44 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_sig0));
  __pyx_v_sig0 = ((PyArrayObject *)__pyx_t_43);
  __pyx_t_43 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":656
 *         cdef np.ndarray[np.int64_t, ndim=1] sig0, sig1, sig2
 *         sig0 = self.sigs[0]
 *         sig1 = self.sigs[1]             # <<<<<<<<<<<<<<
 *         sig2 = self.sigs[2]
 *         efficiency = 0.0
 */
  __pyx_t_43 = __Pyx_GetItemInt(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_43) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_43);
  if (!(likely(((__pyx_t_43) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_43, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_44 = ((PyArrayObject *)__pyx_t_43);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig1);
    __pyx_t_2 = __Pyx_GetBufferAndValidate(&__pyx_bstruct_sig1, (PyObject*)__pyx_t_44, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_2 < 0)) {
      PyErr_Fetch(&__pyx_t_47, &__pyx_t_46, &__pyx_t_45);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_sig1, (PyObject*)__pyx_v_sig1, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_47); Py_XDECREF(__pyx_t_46); Py_XDECREF(__pyx_t_45);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_47, __pyx_t_46, __pyx_t_45);
      }
    }
    __pyx_bstride_0_sig1 = __pyx_bstruct_sig1.strides[0];
    __pyx_bshape_0_sig1 = __pyx_bstruct_sig1.shape[0];
    if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 656; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_44 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_sig1));
  __pyx_v_sig1 = ((PyArrayObject *)__pyx_t_43);
  __pyx_t_43 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":657
 *         sig0 = self.sigs[0]
 *         sig1 = self.sigs[1]
 *         sig2 = self.sigs[2]             # <<<<<<<<<<<<<<
 *         efficiency = 0.0
 *         cdef int used
 */
  __pyx_t_43 = __Pyx_GetItemInt(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_43) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_43);
  if (!(likely(((__pyx_t_43) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_43, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_44 = ((PyArrayObject *)__pyx_t_43);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig2);
    __pyx_t_2 = __Pyx_GetBufferAndValidate(&__pyx_bstruct_sig2, (PyObject*)__pyx_t_44, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_2 < 0)) {
      PyErr_Fetch(&__pyx_t_45, &__pyx_t_46, &__pyx_t_47);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_sig2, (PyObject*)__pyx_v_sig2, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_45); Py_XDECREF(__pyx_t_46); Py_XDECREF(__pyx_t_47);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_45, __pyx_t_46, __pyx_t_47);
      }
    }
    __pyx_bstride_0_sig2 = __pyx_bstruct_sig2.strides[0];
    __pyx_bshape_0_sig2 = __pyx_bstruct_sig2.shape[0];
    if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 657; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_44 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_sig2));
  __pyx_v_sig2 = ((PyArrayObject *)__pyx_t_43);
  __pyx_t_43 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":658
 *         sig1 = self.sigs[1]
 *         sig2 = self.sigs[2]
 *         efficiency = 0.0             # <<<<<<<<<<<<<<
 *         cdef int used
 *         self.grid_file_locations = []
 */
  __pyx_v_efficiency = 0.0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":660
 *         efficiency = 0.0
 *         cdef int used
 *         self.grid_file_locations = []             # <<<<<<<<<<<<<<
 *         for gi in range(ng):
 *             used = 0
 */
  __pyx_t_43 = PyList_New(0); if (unlikely(!__pyx_t_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 660; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_43));
  __Pyx_GIVEREF(((PyObject *)__pyx_t_43));
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations = ((PyObject *)__pyx_t_43);
  __pyx_t_43 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":661
 *         cdef int used
 *         self.grid_file_locations = []
 *         for gi in range(ng):             # <<<<<<<<<<<<<<
 *             used = 0
 *             nnn = 0
 */
  __pyx_t_2 = __pyx_v_ng;
  for (__pyx_t_41 = 0; __pyx_t_41 < __pyx_t_2; __pyx_t_41+=1) {
    __pyx_v_gi = __pyx_t_41;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":662
 *         self.grid_file_locations = []
 *         for gi in range(ng):
 *             used = 0             # <<<<<<<<<<<<<<
 *             nnn = 0
 *             for l0 in range(grid_dimensions[gi, 0]):
 */
    __pyx_v_used = 0;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":663
 *         for gi in range(ng):
 *             used = 0
 *             nnn = 0             # <<<<<<<<<<<<<<
 *             for l0 in range(grid_dimensions[gi, 0]):
 *                 i0 = left_edges[gi, 0] + l0
 */
    __pyx_v_nnn = 0;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":664
 *             used = 0
 *             nnn = 0
 *             for l0 in range(grid_dimensions[gi, 0]):             # <<<<<<<<<<<<<<
 *                 i0 = left_edges[gi, 0] + l0
 *                 if i0 < self.left_edge[0]: continue
 */
    __pyx_t_48 = __pyx_v_gi;
    __pyx_t_49 = 0;
    __pyx_t_50 = -1;
    if (__pyx_t_48 < 0) {
      __pyx_t_48 += __pyx_bshape_0_grid_dimensions;
      if (unlikely(__pyx_t_48 < 0)) __pyx_t_50 = 0;
    } else if (unlikely(__pyx_t_48 >= __pyx_bshape_0_grid_dimensions)) __pyx_t_50 = 0;
    if (__pyx_t_49 < 0) {
      __pyx_t_49 += __pyx_bshape_1_grid_dimensions;
      if (unlikely(__pyx_t_49 < 0)) __pyx_t_50 = 1;
    } else if (unlikely(__pyx_t_49 >= __pyx_bshape_1_grid_dimensions)) __pyx_t_50 = 1;
    if (unlikely(__pyx_t_50 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_50);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 664; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_51 = (*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_grid_dimensions.buf, __pyx_t_48, __pyx_bstride_0_grid_dimensions, __pyx_t_49, __pyx_bstride_1_grid_dimensions));
    for (__pyx_t_50 = 0; __pyx_t_50 < __pyx_t_51; __pyx_t_50+=1) {
      __pyx_v_l0 = __pyx_t_50;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":665
 *             nnn = 0
 *             for l0 in range(grid_dimensions[gi, 0]):
 *                 i0 = left_edges[gi, 0] + l0             # <<<<<<<<<<<<<<
 *                 if i0 < self.left_edge[0]: continue
 *                 if i0 >= self.right_edge[0]: break
 */
      __pyx_t_52 = __pyx_v_gi;
      __pyx_t_53 = 0;
      __pyx_t_54 = -1;
      if (__pyx_t_52 < 0) {
        __pyx_t_52 += __pyx_bshape_0_left_edges;
        if (unlikely(__pyx_t_52 < 0)) __pyx_t_54 = 0;
      } else if (unlikely(__pyx_t_52 >= __pyx_bshape_0_left_edges)) __pyx_t_54 = 0;
      if (__pyx_t_53 < 0) {
        __pyx_t_53 += __pyx_bshape_1_left_edges;
        if (unlikely(__pyx_t_53 < 0)) __pyx_t_54 = 1;
      } else if (unlikely(__pyx_t_53 >= __pyx_bshape_1_left_edges)) __pyx_t_54 = 1;
      if (unlikely(__pyx_t_54 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_54);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 665; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_v_i0 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_52, __pyx_bstride_0_left_edges, __pyx_t_53, __pyx_bstride_1_left_edges)) + __pyx_v_l0);

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":666
 *             for l0 in range(grid_dimensions[gi, 0]):
 *                 i0 = left_edges[gi, 0] + l0
 *                 if i0 < self.left_edge[0]: continue             # <<<<<<<<<<<<<<
 *                 if i0 >= self.right_edge[0]: break
 *                 for l1 in range(grid_dimensions[gi, 1]):
 */
      __pyx_t_16 = (__pyx_v_i0 < (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[0]));
      if (__pyx_t_16) {
        goto __pyx_L18_continue;
        goto __pyx_L20;
      }
      __pyx_L20:;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":667
 *                 i0 = left_edges[gi, 0] + l0
 *                 if i0 < self.left_edge[0]: continue
 *                 if i0 >= self.right_edge[0]: break             # <<<<<<<<<<<<<<
 *                 for l1 in range(grid_dimensions[gi, 1]):
 *                     i1 = left_edges[gi, 1] + l1
 */
      __pyx_t_16 = (__pyx_v_i0 >= (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->right_edge[0]));
      if (__pyx_t_16) {
        goto __pyx_L19_break;
        goto __pyx_L21;
      }
      __pyx_L21:;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":668
 *                 if i0 < self.left_edge[0]: continue
 *                 if i0 >= self.right_edge[0]: break
 *                 for l1 in range(grid_dimensions[gi, 1]):             # <<<<<<<<<<<<<<
 *                     i1 = left_edges[gi, 1] + l1
 *                     if i1 < self.left_edge[1]: continue
 */
      __pyx_t_54 = __pyx_v_gi;
      __pyx_t_55 = 1;
      __pyx_t_56 = -1;
      if (__pyx_t_54 < 0) {
        __pyx_t_54 += __pyx_bshape_0_grid_dimensions;
        if (unlikely(__pyx_t_54 < 0)) __pyx_t_56 = 0;
      } else if (unlikely(__pyx_t_54 >= __pyx_bshape_0_grid_dimensions)) __pyx_t_56 = 0;
      if (__pyx_t_55 < 0) {
        __pyx_t_55 += __pyx_bshape_1_grid_dimensions;
        if (unlikely(__pyx_t_55 < 0)) __pyx_t_56 = 1;
      } else if (unlikely(__pyx_t_55 >= __pyx_bshape_1_grid_dimensions)) __pyx_t_56 = 1;
      if (unlikely(__pyx_t_56 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_56);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 668; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_57 = (*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_grid_dimensions.buf, __pyx_t_54, __pyx_bstride_0_grid_dimensions, __pyx_t_55, __pyx_bstride_1_grid_dimensions));
      for (__pyx_t_56 = 0; __pyx_t_56 < __pyx_t_57; __pyx_t_56+=1) {
        __pyx_v_l1 = __pyx_t_56;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":669
 *                 if i0 >= self.right_edge[0]: break
 *                 for l1 in range(grid_dimensions[gi, 1]):
 *                     i1 = left_edges[gi, 1] + l1             # <<<<<<<<<<<<<<
 *                     if i1 < self.left_edge[1]: continue
 *                     if i1 >= self.right_edge[1]: break
 */
        __pyx_t_58 = __pyx_v_gi;
        __pyx_t_59 = 1;
        __pyx_t_60 = -1;
        if (__pyx_t_58 < 0) {
          __pyx_t_58 += __pyx_bshape_0_left_edges;
          if (unlikely(__pyx_t_58 < 0)) __pyx_t_60 = 0;
        } else if (unlikely(__pyx_t_58 >= __pyx_bshape_0_left_edges)) __pyx_t_60 = 0;
        if (__pyx_t_59 < 0) {
          __pyx_t_59 += __pyx_bshape_1_left_edges;
          if (unlikely(__pyx_t_59 < 0)) __pyx_t_60 = 1;
        } else if (unlikely(__pyx_t_59 >= __pyx_bshape_1_left_edges)) __pyx_t_60 = 1;
        if (unlikely(__pyx_t_60 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_60);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 669; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_v_i1 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_58, __pyx_bstride_0_left_edges, __pyx_t_59, __pyx_bstride_1_left_edges)) + __pyx_v_l1);

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":670
 *                 for l1 in range(grid_dimensions[gi, 1]):
 *                     i1 = left_edges[gi, 1] + l1
 *                     if i1 < self.left_edge[1]: continue             # <<<<<<<<<<<<<<
 *                     if i1 >= self.right_edge[1]: break
 *                     for l2 in range(grid_dimensions[gi, 2]):
 */
        __pyx_t_16 = (__pyx_v_i1 < (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[1]));
        if (__pyx_t_16) {
          goto __pyx_L22_continue;
          goto __pyx_L24;
        }
        __pyx_L24:;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":671
 *                     i1 = left_edges[gi, 1] + l1
 *                     if i1 < self.left_edge[1]: continue
 *                     if i1 >= self.right_edge[1]: break             # <<<<<<<<<<<<<<
 *                     for l2 in range(grid_dimensions[gi, 2]):
 *                         i2 = left_edges[gi, 2] + l2
 */
        __pyx_t_16 = (__pyx_v_i1 >= (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->right_edge[1]));
        if (__pyx_t_16) {
          goto __pyx_L23_break;
          goto __pyx_L25;
        }
        __pyx_L25:;

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":672
 *                     if i1 < self.left_edge[1]: continue
 *                     if i1 >= self.right_edge[1]: break
 *                     for l2 in range(grid_dimensions[gi, 2]):             # <<<<<<<<<<<<<<
 *                         i2 = left_edges[gi, 2] + l2
 *                         if i2 < self.left_edge[2]: continue
 */
        __pyx_t_60 = __pyx_v_gi;
        __pyx_t_61 = 2;
        __pyx_t_62 = -1;
        if (__pyx_t_60 < 0) {
          __pyx_t_60 += __pyx_bshape_0_grid_dimensions;
          if (unlikely(__pyx_t_60 < 0)) __pyx_t_62 = 0;
        } else if (unlikely(__pyx_t_60 >= __pyx_bshape_0_grid_dimensions)) __pyx_t_62 = 0;
        if (__pyx_t_61 < 0) {
          __pyx_t_61 += __pyx_bshape_1_grid_dimensions;
          if (unlikely(__pyx_t_61 < 0)) __pyx_t_62 = 1;
        } else if (unlikely(__pyx_t_61 >= __pyx_bshape_1_grid_dimensions)) __pyx_t_62 = 1;
        if (unlikely(__pyx_t_62 != -1)) {
          __Pyx_RaiseBufferIndexError(__pyx_t_62);
          {__pyx_filename = __pyx_f[0]; __pyx_lineno = 672; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        __pyx_t_63 = (*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_grid_dimensions.buf, __pyx_t_60, __pyx_bstride_0_grid_dimensions, __pyx_t_61, __pyx_bstride_1_grid_dimensions));
        for (__pyx_t_62 = 0; __pyx_t_62 < __pyx_t_63; __pyx_t_62+=1) {
          __pyx_v_l2 = __pyx_t_62;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":673
 *                     if i1 >= self.right_edge[1]: break
 *                     for l2 in range(grid_dimensions[gi, 2]):
 *                         i2 = left_edges[gi, 2] + l2             # <<<<<<<<<<<<<<
 *                         if i2 < self.left_edge[2]: continue
 *                         if i2 >= self.right_edge[2]: break
 */
          __pyx_t_64 = __pyx_v_gi;
          __pyx_t_65 = 2;
          __pyx_t_66 = -1;
          if (__pyx_t_64 < 0) {
            __pyx_t_64 += __pyx_bshape_0_left_edges;
            if (unlikely(__pyx_t_64 < 0)) __pyx_t_66 = 0;
          } else if (unlikely(__pyx_t_64 >= __pyx_bshape_0_left_edges)) __pyx_t_66 = 0;
          if (__pyx_t_65 < 0) {
            __pyx_t_65 += __pyx_bshape_1_left_edges;
            if (unlikely(__pyx_t_65 < 0)) __pyx_t_66 = 1;
          } else if (unlikely(__pyx_t_65 >= __pyx_bshape_1_left_edges)) __pyx_t_66 = 1;
          if (unlikely(__pyx_t_66 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_66);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          __pyx_v_i2 = ((*__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_left_edges.buf, __pyx_t_64, __pyx_bstride_0_left_edges, __pyx_t_65, __pyx_bstride_1_left_edges)) + __pyx_v_l2);

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":674
 *                     for l2 in range(grid_dimensions[gi, 2]):
 *                         i2 = left_edges[gi, 2] + l2
 *                         if i2 < self.left_edge[2]: continue             # <<<<<<<<<<<<<<
 *                         if i2 >= self.right_edge[2]: break
 *                         i = i0 - self.left_edge[0]
 */
          __pyx_t_16 = (__pyx_v_i2 < (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[2]));
          if (__pyx_t_16) {
            goto __pyx_L26_continue;
            goto __pyx_L28;
          }
          __pyx_L28:;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":675
 *                         i2 = left_edges[gi, 2] + l2
 *                         if i2 < self.left_edge[2]: continue
 *                         if i2 >= self.right_edge[2]: break             # <<<<<<<<<<<<<<
 *                         i = i0 - self.left_edge[0]
 *                         sig0[i] += 1
 */
          __pyx_t_16 = (__pyx_v_i2 >= (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->right_edge[2]));
          if (__pyx_t_16) {
            goto __pyx_L27_break;
            goto __pyx_L29;
          }
          __pyx_L29:;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":676
 *                         if i2 < self.left_edge[2]: continue
 *                         if i2 >= self.right_edge[2]: break
 *                         i = i0 - self.left_edge[0]             # <<<<<<<<<<<<<<
 *                         sig0[i] += 1
 *                         i = i1 - self.left_edge[1]
 */
          __pyx_v_i = (__pyx_v_i0 - (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[0]));

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":677
 *                         if i2 >= self.right_edge[2]: break
 *                         i = i0 - self.left_edge[0]
 *                         sig0[i] += 1             # <<<<<<<<<<<<<<
 *                         i = i1 - self.left_edge[1]
 *                         sig1[i] += 1
 */
          __pyx_t_66 = __pyx_v_i;
          __pyx_t_67 = -1;
          if (__pyx_t_66 < 0) {
            __pyx_t_66 += __pyx_bshape_0_sig0;
            if (unlikely(__pyx_t_66 < 0)) __pyx_t_67 = 0;
          } else if (unlikely(__pyx_t_66 >= __pyx_bshape_0_sig0)) __pyx_t_67 = 0;
          if (unlikely(__pyx_t_67 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_67);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_sig0.buf, __pyx_t_66, __pyx_bstride_0_sig0) += 1;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":678
 *                         i = i0 - self.left_edge[0]
 *                         sig0[i] += 1
 *                         i = i1 - self.left_edge[1]             # <<<<<<<<<<<<<<
 *                         sig1[i] += 1
 *                         i = i2 - self.left_edge[2]
 */
          __pyx_v_i = (__pyx_v_i1 - (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[1]));

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":679
 *                         sig0[i] += 1
 *                         i = i1 - self.left_edge[1]
 *                         sig1[i] += 1             # <<<<<<<<<<<<<<
 *                         i = i2 - self.left_edge[2]
 *                         sig2[i] += 1
 */
          __pyx_t_67 = __pyx_v_i;
          __pyx_t_68 = -1;
          if (__pyx_t_67 < 0) {
            __pyx_t_67 += __pyx_bshape_0_sig1;
            if (unlikely(__pyx_t_67 < 0)) __pyx_t_68 = 0;
          } else if (unlikely(__pyx_t_67 >= __pyx_bshape_0_sig1)) __pyx_t_68 = 0;
          if (unlikely(__pyx_t_68 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_68);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 679; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_sig1.buf, __pyx_t_67, __pyx_bstride_0_sig1) += 1;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":680
 *                         i = i1 - self.left_edge[1]
 *                         sig1[i] += 1
 *                         i = i2 - self.left_edge[2]             # <<<<<<<<<<<<<<
 *                         sig2[i] += 1
 *                         efficiency += 1
 */
          __pyx_v_i = (__pyx_v_i2 - (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[2]));

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":681
 *                         sig1[i] += 1
 *                         i = i2 - self.left_edge[2]
 *                         sig2[i] += 1             # <<<<<<<<<<<<<<
 *                         efficiency += 1
 *                         used = 1
 */
          __pyx_t_68 = __pyx_v_i;
          __pyx_t_69 = -1;
          if (__pyx_t_68 < 0) {
            __pyx_t_68 += __pyx_bshape_0_sig2;
            if (unlikely(__pyx_t_68 < 0)) __pyx_t_69 = 0;
          } else if (unlikely(__pyx_t_68 >= __pyx_bshape_0_sig2)) __pyx_t_69 = 0;
          if (unlikely(__pyx_t_69 != -1)) {
            __Pyx_RaiseBufferIndexError(__pyx_t_69);
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 681; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_sig2.buf, __pyx_t_68, __pyx_bstride_0_sig2) += 1;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":682
 *                         i = i2 - self.left_edge[2]
 *                         sig2[i] += 1
 *                         efficiency += 1             # <<<<<<<<<<<<<<
 *                         used = 1
 *             if used == 1:
 */
          __pyx_v_efficiency += 1.0;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":683
 *                         sig2[i] += 1
 *                         efficiency += 1
 *                         used = 1             # <<<<<<<<<<<<<<
 *             if used == 1:
 *                 self.grid_file_locations.append(grid_file_locations[gi,:])
 */
          __pyx_v_used = 1;
          __pyx_L26_continue:;
        }
        __pyx_L27_break:;
        __pyx_L22_continue:;
      }
      __pyx_L23_break:;
      __pyx_L18_continue:;
    }
    __pyx_L19_break:;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":684
 *                         efficiency += 1
 *                         used = 1
 *             if used == 1:             # <<<<<<<<<<<<<<
 *                 self.grid_file_locations.append(grid_file_locations[gi,:])
 * 
 */
    __pyx_t_16 = (__pyx_v_used == 1);
    if (__pyx_t_16) {

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":685
 *                         used = 1
 *             if used == 1:
 *                 self.grid_file_locations.append(grid_file_locations[gi,:])             # <<<<<<<<<<<<<<
 * 
 *         self.dd = np.ones(3, dtype='int64')
 */
      __pyx_t_43 = PyInt_FromLong(__pyx_v_gi); if (unlikely(!__pyx_t_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_43);
      __pyx_t_1 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_42 = PyTuple_New(2); if (unlikely(!__pyx_t_42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_42);
      PyTuple_SET_ITEM(__pyx_t_42, 0, __pyx_t_43);
      __Pyx_GIVEREF(__pyx_t_43);
      PyTuple_SET_ITEM(__pyx_t_42, 1, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_43 = 0;
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_grid_file_locations), __pyx_t_42); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_42); __pyx_t_42 = 0;
      __pyx_t_42 = __Pyx_PyObject_Append(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->grid_file_locations, __pyx_t_1); if (unlikely(!__pyx_t_42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_42);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_42); __pyx_t_42 = 0;
      goto __pyx_L30;
    }
    __pyx_L30:;
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":687
 *                 self.grid_file_locations.append(grid_file_locations[gi,:])
 * 
 *         self.dd = np.ones(3, dtype='int64')             # <<<<<<<<<<<<<<
 *         for i in range(3):
 *             efficiency /= self.dimensions[i]
 */
  __pyx_t_42 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_42);
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_42, __pyx_n_s__ones); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_42); __pyx_t_42 = 0;
  __pyx_t_42 = PyTuple_New(1); if (unlikely(!__pyx_t_42)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_42);
  __Pyx_INCREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_42, 0, __pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  __pyx_t_43 = PyDict_New(); if (unlikely(!__pyx_t_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_43));
  if (PyDict_SetItem(__pyx_t_43, ((PyObject *)__pyx_n_s__dtype), ((PyObject *)__pyx_n_s__int64)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_70 = PyEval_CallObjectWithKeywords(__pyx_t_1, __pyx_t_42, ((PyObject *)__pyx_t_43)); if (unlikely(!__pyx_t_70)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_70);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_42); __pyx_t_42 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_43)); __pyx_t_43 = 0;
  __Pyx_GIVEREF(__pyx_t_70);
  __Pyx_GOTREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  __Pyx_DECREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd = __pyx_t_70;
  __pyx_t_70 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":688
 * 
 *         self.dd = np.ones(3, dtype='int64')
 *         for i in range(3):             # <<<<<<<<<<<<<<
 *             efficiency /= self.dimensions[i]
 *             self.dd[i] = self.dimensions[i]
 */
  for (__pyx_t_2 = 0; __pyx_t_2 < 3; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":689
 *         self.dd = np.ones(3, dtype='int64')
 *         for i in range(3):
 *             efficiency /= self.dimensions[i]             # <<<<<<<<<<<<<<
 *             self.dd[i] = self.dimensions[i]
 *         #print "Efficiency is %0.3e" % (efficiency)
 */
    __pyx_v_efficiency /= (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_i]);

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":690
 *         for i in range(3):
 *             efficiency /= self.dimensions[i]
 *             self.dd[i] = self.dimensions[i]             # <<<<<<<<<<<<<<
 *         #print "Efficiency is %0.3e" % (efficiency)
 *         self.efficiency = efficiency
 */
    __pyx_t_70 = __Pyx_PyInt_to_py_npy_int64((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_i])); if (unlikely(!__pyx_t_70)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_70);
    if (__Pyx_SetItemInt(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd, __pyx_v_i, __pyx_t_70, sizeof(int), PyInt_FromLong) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 690; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_70); __pyx_t_70 = 0;
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":692
 *             self.dd[i] = self.dimensions[i]
 *         #print "Efficiency is %0.3e" % (efficiency)
 *         self.efficiency = efficiency             # <<<<<<<<<<<<<<
 * 
 *     def find_split(self):
 */
  ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->efficiency = __pyx_v_efficiency;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_42);
  __Pyx_XDECREF(__pyx_t_43);
  __Pyx_XDECREF(__pyx_t_70);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_right_edges);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_left_index);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_dimensions);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_grid_file_locations);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_grid_dimensions);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig1);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig2);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig0);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_left_edges);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yt.ramses_reader.ProtoSubgrid.__cinit__");
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_right_edges);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_left_index);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_dimensions);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_grid_file_locations);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_grid_dimensions);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig1);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig2);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig0);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_left_edges);
  __pyx_L2:;
  __Pyx_DECREF((PyObject *)__pyx_v_sig0);
  __Pyx_DECREF((PyObject *)__pyx_v_sig1);
  __Pyx_DECREF((PyObject *)__pyx_v_sig2);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":694
 *         self.efficiency = efficiency
 * 
 *     def find_split(self):             # <<<<<<<<<<<<<<
 *         # First look for zeros
 *         cdef int i, center, ax
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_find_split(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_find_split(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  int __pyx_v_i;
  int __pyx_v_center;
  int __pyx_v_ax;
  PyArrayObject *__pyx_v_axes;
  __pyx_t_5numpy_int64_t __pyx_v_strength;
  __pyx_t_5numpy_int64_t __pyx_v_zcstrength;
  __pyx_t_5numpy_int64_t __pyx_v_zcp;
  PyArrayObject *__pyx_v_sig;
  long __pyx_v_axi;
  long __pyx_v_zca;
  __pyx_t_5numpy_int64_t *__pyx_v_sig2d;
  Py_buffer __pyx_bstruct_axes;
  Py_ssize_t __pyx_bstride_0_axes = 0;
  Py_ssize_t __pyx_bshape_0_axes = 0;
  Py_buffer __pyx_bstruct_sig;
  Py_ssize_t __pyx_bstride_0_sig = 0;
  Py_ssize_t __pyx_bshape_0_sig = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyArrayObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  long __pyx_t_9;
  long __pyx_t_10;
  PyArrayObject *__pyx_t_11 = NULL;
  __pyx_t_5numpy_int64_t __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  long __pyx_t_19;
  long __pyx_t_20;
  int __pyx_t_21;
  long __pyx_t_22;
  __Pyx_RefNannySetupContext("find_split");
  __pyx_v_axes = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_sig = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_bstruct_axes.buf = NULL;
  __pyx_bstruct_sig.buf = NULL;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":699
 *         cdef np.ndarray[ndim=1, dtype=np.int64_t] axes
 *         cdef np.int64_t strength, zcstrength, zcp
 *         axes = np.argsort(self.dd)[::-1]             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.int64_t] sig
 *         for axi in range(3):
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__argsort); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  __Pyx_GIVEREF(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dd);
  __pyx_t_3 = PyObject_Call(__pyx_t_2, __pyx_t_1, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PySlice_New(Py_None, Py_None, __pyx_int_neg_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetItem(__pyx_t_3, __pyx_t_1); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = ((PyArrayObject *)__pyx_t_2);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_axes);
    __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_bstruct_axes, (PyObject*)__pyx_t_4, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
    if (unlikely(__pyx_t_5 < 0)) {
      PyErr_Fetch(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
      if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_axes, (PyObject*)__pyx_v_axes, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
        Py_XDECREF(__pyx_t_6); Py_XDECREF(__pyx_t_7); Py_XDECREF(__pyx_t_8);
        __Pyx_RaiseBufferFallbackError();
      } else {
        PyErr_Restore(__pyx_t_6, __pyx_t_7, __pyx_t_8);
      }
    }
    __pyx_bstride_0_axes = __pyx_bstruct_axes.strides[0];
    __pyx_bshape_0_axes = __pyx_bstruct_axes.shape[0];
    if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_4 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_v_axes));
  __pyx_v_axes = ((PyArrayObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":701
 *         axes = np.argsort(self.dd)[::-1]
 *         cdef np.ndarray[np.int64_t] sig
 *         for axi in range(3):             # <<<<<<<<<<<<<<
 *             ax = axes[axi]
 *             center = self.dimensions[ax] / 2
 */
  for (__pyx_t_9 = 0; __pyx_t_9 < 3; __pyx_t_9+=1) {
    __pyx_v_axi = __pyx_t_9;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":702
 *         cdef np.ndarray[np.int64_t] sig
 *         for axi in range(3):
 *             ax = axes[axi]             # <<<<<<<<<<<<<<
 *             center = self.dimensions[ax] / 2
 *             sig = self.sigs[ax]
 */
    __pyx_t_10 = __pyx_v_axi;
    __pyx_t_5 = -1;
    if (__pyx_t_10 < 0) {
      __pyx_t_10 += __pyx_bshape_0_axes;
      if (unlikely(__pyx_t_10 < 0)) __pyx_t_5 = 0;
    } else if (unlikely(__pyx_t_10 >= __pyx_bshape_0_axes)) __pyx_t_5 = 0;
    if (unlikely(__pyx_t_5 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_5);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_ax = (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_axes.buf, __pyx_t_10, __pyx_bstride_0_axes));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":703
 *         for axi in range(3):
 *             ax = axes[axi]
 *             center = self.dimensions[ax] / 2             # <<<<<<<<<<<<<<
 *             sig = self.sigs[ax]
 *             for i in range(self.dimensions[ax]):
 */
    __pyx_v_center = __Pyx_div___pyx_t_5numpy_int64_t((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_ax]), 2);

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":704
 *             ax = axes[axi]
 *             center = self.dimensions[ax] / 2
 *             sig = self.sigs[ax]             # <<<<<<<<<<<<<<
 *             for i in range(self.dimensions[ax]):
 *                 if sig[i] == 0 and i > 0 and i < self.dimensions[ax] - 1:
 */
    __pyx_t_2 = __Pyx_GetItemInt(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs, __pyx_v_ax, sizeof(int), PyInt_FromLong); if (!__pyx_t_2) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = ((PyArrayObject *)__pyx_t_2);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig);
      __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_bstruct_sig, (PyObject*)__pyx_t_11, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_5 < 0)) {
        PyErr_Fetch(&__pyx_t_8, &__pyx_t_7, &__pyx_t_6);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_sig, (PyObject*)__pyx_v_sig, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_8); Py_XDECREF(__pyx_t_7); Py_XDECREF(__pyx_t_6);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_8, __pyx_t_7, __pyx_t_6);
        }
      }
      __pyx_bstride_0_sig = __pyx_bstruct_sig.strides[0];
      __pyx_bshape_0_sig = __pyx_bstruct_sig.shape[0];
      if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_11 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_sig));
    __pyx_v_sig = ((PyArrayObject *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":705
 *             center = self.dimensions[ax] / 2
 *             sig = self.sigs[ax]
 *             for i in range(self.dimensions[ax]):             # <<<<<<<<<<<<<<
 *                 if sig[i] == 0 and i > 0 and i < self.dimensions[ax] - 1:
 *                     #print "zero: %s (%s)" % (i, self.dimensions[ax])
 */
    __pyx_t_12 = (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_ax]);
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_12; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":706
 *             sig = self.sigs[ax]
 *             for i in range(self.dimensions[ax]):
 *                 if sig[i] == 0 and i > 0 and i < self.dimensions[ax] - 1:             # <<<<<<<<<<<<<<
 *                     #print "zero: %s (%s)" % (i, self.dimensions[ax])
 *                     return 'zs', ax, i
 */
      __pyx_t_13 = __pyx_v_i;
      __pyx_t_14 = -1;
      if (__pyx_t_13 < 0) {
        __pyx_t_13 += __pyx_bshape_0_sig;
        if (unlikely(__pyx_t_13 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_13 >= __pyx_bshape_0_sig)) __pyx_t_14 = 0;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_15 = ((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_sig.buf, __pyx_t_13, __pyx_bstride_0_sig)) == 0);
      if (__pyx_t_15) {
        __pyx_t_16 = (__pyx_v_i > 0);
        if (__pyx_t_16) {
          __pyx_t_17 = (__pyx_v_i < ((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_ax]) - 1));
          __pyx_t_18 = __pyx_t_17;
        } else {
          __pyx_t_18 = __pyx_t_16;
        }
        __pyx_t_16 = __pyx_t_18;
      } else {
        __pyx_t_16 = __pyx_t_15;
      }
      if (__pyx_t_16) {

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":708
 *                 if sig[i] == 0 and i > 0 and i < self.dimensions[ax] - 1:
 *                     #print "zero: %s (%s)" % (i, self.dimensions[ax])
 *                     return 'zs', ax, i             # <<<<<<<<<<<<<<
 *         zcstrength = 0
 *         zcp = 0
 */
        __Pyx_XDECREF(__pyx_r);
        __pyx_t_2 = PyInt_FromLong(__pyx_v_ax); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = PyInt_FromLong(__pyx_v_i); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(((PyObject *)__pyx_n_s__zs));
        PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_n_s__zs));
        __Pyx_GIVEREF(((PyObject *)__pyx_n_s__zs));
        PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
        __Pyx_GIVEREF(__pyx_t_2);
        PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_2 = 0;
        __pyx_t_1 = 0;
        __pyx_r = __pyx_t_3;
        __pyx_t_3 = 0;
        goto __pyx_L0;
        goto __pyx_L9;
      }
      __pyx_L9:;
    }
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":709
 *                     #print "zero: %s (%s)" % (i, self.dimensions[ax])
 *                     return 'zs', ax, i
 *         zcstrength = 0             # <<<<<<<<<<<<<<
 *         zcp = 0
 *         zca = -1
 */
  __pyx_v_zcstrength = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":710
 *                     return 'zs', ax, i
 *         zcstrength = 0
 *         zcp = 0             # <<<<<<<<<<<<<<
 *         zca = -1
 *         cdef int temp
 */
  __pyx_v_zcp = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":711
 *         zcstrength = 0
 *         zcp = 0
 *         zca = -1             # <<<<<<<<<<<<<<
 *         cdef int temp
 *         cdef np.int64_t *sig2d
 */
  __pyx_v_zca = -1;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":714
 *         cdef int temp
 *         cdef np.int64_t *sig2d
 *         for axi in range(3):             # <<<<<<<<<<<<<<
 *             ax = axes[axi]
 *             sig = self.sigs[ax]
 */
  for (__pyx_t_9 = 0; __pyx_t_9 < 3; __pyx_t_9+=1) {
    __pyx_v_axi = __pyx_t_9;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":715
 *         cdef np.int64_t *sig2d
 *         for axi in range(3):
 *             ax = axes[axi]             # <<<<<<<<<<<<<<
 *             sig = self.sigs[ax]
 *             sig2d = <np.int64_t *> malloc(sizeof(np.int64_t) * self.dimensions[ax])
 */
    __pyx_t_19 = __pyx_v_axi;
    __pyx_t_5 = -1;
    if (__pyx_t_19 < 0) {
      __pyx_t_19 += __pyx_bshape_0_axes;
      if (unlikely(__pyx_t_19 < 0)) __pyx_t_5 = 0;
    } else if (unlikely(__pyx_t_19 >= __pyx_bshape_0_axes)) __pyx_t_5 = 0;
    if (unlikely(__pyx_t_5 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_5);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_v_ax = (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_axes.buf, __pyx_t_19, __pyx_bstride_0_axes));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":716
 *         for axi in range(3):
 *             ax = axes[axi]
 *             sig = self.sigs[ax]             # <<<<<<<<<<<<<<
 *             sig2d = <np.int64_t *> malloc(sizeof(np.int64_t) * self.dimensions[ax])
 *             sig2d[0] = sig2d[self.dimensions[ax]-1] = 0
 */
    __pyx_t_3 = __Pyx_GetItemInt(((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->sigs, __pyx_v_ax, sizeof(int), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_11 = ((PyArrayObject *)__pyx_t_3);
    {
      __Pyx_BufFmt_StackElem __pyx_stack[1];
      __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig);
      __pyx_t_5 = __Pyx_GetBufferAndValidate(&__pyx_bstruct_sig, (PyObject*)__pyx_t_11, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack);
      if (unlikely(__pyx_t_5 < 0)) {
        PyErr_Fetch(&__pyx_t_6, &__pyx_t_7, &__pyx_t_8);
        if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_sig, (PyObject*)__pyx_v_sig, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
          Py_XDECREF(__pyx_t_6); Py_XDECREF(__pyx_t_7); Py_XDECREF(__pyx_t_8);
          __Pyx_RaiseBufferFallbackError();
        } else {
          PyErr_Restore(__pyx_t_6, __pyx_t_7, __pyx_t_8);
        }
      }
      __pyx_bstride_0_sig = __pyx_bstruct_sig.strides[0];
      __pyx_bshape_0_sig = __pyx_bstruct_sig.shape[0];
      if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_t_11 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_v_sig));
    __pyx_v_sig = ((PyArrayObject *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":717
 *             ax = axes[axi]
 *             sig = self.sigs[ax]
 *             sig2d = <np.int64_t *> malloc(sizeof(np.int64_t) * self.dimensions[ax])             # <<<<<<<<<<<<<<
 *             sig2d[0] = sig2d[self.dimensions[ax]-1] = 0
 *             for i in range(1, self.dimensions[ax] - 1):
 */
    __pyx_v_sig2d = ((__pyx_t_5numpy_int64_t *)malloc(((sizeof(__pyx_t_5numpy_int64_t)) * (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_ax]))));

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":718
 *             sig = self.sigs[ax]
 *             sig2d = <np.int64_t *> malloc(sizeof(np.int64_t) * self.dimensions[ax])
 *             sig2d[0] = sig2d[self.dimensions[ax]-1] = 0             # <<<<<<<<<<<<<<
 *             for i in range(1, self.dimensions[ax] - 1):
 *                 sig2d[i] = sig[i-1] - 2*sig[i] + sig[i+1]
 */
    (__pyx_v_sig2d[0]) = 0;
    (__pyx_v_sig2d[((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_ax]) - 1)]) = 0;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":719
 *             sig2d = <np.int64_t *> malloc(sizeof(np.int64_t) * self.dimensions[ax])
 *             sig2d[0] = sig2d[self.dimensions[ax]-1] = 0
 *             for i in range(1, self.dimensions[ax] - 1):             # <<<<<<<<<<<<<<
 *                 sig2d[i] = sig[i-1] - 2*sig[i] + sig[i+1]
 *             for i in range(1, self.dimensions[ax] - 1):
 */
    __pyx_t_12 = ((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_ax]) - 1);
    for (__pyx_t_5 = 1; __pyx_t_5 < __pyx_t_12; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":720
 *             sig2d[0] = sig2d[self.dimensions[ax]-1] = 0
 *             for i in range(1, self.dimensions[ax] - 1):
 *                 sig2d[i] = sig[i-1] - 2*sig[i] + sig[i+1]             # <<<<<<<<<<<<<<
 *             for i in range(1, self.dimensions[ax] - 1):
 *                 if sig2d[i] * sig2d[i+1] <= 0:
 */
      __pyx_t_20 = (__pyx_v_i - 1);
      __pyx_t_14 = -1;
      if (__pyx_t_20 < 0) {
        __pyx_t_20 += __pyx_bshape_0_sig;
        if (unlikely(__pyx_t_20 < 0)) __pyx_t_14 = 0;
      } else if (unlikely(__pyx_t_20 >= __pyx_bshape_0_sig)) __pyx_t_14 = 0;
      if (unlikely(__pyx_t_14 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_14);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_14 = __pyx_v_i;
      __pyx_t_21 = -1;
      if (__pyx_t_14 < 0) {
        __pyx_t_14 += __pyx_bshape_0_sig;
        if (unlikely(__pyx_t_14 < 0)) __pyx_t_21 = 0;
      } else if (unlikely(__pyx_t_14 >= __pyx_bshape_0_sig)) __pyx_t_21 = 0;
      if (unlikely(__pyx_t_21 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_21);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_t_22 = (__pyx_v_i + 1);
      __pyx_t_21 = -1;
      if (__pyx_t_22 < 0) {
        __pyx_t_22 += __pyx_bshape_0_sig;
        if (unlikely(__pyx_t_22 < 0)) __pyx_t_21 = 0;
      } else if (unlikely(__pyx_t_22 >= __pyx_bshape_0_sig)) __pyx_t_21 = 0;
      if (unlikely(__pyx_t_21 != -1)) {
        __Pyx_RaiseBufferIndexError(__pyx_t_21);
        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      (__pyx_v_sig2d[__pyx_v_i]) = (((*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_sig.buf, __pyx_t_20, __pyx_bstride_0_sig)) - (2 * (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_sig.buf, __pyx_t_14, __pyx_bstride_0_sig)))) + (*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_sig.buf, __pyx_t_22, __pyx_bstride_0_sig)));
    }

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":721
 *             for i in range(1, self.dimensions[ax] - 1):
 *                 sig2d[i] = sig[i-1] - 2*sig[i] + sig[i+1]
 *             for i in range(1, self.dimensions[ax] - 1):             # <<<<<<<<<<<<<<
 *                 if sig2d[i] * sig2d[i+1] <= 0:
 *                     strength = labs(sig2d[i] - sig2d[i+1])
 */
    __pyx_t_12 = ((((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_ax]) - 1);
    for (__pyx_t_5 = 1; __pyx_t_5 < __pyx_t_12; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":722
 *                 sig2d[i] = sig[i-1] - 2*sig[i] + sig[i+1]
 *             for i in range(1, self.dimensions[ax] - 1):
 *                 if sig2d[i] * sig2d[i+1] <= 0:             # <<<<<<<<<<<<<<
 *                     strength = labs(sig2d[i] - sig2d[i+1])
 *                     if (strength > zcstrength) or \
 */
      __pyx_t_16 = (((__pyx_v_sig2d[__pyx_v_i]) * (__pyx_v_sig2d[(__pyx_v_i + 1)])) <= 0);
      if (__pyx_t_16) {

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":723
 *             for i in range(1, self.dimensions[ax] - 1):
 *                 if sig2d[i] * sig2d[i+1] <= 0:
 *                     strength = labs(sig2d[i] - sig2d[i+1])             # <<<<<<<<<<<<<<
 *                     if (strength > zcstrength) or \
 *                        (strength == zcstrength and (abs(center - i) <
 */
        __pyx_v_strength = labs(((__pyx_v_sig2d[__pyx_v_i]) - (__pyx_v_sig2d[(__pyx_v_i + 1)])));

        /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":724
 *                 if sig2d[i] * sig2d[i+1] <= 0:
 *                     strength = labs(sig2d[i] - sig2d[i+1])
 *                     if (strength > zcstrength) or \             # <<<<<<<<<<<<<<
 *                        (strength == zcstrength and (abs(center - i) <
 *                                                     abs(center - zcp))):
 */
        __pyx_t_16 = (__pyx_v_strength > __pyx_v_zcstrength);
        if (!__pyx_t_16) {

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":725
 *                     strength = labs(sig2d[i] - sig2d[i+1])
 *                     if (strength > zcstrength) or \
 *                        (strength == zcstrength and (abs(center - i) <             # <<<<<<<<<<<<<<
 *                                                     abs(center - zcp))):
 *                         zcstrength = strength
 */
          __pyx_t_15 = (__pyx_v_strength == __pyx_v_zcstrength);
          if (__pyx_t_15) {

            /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":726
 *                     if (strength > zcstrength) or \
 *                        (strength == zcstrength and (abs(center - i) <
 *                                                     abs(center - zcp))):             # <<<<<<<<<<<<<<
 *                         zcstrength = strength
 *                         zcp = i
 */
            __pyx_t_18 = (abs((__pyx_v_center - __pyx_v_i)) < abs((__pyx_v_center - __pyx_v_zcp)));
            __pyx_t_17 = __pyx_t_18;
          } else {
            __pyx_t_17 = __pyx_t_15;
          }
          __pyx_t_15 = __pyx_t_17;
        } else {
          __pyx_t_15 = __pyx_t_16;
        }
        if (__pyx_t_15) {

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":727
 *                        (strength == zcstrength and (abs(center - i) <
 *                                                     abs(center - zcp))):
 *                         zcstrength = strength             # <<<<<<<<<<<<<<
 *                         zcp = i
 *                         zca = ax
 */
          __pyx_v_zcstrength = __pyx_v_strength;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":728
 *                                                     abs(center - zcp))):
 *                         zcstrength = strength
 *                         zcp = i             # <<<<<<<<<<<<<<
 *                         zca = ax
 *             free(sig2d)
 */
          __pyx_v_zcp = __pyx_v_i;

          /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":729
 *                         zcstrength = strength
 *                         zcp = i
 *                         zca = ax             # <<<<<<<<<<<<<<
 *             free(sig2d)
 *         #print "zcp: %s (%s)" % (zcp, self.dimensions[ax])
 */
          __pyx_v_zca = __pyx_v_ax;
          goto __pyx_L17;
        }
        __pyx_L17:;
        goto __pyx_L16;
      }
      __pyx_L16:;
    }

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":730
 *                         zcp = i
 *                         zca = ax
 *             free(sig2d)             # <<<<<<<<<<<<<<
 *         #print "zcp: %s (%s)" % (zcp, self.dimensions[ax])
 *         return 'zc', ax, zcp
 */
    free(__pyx_v_sig2d);
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":732
 *             free(sig2d)
 *         #print "zcp: %s (%s)" % (zcp, self.dimensions[ax])
 *         return 'zc', ax, zcp             # <<<<<<<<<<<<<<
 * 
 *     def get_properties(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyInt_FromLong(__pyx_v_ax); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = __Pyx_PyInt_to_py_npy_int64(__pyx_v_zcp); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 732; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__zc));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_n_s__zc));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__zc));
  PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_3 = 0;
  __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_axes);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yt.ramses_reader.ProtoSubgrid.find_split");
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_axes);
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_sig);
  __pyx_L2:;
  __Pyx_DECREF((PyObject *)__pyx_v_axes);
  __Pyx_DECREF((PyObject *)__pyx_v_sig);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":734
 *         return 'zc', ax, zcp
 * 
 *     def get_properties(self):             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.int64_t, ndim=2] tr = np.empty((3,3), dtype='int64')
 *         cdef int i
 */

static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_get_properties(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_get_properties(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyArrayObject *__pyx_v_tr = 0;
  int __pyx_v_i;
  Py_buffer __pyx_bstruct_tr;
  Py_ssize_t __pyx_bstride_0_tr = 0;
  Py_ssize_t __pyx_bstride_1_tr = 0;
  Py_ssize_t __pyx_bshape_0_tr = 0;
  Py_ssize_t __pyx_bshape_1_tr = 0;
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyArrayObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  long __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  long __pyx_t_10;
  int __pyx_t_11;
  long __pyx_t_12;
  int __pyx_t_13;
  __Pyx_RefNannySetupContext("get_properties");
  __pyx_bstruct_tr.buf = NULL;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":735
 * 
 *     def get_properties(self):
 *         cdef np.ndarray[np.int64_t, ndim=2] tr = np.empty((3,3), dtype='int64')             # <<<<<<<<<<<<<<
 *         cdef int i
 *         for i in range(3):
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__empty); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  __Pyx_INCREF(__pyx_int_3);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_3);
  __Pyx_GIVEREF(__pyx_int_3);
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  if (PyDict_SetItem(__pyx_t_1, ((PyObject *)__pyx_n_s__dtype), ((PyObject *)__pyx_n_s__int64)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = PyEval_CallObjectWithKeywords(__pyx_t_2, __pyx_t_3, ((PyObject *)__pyx_t_1)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_5numpy_ndarray))))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = ((PyArrayObject *)__pyx_t_4);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_bstruct_tr, (PyObject*)__pyx_t_5, &__Pyx_TypeInfo_nn___pyx_t_5numpy_int64_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 2, 0, __pyx_stack) == -1)) {
      __pyx_v_tr = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_bstruct_tr.buf = NULL;
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 735; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    } else {__pyx_bstride_0_tr = __pyx_bstruct_tr.strides[0]; __pyx_bstride_1_tr = __pyx_bstruct_tr.strides[1];
      __pyx_bshape_0_tr = __pyx_bstruct_tr.shape[0]; __pyx_bshape_1_tr = __pyx_bstruct_tr.shape[1];
    }
  }
  __pyx_t_5 = 0;
  __pyx_v_tr = ((PyArrayObject *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":737
 *         cdef np.ndarray[np.int64_t, ndim=2] tr = np.empty((3,3), dtype='int64')
 *         cdef int i
 *         for i in range(3):             # <<<<<<<<<<<<<<
 *             tr[0,i] = self.left_edge[i]
 *             tr[1,i] = self.right_edge[i]
 */
  for (__pyx_t_6 = 0; __pyx_t_6 < 3; __pyx_t_6+=1) {
    __pyx_v_i = __pyx_t_6;

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":738
 *         cdef int i
 *         for i in range(3):
 *             tr[0,i] = self.left_edge[i]             # <<<<<<<<<<<<<<
 *             tr[1,i] = self.right_edge[i]
 *             tr[2,i] = self.dimensions[i]
 */
    __pyx_t_7 = 0;
    __pyx_t_8 = __pyx_v_i;
    __pyx_t_9 = -1;
    if (__pyx_t_7 < 0) {
      __pyx_t_7 += __pyx_bshape_0_tr;
      if (unlikely(__pyx_t_7 < 0)) __pyx_t_9 = 0;
    } else if (unlikely(__pyx_t_7 >= __pyx_bshape_0_tr)) __pyx_t_9 = 0;
    if (__pyx_t_8 < 0) {
      __pyx_t_8 += __pyx_bshape_1_tr;
      if (unlikely(__pyx_t_8 < 0)) __pyx_t_9 = 1;
    } else if (unlikely(__pyx_t_8 >= __pyx_bshape_1_tr)) __pyx_t_9 = 1;
    if (unlikely(__pyx_t_9 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_9);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 738; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_tr.buf, __pyx_t_7, __pyx_bstride_0_tr, __pyx_t_8, __pyx_bstride_1_tr) = (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->left_edge[__pyx_v_i]);

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":739
 *         for i in range(3):
 *             tr[0,i] = self.left_edge[i]
 *             tr[1,i] = self.right_edge[i]             # <<<<<<<<<<<<<<
 *             tr[2,i] = self.dimensions[i]
 *         return tr
 */
    __pyx_t_10 = 1;
    __pyx_t_9 = __pyx_v_i;
    __pyx_t_11 = -1;
    if (__pyx_t_10 < 0) {
      __pyx_t_10 += __pyx_bshape_0_tr;
      if (unlikely(__pyx_t_10 < 0)) __pyx_t_11 = 0;
    } else if (unlikely(__pyx_t_10 >= __pyx_bshape_0_tr)) __pyx_t_11 = 0;
    if (__pyx_t_9 < 0) {
      __pyx_t_9 += __pyx_bshape_1_tr;
      if (unlikely(__pyx_t_9 < 0)) __pyx_t_11 = 1;
    } else if (unlikely(__pyx_t_9 >= __pyx_bshape_1_tr)) __pyx_t_11 = 1;
    if (unlikely(__pyx_t_11 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_11);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_tr.buf, __pyx_t_10, __pyx_bstride_0_tr, __pyx_t_9, __pyx_bstride_1_tr) = (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->right_edge[__pyx_v_i]);

    /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":740
 *             tr[0,i] = self.left_edge[i]
 *             tr[1,i] = self.right_edge[i]
 *             tr[2,i] = self.dimensions[i]             # <<<<<<<<<<<<<<
 *         return tr
 */
    __pyx_t_12 = 2;
    __pyx_t_11 = __pyx_v_i;
    __pyx_t_13 = -1;
    if (__pyx_t_12 < 0) {
      __pyx_t_12 += __pyx_bshape_0_tr;
      if (unlikely(__pyx_t_12 < 0)) __pyx_t_13 = 0;
    } else if (unlikely(__pyx_t_12 >= __pyx_bshape_0_tr)) __pyx_t_13 = 0;
    if (__pyx_t_11 < 0) {
      __pyx_t_11 += __pyx_bshape_1_tr;
      if (unlikely(__pyx_t_11 < 0)) __pyx_t_13 = 1;
    } else if (unlikely(__pyx_t_11 >= __pyx_bshape_1_tr)) __pyx_t_13 = 1;
    if (unlikely(__pyx_t_13 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_13);
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 740; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    *__Pyx_BufPtrStrided2d(__pyx_t_5numpy_int64_t *, __pyx_bstruct_tr.buf, __pyx_t_12, __pyx_bstride_0_tr, __pyx_t_11, __pyx_bstride_1_tr) = (((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)__pyx_v_self)->dimensions[__pyx_v_i]);
  }

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":741
 *             tr[1,i] = self.right_edge[i]
 *             tr[2,i] = self.dimensions[i]
 *         return tr             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_tr));
  __pyx_r = ((PyObject *)__pyx_v_tr);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_bstruct_tr);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("yt.ramses_reader.ProtoSubgrid.get_properties");
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_bstruct_tr);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_tr);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":188
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

static CYTHON_UNUSED int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pf_5numpy_7ndarray___getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  char *__pyx_t_9;
  __Pyx_RefNannySetupContext("__getbuffer__");
  if (__pyx_v_info == NULL) return 0;
  __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(__pyx_v_info->obj);

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":194
 *             # of flags
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":195
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":197
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(((PyArrayObject *)__pyx_v_self));

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":199
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":200
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L5;
  }
  /*else*/ {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":202
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L5:;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":204
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS);
  if (__pyx_t_1) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":205
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
    __pyx_t_2 = (!PyArray_CHKFLAGS(((PyArrayObject *)__pyx_v_self), NPY_C_CONTIGUOUS));
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":206
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_kp_u_3));
    PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_u_3));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_3));
    __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":208
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_3 = ((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS);
  if (__pyx_t_3) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":209
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
    __pyx_t_1 = (!PyArray_CHKFLAGS(((PyArrayObject *)__pyx_v_self), NPY_F_CONTIGUOUS));
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":210
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_kp_u_4));
    PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_u_4));
    __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_4));
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_4, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L7;
  }
  __pyx_L7:;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":212
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(((PyArrayObject *)__pyx_v_self));

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":213
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info. This is allocated
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":214
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info. This is allocated
 *                 # as one block, strides first.
 */
  if (__pyx_v_copy_shape) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":217
 *                 # Allocate new buffer for strides and shape info. This is allocated
 *                 # as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * __pyx_v_ndim) * 2)));

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":218
 *                 # as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":219
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_6 = __pyx_v_ndim;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_i = __pyx_t_7;

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":220
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":221
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(((PyArrayObject *)__pyx_v_self))[__pyx_v_i]);
    }
    goto __pyx_L8;
  }
  /*else*/ {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":223
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(((PyArrayObject *)__pyx_v_self)));

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":224
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(((PyArrayObject *)__pyx_v_self)));
  }
  __pyx_L8:;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":225
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":226
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(((PyArrayObject *)__pyx_v_self));

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":227
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!PyArray_ISWRITEABLE(((PyArrayObject *)__pyx_v_self)));

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":230
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":231
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __Pyx_INCREF(((PyObject *)((PyArrayObject *)__pyx_v_self)->descr));
  __pyx_v_descr = ((PyArrayObject *)__pyx_v_self)->descr;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":235
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":237
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = (!__pyx_v_hasfields);
  if (__pyx_t_2) {
    __pyx_t_3 = (!__pyx_v_copy_shape);
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":239
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L11;
  }
  /*else*/ {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":242
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(__pyx_v_self);
    __Pyx_GIVEREF(__pyx_v_self);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = __pyx_v_self;
  }
  __pyx_L11:;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":244
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or
 */
  __pyx_t_1 = (!__pyx_v_hasfields);
  if (__pyx_t_1) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":245
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 */
    __pyx_v_t = __pyx_v_descr->type_num;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":246
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_1 = (__pyx_v_descr->byteorder == '>');
    if (__pyx_t_1) {
      __pyx_t_2 = __pyx_v_little_endian;
    } else {
      __pyx_t_2 = __pyx_t_1;
    }
    if (!__pyx_t_2) {

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":247
 *                 t = descr.type_num
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
      __pyx_t_1 = (__pyx_v_descr->byteorder == '<');
      if (__pyx_t_1) {
        __pyx_t_3 = (!__pyx_v_little_endian);
        __pyx_t_8 = __pyx_t_3;
      } else {
        __pyx_t_8 = __pyx_t_1;
      }
      __pyx_t_1 = __pyx_t_8;
    } else {
      __pyx_t_1 = __pyx_t_2;
    }
    if (__pyx_t_1) {

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":248
 *                 if ((descr.byteorder == '>' and little_endian) or
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(((PyObject *)__pyx_kp_u_5));
      PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_kp_u_5));
      __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_5));
      __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_4, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L13;
    }
    __pyx_L13:;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":249
 *                     (descr.byteorder == '<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_BYTE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__b;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":250
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_UBYTE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__B;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":251
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_SHORT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__h;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":252
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_USHORT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__H;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":253
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_INT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__i;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":254
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_UINT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__I;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":255
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__l;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":256
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_ULONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__L;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":257
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONGLONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__q;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":258
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_ULONGLONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Q;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":259
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_FLOAT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__f;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":260
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_DOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__d;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":261
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONGDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__g;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":262
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CFLOAT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zf;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":263
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zd;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":264
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CLONGDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zg;
      goto __pyx_L14;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":265
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
    __pyx_t_1 = (__pyx_v_t == NPY_OBJECT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__O;
      goto __pyx_L14;
    }
    /*else*/ {

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":267
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_5 = PyInt_FromLong(__pyx_v_t); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_4 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_6), __pyx_t_5); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_4));
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_t_4));
      __Pyx_GIVEREF(((PyObject *)__pyx_t_4));
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_5, NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_4, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 267; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L14:;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":268
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":269
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L12;
  }
  /*else*/ {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":271
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = '^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":272
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = '^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":273
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = '^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":276
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)             # <<<<<<<<<<<<<<
 *                 f[0] = 0 # Terminate format string
 * 
 */
    __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_9;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":277
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = 0 # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = 0;
  }
  __pyx_L12:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__");
  __pyx_r = -1;
  __Pyx_GOTREF(__pyx_v_info->obj);
  __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":279
 *                 f[0] = 0 # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

static CYTHON_UNUSED void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pf_5numpy_7ndarray___releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__releasebuffer__");

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":280
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = PyArray_HASFIELDS(((PyArrayObject *)__pyx_v_self));
  if (__pyx_t_1) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":281
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":282
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":283
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L6;
  }
  __pyx_L6:;

  __Pyx_RefNannyFinishContext();
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":756
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1");

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":757
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":759
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2");

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":760
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 760; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":762
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3");

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":763
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 763; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":765
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4");

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":766
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 766; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":768
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5");

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":769
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5");
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":771
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields;
  PyObject *__pyx_v_childname;
  PyObject *__pyx_v_new_offset;
  PyObject *__pyx_v_t;
  char *__pyx_r;
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  char *__pyx_t_10;
  __Pyx_RefNannySetupContext("_util_dtypestring");
  __pyx_v_child = ((PyArray_Descr *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_fields = ((PyObject *)Py_None); __Pyx_INCREF(Py_None);
  __pyx_v_childname = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_new_offset = Py_None; __Pyx_INCREF(Py_None);
  __pyx_v_t = Py_None; __Pyx_INCREF(Py_None);

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":778
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":779
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":782
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (likely(((PyObject *)__pyx_v_descr->names) != Py_None)) {
    __pyx_t_1 = 0; __pyx_t_2 = ((PyObject *)__pyx_v_descr->names); __Pyx_INCREF(__pyx_t_2);
  } else {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable"); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 782; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  for (;;) {
    if (__pyx_t_1 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_1); __Pyx_INCREF(__pyx_t_3); __pyx_t_1++;
    __Pyx_DECREF(__pyx_v_childname);
    __pyx_v_childname = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":783
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (!__pyx_t_3) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 783; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_v_fields));
    __pyx_v_fields = ((PyObject *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":784
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 */
    if (likely(((PyObject *)__pyx_v_fields) != Py_None) && likely(PyTuple_GET_SIZE(((PyObject *)__pyx_v_fields)) == 2)) {
      PyObject* tuple = ((PyObject *)__pyx_v_fields);
      __pyx_t_3 = PyTuple_GET_ITEM(tuple, 0); __Pyx_INCREF(__pyx_t_3);
      if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyTuple_GET_ITEM(tuple, 1); __Pyx_INCREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_v_child));
      __pyx_v_child = ((PyArray_Descr *)__pyx_t_3);
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_v_new_offset);
      __pyx_v_new_offset = __pyx_t_4;
      __pyx_t_4 = 0;
    } else {
      __Pyx_UnpackTupleError(((PyObject *)__pyx_v_fields), 2);
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 784; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":786
 *         child, new_offset = fields
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = PyInt_FromLong((__pyx_v_end - __pyx_v_f)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_int_15, Py_LT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 786; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_6) {

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":787
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 */
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(((PyObject *)__pyx_kp_u_7));
      PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_kp_u_7));
      __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_7));
      __pyx_t_3 = PyObject_Call(__pyx_builtin_RuntimeError, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L5;
    }
    __pyx_L5:;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":789
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == '>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_6 = (__pyx_v_child->byteorder == '>');
    if (__pyx_t_6) {
      __pyx_t_7 = __pyx_v_little_endian;
    } else {
      __pyx_t_7 = __pyx_t_6;
    }
    if (!__pyx_t_7) {

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":790
 * 
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
      __pyx_t_6 = (__pyx_v_child->byteorder == '<');
      if (__pyx_t_6) {
        __pyx_t_8 = (!__pyx_v_little_endian);
        __pyx_t_9 = __pyx_t_8;
      } else {
        __pyx_t_9 = __pyx_t_6;
      }
      __pyx_t_6 = __pyx_t_9;
    } else {
      __pyx_t_6 = __pyx_t_7;
    }
    if (__pyx_t_6) {

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":791
 *         if ((child.byteorder == '>' and little_endian) or
 *             (child.byteorder == '<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(((PyObject *)__pyx_kp_u_5));
      PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_u_5));
      __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_5));
      __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_Raise(__pyx_t_5, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 791; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":801
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_5 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_t_5, __pyx_v_new_offset, Py_LT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 801; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!__pyx_t_6) break;

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":802
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":803
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f += 1;

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":804
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      (__pyx_v_offset[0]) += 1;
    }

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":806
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    (__pyx_v_offset[0]) += __pyx_v_child->elsize;

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":808
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_6 = (!PyDataType_HASFIELDS(__pyx_v_child));
    if (__pyx_t_6) {

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":809
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_3 = PyInt_FromLong(__pyx_v_child->type_num); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 809; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_v_t);
      __pyx_v_t = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":810
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_6 = ((__pyx_v_end - __pyx_v_f) < 5);
      if (__pyx_t_6) {

        /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":811
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_INCREF(((PyObject *)__pyx_kp_u_8));
        PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_kp_u_8));
        __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_8));
        __pyx_t_5 = PyObject_Call(__pyx_builtin_RuntimeError, __pyx_t_3, NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 811; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        goto __pyx_L10;
      }
      __pyx_L10:;

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":814
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 814; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":815
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 815; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":816
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 816; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":817
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 817; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":818
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 818; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":819
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 819; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":820
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 820; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":821
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":822
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 822; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":823
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":824
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 824; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":825
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_3 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 825; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":826
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_5 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":827
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f += 1;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":828
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f += 1;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":829
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f += 1;
        goto __pyx_L11;
      }

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":830
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_5 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_6) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L11;
      }
      /*else*/ {

        /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":832
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_3 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_6), __pyx_v_t); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_3));
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, ((PyObject *)__pyx_t_3));
        __Pyx_GIVEREF(((PyObject *)__pyx_t_3));
        __pyx_t_3 = 0;
        __pyx_t_3 = PyObject_Call(__pyx_builtin_ValueError, __pyx_t_5, NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_Raise(__pyx_t_3, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L11:;

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":833
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f += 1;
      goto __pyx_L9;
    }
    /*else*/ {

      /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":837
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_10 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_10 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_10;
    }
    __pyx_L9:;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":838
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("numpy._util_dtypestring");
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_DECREF((PyObject *)__pyx_v_child);
  __Pyx_DECREF(__pyx_v_fields);
  __Pyx_DECREF(__pyx_v_childname);
  __Pyx_DECREF(__pyx_v_new_offset);
  __Pyx_DECREF(__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":953
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("set_array_base");

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":955
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  if (__pyx_t_1) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":956
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":958
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
    Py_INCREF(__pyx_v_base);

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":959
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":960
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":961
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  __Pyx_RefNannyFinishContext();
}

/* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":963
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base");

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":964
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = (__pyx_v_arr->base == NULL);
  if (__pyx_t_1) {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":965
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":967
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_2yt_13ramses_reader_RAMSES_tree_proxy(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)o);
  p->field_ind = Py_None; Py_INCREF(Py_None);
  p->field_names = Py_None; Py_INCREF(Py_None);
  if (__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2yt_13ramses_reader_RAMSES_tree_proxy(PyObject *o) {
  struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *p = (struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)o;
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_XDECREF(p->field_ind);
  Py_XDECREF(p->field_names);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_2yt_13ramses_reader_RAMSES_tree_proxy(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *p = (struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)o;
  if (p->field_ind) {
    e = (*v)(p->field_ind, a); if (e) return e;
  }
  if (p->field_names) {
    e = (*v)(p->field_names, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_2yt_13ramses_reader_RAMSES_tree_proxy(PyObject *o) {
  struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *p = (struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->field_ind);
  p->field_ind = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->field_names);
  p->field_names = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_2yt_13ramses_reader_17RAMSES_tree_proxy_field_ind(PyObject *o, void *x) {
  return __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___get__(o);
}

static int __pyx_setprop_2yt_13ramses_reader_17RAMSES_tree_proxy_field_ind(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___set__(o, v);
  }
  else {
    return __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_9field_ind___del__(o);
  }
}

static PyObject *__pyx_getprop_2yt_13ramses_reader_17RAMSES_tree_proxy_field_names(PyObject *o, void *x) {
  return __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___get__(o);
}

static int __pyx_setprop_2yt_13ramses_reader_17RAMSES_tree_proxy_field_names(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___set__(o, v);
  }
  else {
    return __pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_11field_names___del__(o);
  }
}

static PyMethodDef __pyx_methods_2yt_13ramses_reader_RAMSES_tree_proxy[] = {
  {__Pyx_NAMESTR("count_zones"), (PyCFunction)__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_count_zones, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("ensure_loaded"), (PyCFunction)__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_ensure_loaded, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("clear_tree"), (PyCFunction)__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_clear_tree, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_file_info"), (PyCFunction)__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_get_file_info, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("fill_hierarchy_arrays"), (PyCFunction)__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_fill_hierarchy_arrays, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("read_grid"), (PyCFunction)__pyx_pf_2yt_13ramses_reader_17RAMSES_tree_proxy_read_grid, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2yt_13ramses_reader_RAMSES_tree_proxy[] = {
  {(char *)"field_ind", __pyx_getprop_2yt_13ramses_reader_17RAMSES_tree_proxy_field_ind, __pyx_setprop_2yt_13ramses_reader_17RAMSES_tree_proxy_field_ind, 0, 0},
  {(char *)"field_names", __pyx_getprop_2yt_13ramses_reader_17RAMSES_tree_proxy_field_names, __pyx_setprop_2yt_13ramses_reader_17RAMSES_tree_proxy_field_names, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_RAMSES_tree_proxy = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_RAMSES_tree_proxy = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_RAMSES_tree_proxy = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_RAMSES_tree_proxy = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_2yt_13ramses_reader_RAMSES_tree_proxy = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yt.ramses_reader.RAMSES_tree_proxy"), /*tp_name*/
  sizeof(struct __pyx_obj_2yt_13ramses_reader_RAMSES_tree_proxy), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2yt_13ramses_reader_RAMSES_tree_proxy, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_RAMSES_tree_proxy, /*tp_as_number*/
  &__pyx_tp_as_sequence_RAMSES_tree_proxy, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_RAMSES_tree_proxy, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_RAMSES_tree_proxy, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_2yt_13ramses_reader_RAMSES_tree_proxy, /*tp_traverse*/
  __pyx_tp_clear_2yt_13ramses_reader_RAMSES_tree_proxy, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2yt_13ramses_reader_RAMSES_tree_proxy, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2yt_13ramses_reader_RAMSES_tree_proxy, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2yt_13ramses_reader_RAMSES_tree_proxy, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyObject *__pyx_tp_new_2yt_13ramses_reader_ProtoSubgrid(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)o);
  p->sigs = Py_None; Py_INCREF(Py_None);
  p->grid_file_locations = Py_None; Py_INCREF(Py_None);
  p->dd = Py_None; Py_INCREF(Py_None);
  if (__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_2yt_13ramses_reader_ProtoSubgrid(PyObject *o) {
  struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *p = (struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)o;
  Py_XDECREF(p->sigs);
  Py_XDECREF(p->grid_file_locations);
  Py_XDECREF(p->dd);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_2yt_13ramses_reader_ProtoSubgrid(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *p = (struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)o;
  if (p->sigs) {
    e = (*v)(p->sigs, a); if (e) return e;
  }
  if (p->grid_file_locations) {
    e = (*v)(p->grid_file_locations, a); if (e) return e;
  }
  if (p->dd) {
    e = (*v)(p->dd, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_2yt_13ramses_reader_ProtoSubgrid(PyObject *o) {
  struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *p = (struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->sigs);
  p->sigs = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->grid_file_locations);
  p->grid_file_locations = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->dd);
  p->dd = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_2yt_13ramses_reader_12ProtoSubgrid_efficiency(PyObject *o, void *x) {
  return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_10efficiency___get__(o);
}

static int __pyx_setprop_2yt_13ramses_reader_12ProtoSubgrid_efficiency(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_10efficiency___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_2yt_13ramses_reader_12ProtoSubgrid_sigs(PyObject *o, void *x) {
  return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___get__(o);
}

static int __pyx_setprop_2yt_13ramses_reader_12ProtoSubgrid_sigs(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___set__(o, v);
  }
  else {
    return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_4sigs___del__(o);
  }
}

static PyObject *__pyx_getprop_2yt_13ramses_reader_12ProtoSubgrid_grid_file_locations(PyObject *o, void *x) {
  return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___get__(o);
}

static int __pyx_setprop_2yt_13ramses_reader_12ProtoSubgrid_grid_file_locations(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___set__(o, v);
  }
  else {
    return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_19grid_file_locations___del__(o);
  }
}

static PyObject *__pyx_getprop_2yt_13ramses_reader_12ProtoSubgrid_dd(PyObject *o, void *x) {
  return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___get__(o);
}

static int __pyx_setprop_2yt_13ramses_reader_12ProtoSubgrid_dd(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___set__(o, v);
  }
  else {
    return __pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_2dd___del__(o);
  }
}

static PyMethodDef __pyx_methods_2yt_13ramses_reader_ProtoSubgrid[] = {
  {__Pyx_NAMESTR("find_split"), (PyCFunction)__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_find_split, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_properties"), (PyCFunction)__pyx_pf_2yt_13ramses_reader_12ProtoSubgrid_get_properties, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_2yt_13ramses_reader_ProtoSubgrid[] = {
  {(char *)"efficiency", __pyx_getprop_2yt_13ramses_reader_12ProtoSubgrid_efficiency, __pyx_setprop_2yt_13ramses_reader_12ProtoSubgrid_efficiency, 0, 0},
  {(char *)"sigs", __pyx_getprop_2yt_13ramses_reader_12ProtoSubgrid_sigs, __pyx_setprop_2yt_13ramses_reader_12ProtoSubgrid_sigs, 0, 0},
  {(char *)"grid_file_locations", __pyx_getprop_2yt_13ramses_reader_12ProtoSubgrid_grid_file_locations, __pyx_setprop_2yt_13ramses_reader_12ProtoSubgrid_grid_file_locations, 0, 0},
  {(char *)"dd", __pyx_getprop_2yt_13ramses_reader_12ProtoSubgrid_dd, __pyx_setprop_2yt_13ramses_reader_12ProtoSubgrid_dd, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ProtoSubgrid = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*nb_long*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if (PY_MAJOR_VERSION >= 3) || (Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX)
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ProtoSubgrid = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ProtoSubgrid = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ProtoSubgrid = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

PyTypeObject __pyx_type_2yt_13ramses_reader_ProtoSubgrid = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("yt.ramses_reader.ProtoSubgrid"), /*tp_name*/
  sizeof(struct __pyx_obj_2yt_13ramses_reader_ProtoSubgrid), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_2yt_13ramses_reader_ProtoSubgrid, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION >= 3
  0, /*reserved*/
  #else
  0, /*tp_compare*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_ProtoSubgrid, /*tp_as_number*/
  &__pyx_tp_as_sequence_ProtoSubgrid, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ProtoSubgrid, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ProtoSubgrid, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_2yt_13ramses_reader_ProtoSubgrid, /*tp_traverse*/
  __pyx_tp_clear_2yt_13ramses_reader_ProtoSubgrid, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_2yt_13ramses_reader_ProtoSubgrid, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_2yt_13ramses_reader_ProtoSubgrid, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_2yt_13ramses_reader_ProtoSubgrid, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("ramses_reader"),
    __Pyx_DOCSTR(__pyx_k_9), /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_n_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 1},
  {&__pyx_kp_u_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 1, 0, 0},
  {&__pyx_kp_u_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 1, 0, 0},
  {&__pyx_kp_u_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 1, 0, 0},
  {&__pyx_kp_u_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 1, 0, 0},
  {&__pyx_kp_u_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 1, 0, 0},
  {&__pyx_kp_u_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 1, 0, 0},
  {&__pyx_n_s__F, __pyx_k__F, sizeof(__pyx_k__F), 0, 0, 1, 1},
  {&__pyx_n_s__H0, __pyx_k__H0, sizeof(__pyx_k__H0), 0, 0, 1, 1},
  {&__pyx_n_s__RuntimeError, __pyx_k__RuntimeError, sizeof(__pyx_k__RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s__ValueError, __pyx_k__ValueError, sizeof(__pyx_k__ValueError), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s__aexp, __pyx_k__aexp, sizeof(__pyx_k__aexp), 0, 0, 1, 1},
  {&__pyx_n_s__argsort, __pyx_k__argsort, sizeof(__pyx_k__argsort), 0, 0, 1, 1},
  {&__pyx_n_s__base, __pyx_k__base, sizeof(__pyx_k__base), 0, 0, 1, 1},
  {&__pyx_n_s__begin, __pyx_k__begin, sizeof(__pyx_k__begin), 0, 0, 1, 1},
  {&__pyx_n_s__boxlen, __pyx_k__boxlen, sizeof(__pyx_k__boxlen), 0, 0, 1, 1},
  {&__pyx_n_s__buf, __pyx_k__buf, sizeof(__pyx_k__buf), 0, 0, 1, 1},
  {&__pyx_n_s__byteorder, __pyx_k__byteorder, sizeof(__pyx_k__byteorder), 0, 0, 1, 1},
  {&__pyx_n_s__c_str, __pyx_k__c_str, sizeof(__pyx_k__c_str), 0, 0, 1, 1},
  {&__pyx_n_s__child_mask, __pyx_k__child_mask, sizeof(__pyx_k__child_mask), 0, 0, 1, 1},
  {&__pyx_n_s__data, __pyx_k__data, sizeof(__pyx_k__data), 0, 0, 1, 1},
  {&__pyx_n_s__dd, __pyx_k__dd, sizeof(__pyx_k__dd), 0, 0, 1, 1},
  {&__pyx_n_s__descr, __pyx_k__descr, sizeof(__pyx_k__descr), 0, 0, 1, 1},
  {&__pyx_n_s__dimensions, __pyx_k__dimensions, sizeof(__pyx_k__dimensions), 0, 0, 1, 1},
  {&__pyx_n_s__domain, __pyx_k__domain, sizeof(__pyx_k__domain), 0, 0, 1, 1},
  {&__pyx_n_s__domain_index, __pyx_k__domain_index, sizeof(__pyx_k__domain_index), 0, 0, 1, 1},
  {&__pyx_n_s__dtype, __pyx_k__dtype, sizeof(__pyx_k__dtype), 0, 0, 1, 1},
  {&__pyx_n_s__efficiency, __pyx_k__efficiency, sizeof(__pyx_k__efficiency), 0, 0, 1, 1},
  {&__pyx_n_s__empty, __pyx_k__empty, sizeof(__pyx_k__empty), 0, 0, 1, 1},
  {&__pyx_n_s__end, __pyx_k__end, sizeof(__pyx_k__end), 0, 0, 1, 1},
  {&__pyx_n_s__ensure_loaded, __pyx_k__ensure_loaded, sizeof(__pyx_k__ensure_loaded), 0, 0, 1, 1},
  {&__pyx_n_s__field, __pyx_k__field, sizeof(__pyx_k__field), 0, 0, 1, 1},
  {&__pyx_n_s__field_ind, __pyx_k__field_ind, sizeof(__pyx_k__field_ind), 0, 0, 1, 1},
  {&__pyx_n_s__field_names, __pyx_k__field_names, sizeof(__pyx_k__field_names), 0, 0, 1, 1},
  {&__pyx_n_s__fields, __pyx_k__fields, sizeof(__pyx_k__fields), 0, 0, 1, 1},
  {&__pyx_n_s__float64, __pyx_k__float64, sizeof(__pyx_k__float64), 0, 0, 1, 1},
  {&__pyx_n_s__fn, __pyx_k__fn, sizeof(__pyx_k__fn), 0, 0, 1, 1},
  {&__pyx_n_s__format, __pyx_k__format, sizeof(__pyx_k__format), 0, 0, 1, 1},
  {&__pyx_n_s__get_parent, __pyx_k__get_parent, sizeof(__pyx_k__get_parent), 0, 0, 1, 1},
  {&__pyx_n_s__grid_dimensions, __pyx_k__grid_dimensions, sizeof(__pyx_k__grid_dimensions), 0, 0, 1, 1},
  {&__pyx_n_s__grid_file_locations, __pyx_k__grid_file_locations, sizeof(__pyx_k__grid_file_locations), 0, 0, 1, 1},
  {&__pyx_n_s__grid_id, __pyx_k__grid_id, sizeof(__pyx_k__grid_id), 0, 0, 1, 1},
  {&__pyx_n_s__grid_levels, __pyx_k__grid_levels, sizeof(__pyx_k__grid_levels), 0, 0, 1, 1},
  {&__pyx_n_s__grid_pos_double, __pyx_k__grid_pos_double, sizeof(__pyx_k__grid_pos_double), 0, 0, 1, 1},
  {&__pyx_n_s__hydro_datas, __pyx_k__hydro_datas, sizeof(__pyx_k__hydro_datas), 0, 0, 1, 1},
  {&__pyx_n_s__int64, __pyx_k__int64, sizeof(__pyx_k__int64), 0, 0, 1, 1},
  {&__pyx_n_s__is_finest, __pyx_k__is_finest, sizeof(__pyx_k__is_finest), 0, 0, 1, 1},
  {&__pyx_n_s__itemsize, __pyx_k__itemsize, sizeof(__pyx_k__itemsize), 0, 0, 1, 1},
  {&__pyx_n_s__left_edge, __pyx_k__left_edge, sizeof(__pyx_k__left_edge), 0, 0, 1, 1},
  {&__pyx_n_s__left_edges, __pyx_k__left_edges, sizeof(__pyx_k__left_edges), 0, 0, 1, 1},
  {&__pyx_n_s__left_index, __pyx_k__left_index, sizeof(__pyx_k__left_index), 0, 0, 1, 1},
  {&__pyx_n_s__level, __pyx_k__level, sizeof(__pyx_k__level), 0, 0, 1, 1},
  {&__pyx_n_s__levelmax, __pyx_k__levelmax, sizeof(__pyx_k__levelmax), 0, 0, 1, 1},
  {&__pyx_n_s__levelmin, __pyx_k__levelmin, sizeof(__pyx_k__levelmin), 0, 0, 1, 1},
  {&__pyx_n_s__loaded, __pyx_k__loaded, sizeof(__pyx_k__loaded), 0, 0, 1, 1},
  {&__pyx_n_s__m_AMR_levels, __pyx_k__m_AMR_levels, sizeof(__pyx_k__m_AMR_levels), 0, 0, 1, 1},
  {&__pyx_n_s__m_header, __pyx_k__m_header, sizeof(__pyx_k__m_header), 0, 0, 1, 1},
  {&__pyx_n_s__m_maxlevel, __pyx_k__m_maxlevel, sizeof(__pyx_k__m_maxlevel), 0, 0, 1, 1},
  {&__pyx_n_s__m_nvars, __pyx_k__m_nvars, sizeof(__pyx_k__m_nvars), 0, 0, 1, 1},
  {&__pyx_n_s__m_var_array, __pyx_k__m_var_array, sizeof(__pyx_k__m_var_array), 0, 0, 1, 1},
  {&__pyx_n_s__m_varnames, __pyx_k__m_varnames, sizeof(__pyx_k__m_varnames), 0, 0, 1, 1},
  {&__pyx_n_s__names, __pyx_k__names, sizeof(__pyx_k__names), 0, 0, 1, 1},
  {&__pyx_n_s__ncpu, __pyx_k__ncpu, sizeof(__pyx_k__ncpu), 0, 0, 1, 1},
  {&__pyx_n_s__ndim, __pyx_k__ndim, sizeof(__pyx_k__ndim), 0, 0, 1, 1},
  {&__pyx_n_s__ndomains, __pyx_k__ndomains, sizeof(__pyx_k__ndomains), 0, 0, 1, 1},
  {&__pyx_n_s__next, __pyx_k__next, sizeof(__pyx_k__next), 0, 0, 1, 1},
  {&__pyx_n_s__nfields, __pyx_k__nfields, sizeof(__pyx_k__nfields), 0, 0, 1, 1},
  {&__pyx_n_s__ngridmax, __pyx_k__ngridmax, sizeof(__pyx_k__ngridmax), 0, 0, 1, 1},
  {&__pyx_n_s__np, __pyx_k__np, sizeof(__pyx_k__np), 0, 0, 1, 1},
  {&__pyx_n_s__nstep_coarse, __pyx_k__nstep_coarse, sizeof(__pyx_k__nstep_coarse), 0, 0, 1, 1},
  {&__pyx_n_s__numpy, __pyx_k__numpy, sizeof(__pyx_k__numpy), 0, 0, 1, 1},
  {&__pyx_n_s__obj, __pyx_k__obj, sizeof(__pyx_k__obj), 0, 0, 1, 1},
  {&__pyx_n_s__omega_b, __pyx_k__omega_b, sizeof(__pyx_k__omega_b), 0, 0, 1, 1},
  {&__pyx_n_s__omega_k, __pyx_k__omega_k, sizeof(__pyx_k__omega_k), 0, 0, 1, 1},
  {&__pyx_n_s__omega_l, __pyx_k__omega_l, sizeof(__pyx_k__omega_l), 0, 0, 1, 1},
  {&__pyx_n_s__omega_m, __pyx_k__omega_m, sizeof(__pyx_k__omega_m), 0, 0, 1, 1},
  {&__pyx_n_s__ones, __pyx_k__ones, sizeof(__pyx_k__ones), 0, 0, 1, 1},
  {&__pyx_n_s__order, __pyx_k__order, sizeof(__pyx_k__order), 0, 0, 1, 1},
  {&__pyx_n_s__range, __pyx_k__range, sizeof(__pyx_k__range), 0, 0, 1, 1},
  {&__pyx_n_s__read, __pyx_k__read, sizeof(__pyx_k__read), 0, 0, 1, 1},
  {&__pyx_n_s__readonly, __pyx_k__readonly, sizeof(__pyx_k__readonly), 0, 0, 1, 1},
  {&__pyx_n_s__right_edge, __pyx_k__right_edge, sizeof(__pyx_k__right_edge), 0, 0, 1, 1},
  {&__pyx_n_s__right_edges, __pyx_k__right_edges, sizeof(__pyx_k__right_edges), 0, 0, 1, 1},
  {&__pyx_n_s__rsnap, __pyx_k__rsnap, sizeof(__pyx_k__rsnap), 0, 0, 1, 1},
  {&__pyx_n_s__shape, __pyx_k__shape, sizeof(__pyx_k__shape), 0, 0, 1, 1},
  {&__pyx_n_s__signature, __pyx_k__signature, sizeof(__pyx_k__signature), 0, 0, 1, 1},
  {&__pyx_n_s__sigs, __pyx_k__sigs, sizeof(__pyx_k__sigs), 0, 0, 1, 1},
  {&__pyx_n_s__size, __pyx_k__size, sizeof(__pyx_k__size), 0, 0, 1, 1},
  {&__pyx_n_s__snapshot_name, __pyx_k__snapshot_name, sizeof(__pyx_k__snapshot_name), 0, 0, 1, 1},
  {&__pyx_n_s__strides, __pyx_k__strides, sizeof(__pyx_k__strides), 0, 0, 1, 1},
  {&__pyx_n_s__suboffsets, __pyx_k__suboffsets, sizeof(__pyx_k__suboffsets), 0, 0, 1, 1},
  {&__pyx_n_s__time, __pyx_k__time, sizeof(__pyx_k__time), 0, 0, 1, 1},
  {&__pyx_n_s__trees, __pyx_k__trees, sizeof(__pyx_k__trees), 0, 0, 1, 1},
  {&__pyx_n_s__type_num, __pyx_k__type_num, sizeof(__pyx_k__type_num), 0, 0, 1, 1},
  {&__pyx_n_s__unit_d, __pyx_k__unit_d, sizeof(__pyx_k__unit_d), 0, 0, 1, 1},
  {&__pyx_n_s__unit_l, __pyx_k__unit_l, sizeof(__pyx_k__unit_l), 0, 0, 1, 1},
  {&__pyx_n_s__unit_t, __pyx_k__unit_t, sizeof(__pyx_k__unit_t), 0, 0, 1, 1},
  {&__pyx_n_s__varname, __pyx_k__varname, sizeof(__pyx_k__varname), 0, 0, 1, 1},
  {&__pyx_n_s__x, __pyx_k__x, sizeof(__pyx_k__x), 0, 0, 1, 1},
  {&__pyx_n_s__y, __pyx_k__y, sizeof(__pyx_k__y), 0, 0, 1, 1},
  {&__pyx_n_s__z, __pyx_k__z, sizeof(__pyx_k__z), 0, 0, 1, 1},
  {&__pyx_n_s__zc, __pyx_k__zc, sizeof(__pyx_k__zc), 0, 0, 1, 1},
  {&__pyx_n_s__zeros, __pyx_k__zeros, sizeof(__pyx_k__zeros), 0, 0, 1, 1},
  {&__pyx_n_s__zs, __pyx_k__zs, sizeof(__pyx_k__zs), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 399; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_n_s__ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetName(__pyx_b, __pyx_n_s__RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 787; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_15 = PyInt_FromLong(15); if (unlikely(!__pyx_int_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initramses_reader(void); /*proto*/
PyMODINIT_FUNC initramses_reader(void)
#else
PyMODINIT_FUNC PyInit_ramses_reader(void); /*proto*/
PyMODINIT_FUNC PyInit_ramses_reader(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  #if CYTHON_REFNANNY
  void* __pyx_refnanny = NULL;
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  __pyx_refnanny = __Pyx_RefNanny->SetupContext("PyMODINIT_FUNC PyInit_ramses_reader(void)", __LINE__, __FILE__);
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __pyx_binding_PyCFunctionType_USED
  if (__pyx_binding_PyCFunctionType_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("ramses_reader"), __pyx_methods, __Pyx_DOCSTR(__pyx_k_9), 0, PYTHON_API_VERSION);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  #if PY_MAJOR_VERSION < 3
  Py_INCREF(__pyx_m);
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME));
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_yt__ramses_reader) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_2yt_13ramses_reader_RAMSES_tree_proxy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "RAMSES_tree_proxy", (PyObject *)&__pyx_type_2yt_13ramses_reader_RAMSES_tree_proxy) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 370; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2yt_13ramses_reader_RAMSES_tree_proxy = &__pyx_type_2yt_13ramses_reader_RAMSES_tree_proxy;
  if (PyType_Ready(&__pyx_type_2yt_13ramses_reader_ProtoSubgrid) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "ProtoSubgrid", (PyObject *)&__pyx_type_2yt_13ramses_reader_ProtoSubgrid) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_2yt_13ramses_reader_ProtoSubgrid = &__pyx_type_2yt_13ramses_reader_ProtoSubgrid;
  /*--- Type import code ---*/
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 149; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 159; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 172; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":32
 * from libc.stdlib cimport malloc, free, abs, calloc, labs
 * 
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * cimport cython
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__numpy), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__np, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "/Users/matthewturk/yt/yt/yt/ramses_reader.pyx":1
 * """             # <<<<<<<<<<<<<<
 * Wrapping code for Oliver Hahn's RamsesRead++
 * 
 */
  __pyx_t_1 = PyDict_New(); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_1));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_1)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

  /* "/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/site-packages/Cython/Includes/numpy.pxd":963
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  if (__pyx_m) {
    __Pyx_AddTraceback("init yt.ramses_reader");
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init yt.ramses_reader");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result)
        PyErr_SetObject(PyExc_NameError, name);
    return result;
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AS_STRING(kw_name));
        #endif
}

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *number, *more_or_less;

    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    number = (num_expected == 1) ? "" : "s";
    PyErr_Format(PyExc_TypeError,
        #if PY_VERSION_HEX < 0x02050000
            "%s() takes %s %d positional argument%s (%d given)",
        #else
            "%s() takes %s %zd positional argument%s (%zd given)",
        #endif
        func_name, more_or_less, num_expected, number, num_found);
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;

    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
        } else {
            #if PY_MAJOR_VERSION < 3
            if (unlikely(!PyString_CheckExact(key)) && unlikely(!PyString_Check(key))) {
            #else
            if (unlikely(!PyUnicode_CheckExact(key)) && unlikely(!PyUnicode_Check(key))) {
            #endif
                goto invalid_keyword_type;
            } else {
                for (name = first_kw_arg; *name; name++) {
                    #if PY_MAJOR_VERSION >= 3
                    if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                        PyUnicode_Compare(**name, key) == 0) break;
                    #else
                    if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                        _PyString_Eq(**name, key)) break;
                    #endif
                }
                if (*name) {
                    values[name-argnames] = value;
                } else {
                    /* unexpected keyword found */
                    for (name=argnames; name != first_kw_arg; name++) {
                        if (**name == key) goto arg_passed_twice;
                        #if PY_MAJOR_VERSION >= 3
                        if (PyUnicode_GET_SIZE(**name) == PyUnicode_GET_SIZE(key) &&
                            PyUnicode_Compare(**name, key) == 0) goto arg_passed_twice;
                        #else
                        if (PyString_GET_SIZE(**name) == PyString_GET_SIZE(key) &&
                            _PyString_Eq(**name, key)) goto arg_passed_twice;
                        #endif
                    }
                    if (kwds2) {
                        if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
                    } else {
                        goto invalid_keyword;
                    }
                }
            }
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, **name);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}



static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed,
    const char *name, int exact)
{
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (none_allowed && obj == Py_None) return 1;
    else if (exact) {
        if (Py_TYPE(obj) == type) return 1;
    }
    else {
        if (PyObject_TypeCheck(obj, type)) return 1;
    }
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, Py_TYPE(obj)->tp_name);
    return 0;
}

static CYTHON_INLINE int __Pyx_IsLittleEndian(void) {
  unsigned int n = 1;
  return *(unsigned char*)(&n) != 0;
}

typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  int new_count, enc_count;
  int is_complex;
  char enc_type;
  char packmode;
} __Pyx_BufFmt_Context;

static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}

static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t < '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}

static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  char msg[] = {ch, 0};
  PyErr_Format(PyExc_ValueError, "Unexpected format string character: '%s'", msg);
}

static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case 'b': return "'char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 0: return "end";
    default: return "unparseable format string";
  }
}

static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}

static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'B': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }    
  }
}

typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_s_long_long;
#endif

static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_s_long_long) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}

static size_t __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c': case 'b': case 'h': case 'i': case 'l': case 'q': return 'I';
    case 'B': case 'H': case 'I': case 'L': case 'Q': return 'U';
    case 'f': case 'd': case 'g': return (is_complex ? 'C' : 'R');
    case 'O': return 'O';
    case 'P': return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }    
  }
}

static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}

static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset;
  if (ctx->enc_type == 0) return 0;
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
  
    if (ctx->packmode == '@' || ctx->packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->packmode == '@') {
      int align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      int align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
    }

    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        /* special case -- treat as struct rather than complex number */
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
    
      __Pyx_BufFmt_RaiseExpected(ctx);
      return -1;
    }

    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %"PY_FORMAT_SIZE_T"d "
                   "but %"PY_FORMAT_SIZE_T"d expected", ctx->fmt_offset, offset);
      return -1;
    }

    ctx->fmt_offset += size;
  
    --ctx->enc_count; /* Consume from buffer string */

    /* Done checking, move to next field, pushing or popping struct stack if needed */
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break; /* breaks both loops as ctx->enc_count == 0 */
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue; /* empty struct */
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;    
}

static int __Pyx_BufFmt_FirstPack(__Pyx_BufFmt_Context* ctx) {
  if (ctx->enc_type != 0 || ctx->packmode != '@') {
    PyErr_SetString(PyExc_ValueError, "Buffer packing mode currently only allowed at beginning of format string (this is a defect)");
    return -1;
  }
  return 0;
}

static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case 10:
      case 13:
        ++ts;
        break;
      case '<':
        if (!__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        if (__Pyx_BufFmt_FirstPack(ctx) == -1) return NULL;
        ctx->packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_IsLittleEndian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        if (__Pyx_BufFmt_FirstPack(ctx) == -1) return NULL;
        ctx->packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        if (__Pyx_BufFmt_FirstPack(ctx) == -1) return NULL;
        ctx->packmode = *ts++;
        break;
      case 'T': /* substruct */
        {
          int i;
          const char* ts_after_sub;
          int struct_count = ctx->new_count;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
        }
        break;
      case '}': /* end of substruct; either repeat or move on */
        ++ts;
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }        /* fall through */
      case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O':
        if (ctx->enc_type == *ts && got_Z == ctx->is_complex) {
          /* Continue pooling same type */
          ctx->enc_count += ctx->new_count;
        } else {
          /* New type */
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_count = ctx->new_count;
          ctx->enc_type = *ts;
          ctx->is_complex = got_Z;
        }
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      default:
        {
          ctx->new_count = __Pyx_BufFmt_ParseNumber(&ts);
          if (ctx->new_count == -1) { /* First char was not a digit */
            char msg[2] = { *ts, 0 };
            PyErr_Format(PyExc_ValueError,
                         "Does not understand character buffer dtype format string ('%s')", msg);
            return NULL;
          }
        }
      
    }
  }
}

static CYTHON_INLINE void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}

static CYTHON_INLINE int __Pyx_GetBufferAndValidate(Py_buffer* buf, PyObject* obj, __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack) {
  if (obj == Py_None) {
    __Pyx_ZeroBuffer(buf);
    return 0;
  }
  buf->buf = NULL;
  if (__Pyx_GetBuffer(obj, buf, flags) == -1) goto fail;
  if (buf->ndim != nd) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if ((unsigned)buf->itemsize != dtype->size) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%"PY_FORMAT_SIZE_T"d byte%s) does not match size of '%s' (%"PY_FORMAT_SIZE_T"d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name,
      dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_ZeroBuffer(buf);
  return -1;
}

static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (info->buf == NULL) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}
static void __Pyx_RaiseBufferIndexError(int axis) {
  PyErr_Format(PyExc_IndexError,
     "Out of bounds on buffer access (axis %d)", axis);
}


static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();

    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}

static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;

    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}


static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static void __Pyx_RaiseBufferFallbackError(void) {
  PyErr_Format(PyExc_ValueError,
     "Buffer acquisition failed on assignment; and then reacquiring the old buffer failed too!");
}


static CYTHON_INLINE __pyx_t_5numpy_int64_t __Pyx_div___pyx_t_5numpy_int64_t(__pyx_t_5numpy_int64_t a, __pyx_t_5numpy_int64_t b) {
    __pyx_t_5numpy_int64_t q = a / b;
    __pyx_t_5numpy_int64_t r = a - q*b;
    q -= ((r != 0) & ((r ^ b) < 0));
    return q;
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
                 "need more than %d value%s to unpack", (int)index,
        #else
                 "need more than %zd value%s to unpack", index,
        #endif
                 (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
        #if PY_VERSION_HEX < 0x02050000
            "too many values to unpack (expected %d)", (int)expected);
        #else
            "too many values to unpack (expected %zd)", expected);
        #endif
}

static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
  #if PY_VERSION_HEX >= 0x02060000
  if (Py_TYPE(obj)->tp_flags & Py_TPFLAGS_HAVE_NEWBUFFER)
      return PyObject_GetBuffer(obj, view, flags);
  #endif
  if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) return __pyx_pf_5numpy_7ndarray___getbuffer__(obj, view, flags);
  else {
  PyErr_Format(PyExc_TypeError, "'%100s' does not have the buffer interface", Py_TYPE(obj)->tp_name);
  return -1;
    }
}

static void __Pyx_ReleaseBuffer(Py_buffer *view) {
  PyObject* obj = view->obj;
  if (obj) {
if (PyObject_TypeCheck(obj, __pyx_ptype_5numpy_ndarray)) __pyx_pf_5numpy_7ndarray___releasebuffer__(obj, view);
    Py_DECREF(obj);
    view->obj = NULL;
  }
}

#endif

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list) {
    PyObject *py_import = 0;
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    py_import = __Pyx_GetAttrString(__pyx_b, "__import__");
    if (!py_import)
        goto bad;
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
bad:
    Py_XDECREF(empty_list);
    Py_XDECREF(py_import);
    Py_XDECREF(empty_dict);
    return module;
}

#if PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}

static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    PyObject* v;
    int i;

    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                return -1;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            return -1;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0 &&
                isspace(Py_CHARMASK(s[len-1])) &&
                s[len-1] != ' ')
                    PyFile_SoftSpace(f, 0);
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            return -1;
        PyFile_SoftSpace(f, 0);
    }
    return 0;
}

#else /* Python 3 has a print function */

static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = __Pyx_GetAttrString(__pyx_b, "print");
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItemString(kwargs, "file", stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItemString(kwargs, "end", end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItemString(__pyx_print_kwargs, "end", end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}

#endif

static CYTHON_INLINE long __Pyx_pow_long(long b, long e) {
    long t = b;
    switch (e) {
        case 3:
            t *= b;
        case 2:
            t *= b;
        case 1:
            return t;
        case 0:
            return 1;
    }
    if (unlikely(e<0)) return 0;
    t = 1;
    while (likely(e)) {
        t *= (b * (e&1)) | ((~e)&1);    /* 1 or b */
        b *= b;
        e >>= 1;
    }
    return t;
}

static CYTHON_INLINE npy_int64 __Pyx_PyInt_from_py_npy_int64(PyObject* x) {
    const npy_int64 neg_one = (npy_int64)-1, const_zero = (npy_int64)0;
    const int is_unsigned = const_zero < neg_one;
    if (sizeof(npy_int64) == sizeof(char)) {
        if (is_unsigned)
            return (npy_int64)__Pyx_PyInt_AsUnsignedChar(x);
        else
            return (npy_int64)__Pyx_PyInt_AsSignedChar(x);
    } else if (sizeof(npy_int64) == sizeof(short)) {
        if (is_unsigned)
            return (npy_int64)__Pyx_PyInt_AsUnsignedShort(x);
        else
            return (npy_int64)__Pyx_PyInt_AsSignedShort(x);
    } else if (sizeof(npy_int64) == sizeof(int)) {
        if (is_unsigned)
            return (npy_int64)__Pyx_PyInt_AsUnsignedInt(x);
        else
            return (npy_int64)__Pyx_PyInt_AsSignedInt(x);
    } else if (sizeof(npy_int64) == sizeof(long)) {
        if (is_unsigned)
            return (npy_int64)__Pyx_PyInt_AsUnsignedLong(x);
        else
            return (npy_int64)__Pyx_PyInt_AsSignedLong(x);
    } else if (sizeof(npy_int64) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return (npy_int64)__Pyx_PyInt_AsUnsignedLongLong(x);
        else
            return (npy_int64)__Pyx_PyInt_AsSignedLongLong(x);
    }  else {
        npy_int64 val;
        PyObject *v = __Pyx_PyNumber_Int(x);
        #if PY_VERSION_HEX < 0x03000000
        if (likely(v) && !PyLong_Check(v)) {
            PyObject *tmp = v;
            v = PyNumber_Long(tmp);
            Py_DECREF(tmp);
        }
        #endif
        if (likely(v)) {
            int one = 1; int is_little = (int)*(unsigned char *)&one;
            unsigned char *bytes = (unsigned char *)&val;
            int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                          bytes, sizeof(val),
                                          is_little, !is_unsigned);
            Py_DECREF(v);
            if (likely(!ret))
                return val;
        }
        return (npy_int64)-1;
    }
}

static CYTHON_INLINE PyObject *__Pyx_PyInt_to_py_npy_int64(npy_int64 val) {
    const npy_int64 neg_one = (npy_int64)-1, const_zero = (npy_int64)0;
    const int is_unsigned = const_zero < neg_one;
    if ((sizeof(npy_int64) == sizeof(char))  ||
        (sizeof(npy_int64) == sizeof(short))) {
        return PyInt_FromLong((long)val);
    } else if ((sizeof(npy_int64) == sizeof(int)) ||
               (sizeof(npy_int64) == sizeof(long))) {
        if (is_unsigned)
            return PyLong_FromUnsignedLong((unsigned long)val);
        else
            return PyInt_FromLong((long)val);
    } else if (sizeof(npy_int64) == sizeof(PY_LONG_LONG)) {
        if (is_unsigned)
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG)val);
        else
            return PyLong_FromLongLong((PY_LONG_LONG)val);
    } else {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&val;
        return _PyLong_FromByteArray(bytes, sizeof(npy_int64), 
                                     little, !is_unsigned);
    }
}

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
/*
    static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
#if HAVE_HYPOT
        return hypotf(z.real, z.imag);
#else
        return sqrtf(z.real*z.real + z.imag*z.imag);
#endif
    }
*/
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
/*
    static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
#if HAVE_HYPOT
        return hypot(z.real, z.imag);
#else
        return sqrt(z.real*z.real + z.imag*z.imag);
#endif
    }
*/
#endif

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    /* First, check the traceback argument, replacing None with NULL. */
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    /* Next, replace a missing value with None */
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        /* Raising an instance.  The value should be a dummy. */
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        /* Normalize to raise <class>, <instance> */
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }

    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}

#else /* Python 3+ */

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;

    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (!PyExceptionClass_Check(type)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }

    PyErr_SetObject(type, value);

    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }

bad:
    return;
}
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return PyLong_AsUnsignedLong(x);
        } else {
            return PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return PyLong_AsUnsignedLongLong(x);
        } else {
            return PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    long size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];

    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(class_name);
    #else
    py_name = PyUnicode_FromString(class_name);
    #endif
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError, 
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
    if (!strict && ((PyTypeObject *)result)->tp_basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning), 
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        PyErr_Warn(NULL, warning);
        #else
        PyErr_WarnEx(NULL, warning, 0);
        #endif
    }
    else if (((PyTypeObject *)result)->tp_basicsize != size) {
        PyErr_Format(PyExc_ValueError, 
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;

    #if PY_MAJOR_VERSION < 3
    py_name = PyString_FromString(name);
    #else
    py_name = PyUnicode_FromString(name);
    #endif
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"

static void __Pyx_AddTraceback(const char *funcname) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyObject *py_globals = 0;
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;

    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(__pyx_filename);
    #else
    py_srcfile = PyUnicode_FromString(__pyx_filename);
    #endif
    if (!py_srcfile) goto bad;
    if (__pyx_clineno) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, __pyx_clineno);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_code = PyCode_New(
        0,            /*int argcount,*/
        #if PY_MAJOR_VERSION >= 3
        0,            /*int kwonlyargcount,*/
        #endif
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        __pyx_lineno,   /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    if (!py_code) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = __pyx_lineno;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
